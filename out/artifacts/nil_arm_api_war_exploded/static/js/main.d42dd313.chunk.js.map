{"version":3,"sources":["store/reducers/GeneralSlice.ts","config/config.ts","services/UserService.ts","ENUMS.ts","services/TepService.ts","services/DictService.ts","services/DepartmentService.ts","services/ReportService.ts","services/FilialService.ts","services/NormfactorService.ts","services/SettingsService.ts","services/StatusService.ts","services/RoleService.ts","store/store.ts","hooks/useTimeout.ts","hooks/redux.ts","components/DeclineTepModal.tsx","components/ConfirmTepModal.tsx","components/TepModal.tsx","components/BaseGrid.js","components/GridSettingsModal.tsx","modules/teps/TepModule.tsx","components/NormfactorModal.tsx","modules/dicts/NormfactorModule.tsx","components/DictGraph.js","components/DictModal.tsx","modules/dicts/DictModule.tsx","components/UserModal.tsx","modules/administration/UserModule.tsx","components/DepartmentModal.tsx","modules/administration/DepartmentModule.tsx","components/BeforeReportDownloadModal.tsx","modules/reports/ConsolidatedByStructureReportModule.tsx","modules/reports/AboutFiilingReportModule.tsx","modules/reports/TEPDynamicReportModule.tsx","modules/administration/PlanYearModule.tsx","assets/chapter0000.png","assets/chapter0001-1.png","assets/chapter0001-2.png","assets/chapter0002-1.png","assets/chapter0002-2.png","assets/chapter002.png","assets/chapter003-1.png","assets/chapter003-2.png","assets/chapter0030.png","assets/chapter0031.png","assets/chapter0032.png","assets/chapter0040.png","assets/chapter0041.png","assets/chapter0042.png","modules/info/InfoModule.tsx","modules/reports/ConsolidatedByFilialReportModule.tsx","Pages/MainScreen.tsx","config/Router.tsx","index.tsx"],"names":["initialState","userInfo","filials","statuses","departments","roles","maxYear","Date","getFullYear","settings","year","startPeriod","endPeriod","generalSlice","createSlice","name","reducers","setUserInfo","state","action","payload","setFilials","setDepartments","setSettings","setStatuses","setRoles","actions","host","document","location","split","port","secure","protocol","slice","CellSize","GroupedColumnTepsGrid","GroupedColumnReport1Grid","GroupedColumnReport2Grid","GroupedColumnReport3Grid","userAPI","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","build","getUsers","query","url","providesTags","result","getUser","createUser","mutation","post","method","body","invalidatesTags","updateUser","tepsAPI","getTeps","updateTep","getNumOfNewTeps","createNewTeps","updateTepsStatuses","getPrevYearValue","dictAPI","createDict","getDicts","getDictsNormfactors","dictId","getDictGraphData","getAllDicts","updateDict","departmentAPI","getDepartments","createDepartment","updateDepartment","reportAPI","getReport1","getReport2","getReport3","getReport4","filialAPI","getFilials","normfactorAPI","preCreateNormfactor","createNormfactors","updateNormfactors","settingsAPI","updateSettings","statusAPI","getStatuses","roleAPI","getRoles","rootReducer","combineReducers","userReducer","reducer","useTimeout","useState","tick","setTick","timeRef","useRef","startTimer","useCallback","timer","setInterval","current","startRequestTimer","endRequestTimer","clearInterval","useAppDispatch","useDispatch","useAppSelector","useSelector","Text","Simulate","change","Typography","TextArea","Input","DeclineTepModal","props","disabled","setDisabled","left","top","bottom","right","bounds","setBounds","draggableRef","declineExplanation","setDeclineExplanation","title","centered","open","declineModal","visible","onCancel","setDeclineModal","prev","footer","modalRender","modal","onStart","event","uiData","_event","window","documentElement","clientWidth","clientHeight","targetRect","getBoundingClientRect","x","y","ref","width","style","display","flexDirection","onMouseOver","onMouseLeave","justifyContent","marginBottom","marginTop","fontSize","value","onChange","e","target","danger","onClick","trim","handleUpdateTep","status","code","setDeclineExplanationZam","setStatus","setDeclineExplanationBoss","warningEmptyDeclineField","ConfirmTepModal","generalStore","store","setVisible","find","declineExplanationZam","TepModal","useUpdateTepMutation","teps","data","error","isLoading","isSuccess","useGetPrevYearValueMutation","prevYearValueReq","planYearValue","setPlanYearValue","prevYearValue","setPrevYearValue","record","changeExplanation","setChangeExplanation","declineExplanationBoss","undefined","selectedRole","setSelectedRole","modalWidth","visibleConfirmModal","setVisibleConfirmModal","useEffect","role","toString","length","warningEmptyPlanYearField","tep","id","plan_year_value","prev_year_value","statusId","change_explanation","decline_explanation_zam","decline_explanation_boss","warningEmptyChangeExplanationField","errorUpdateTep","successUpdateTep","setData","map","normfactor","nfName","filial","planYear","alignItems","height","size","responsibilityStructure","maxWidth","overflow","color","type","marginLeft","progressDot","direction","Step","fontWeight","allowClear","showIcon","message","ResizableTitle","onResize","restProps","handle","className","stopPropagation","draggableOpts","enableUserSelectHack","BaseGrid","components","header","cell","handleResize","index","setState","columns","nextColumns","dataSource","bordered","loading","showHeader","pagination","onRow","statusColored","that","dragProps","onDragEnd","fromIndex","toIndex","item","splice","nodeSelector","handleSelector","ignoreSelector","nextContext","this","col","onHeaderCell","column","DragColumn","scroll","React","Component","Title","GridSettingsModal","alignSelf","level","defaultChecked","checked","setShowHeader","successUpdatedSettings","showBorders","setShowBorders","setFixedDimensionColumn","setFixedNfColumn","setFixedNfNumberColumn","fixedNfNumberColumn","fixedNfColumn","fixedDimensionColumn","setSelectedGroup","setGrouped","Group","NONE","isGrouped","DICT","NF","RESP_STRUCT","STATUS","selectedGroup","getUniqStatusList","forEach","resRecord","text","push","getUniqResponsibilityStructureList","getGroupedColumns","first","key","other","filter","unshift","TepModule","useMessage","messageApi","contextHolder","notification","useNotification","api","contextNotificationHolder","useGetTepsMutation","useGetNumOfNewTepsMutation","getNewTepsInfo","newTepsInfo","useCreateNewTepsMutation","createTeps","isCreateTepsSuccess","isLoadingCreateNewTeps","useUpdateTepsStatusesMutation","updateStatuses","isStatusesUpdated","isLoadingUpdateStatus","years","setYears","gridData","setGridData","visibleGridSettingsModal","setVisibleGridSettingsModal","visibleUpdateRecordModal","setVisibleUpdateRecordModal","selectedRecordInfo","setSelectedRecordInfo","gridGrouped","setGridGrouped","localStorage","getItem","showGridCellBorders","setShowGridCellBorders","setStatusColored","previewText","setPreviewText","selectedFilial","setSelectedFilial","selectedYear","setSelectedYear","gridRowHeight","titleFontSize","tableCellFontSize","setColumns","numberColumnHeader","counter","setCounter","startPeriodList","Number","endPeriodList","now","rightNow","getMonth","getDate","isFillingAvailable","searchInput","searchText","setSearchText","searchedColumn","setSearchedColumn","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","close","padding","onKeyDown","placeholder","onPressEnter","handleSearch","icon","SearchOutlined","handleReset","filterIcon","filtered","onFilter","toLowerCase","includes","children","child","onFilterDropdownOpenChange","setTimeout","select","render","overflowY","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","click","blue","primary","maxHeight","defaultSortOrder","sorter","a","b","dictNumber","sortDirections","placement","shortDict","filterSearch","filters","indexOf","sg","label","String","filialId","roleCode","openNotification","prevColumns","handleChangeStatus","info","description","duration","innerHeight","paddingTop","moduleName","content","marginRight","defaultValue","options","roleStr","createdCount","okText","cancelText","onConfirm","count","notFilledPlanYearValueRecords","SettingOutlined","shape","getUniqDictsList","dict","parentKey","parseInt","getUniqNfNameList","nf","position","defaultPageSize","onDoubleClick","Object","keys","rec","recordId","NormfactorModal","usePreCreateNormfactorMutation","preCreatedNormfactor","preCreateNormfactorLoading","useCreateNormfactorsMutation","createNormfactor","createdNormfactor","createdNormfactorError","useUpdateNormfactorsMutation","updateNormfactor","updatedNormfactor","updatedNormfactorError","updateNormfactorLoading","department","setDepartment","setNfName","dimension","setDimension","source","setSource","number","setNumber","isNormfactorNumberExist","setIsNormfactorNumberExist","isNormfactorExistInCurrentDict","setIsNormfactorExistInCurrentDict","handleCreateDict","emptyFieldsWarning","responsibility_structure","successCreatedNormfactorMessage","getNormfactors","errorCreatedNormfactorMessage","successUpdatedNormfactorMessage","errorUpdatedNormfactorMessage","normfactorExist","normfactorExistInCurrentDict","onBlur","prefix","LoadingOutlined","PullRequestOutlined","minHeight","responsibilityStructures","rs","nfId","NormfactorModule","useGetDictsNormfactorsMutation","normfactors","getNormfactorsRequestError","getNormfactorsRequestIsLoading","visibleSettings","setVisibleSettings","showCellBorders","selectedRecordData","setSelectedRecordData","DictGraph","config","nodeCfg","items","containerStyle","fill","cfg","group","nodeStateStyles","hover","stroke","lineWidth","radius","edgeCfg","fillOpacity","edge","strokeOpacity","edgeStateStyles","behaviors","DictModal","useCreateDictMutation","createdDict","createdDictError","useUpdateDictMutation","updatedDict","updateDictError","updateDictLoading","useGetDictGraphDataMutation","dictGraphDataOriginal","useGetAllDictsMutation","allDictsResponse","getAllDictsLoading","showDictGraph","setShowDictGraph","dictGraphData","setDictGraphData","selectedFilials","setSelectedFilials","fullDictName","setFullDictName","shortDictName","setShortDictName","paoCode","setPaoCode","oooCode","setOooCode","allDicts","setAllDicts","existedDict","setExistedDict","dictAlreadyAvailable","setDictAlreadyAvailable","short_name","pao_code","ooo_code","dicts","successUpdatedDictMessage","errorCreatedDictMessage","successCreatedDictMessage","onClear","onSelect","availableDicts","shortName","handleOnSelectDictName","filterOption","inputValue","option","toUpperCase","mode","onDeselect","f","concat","Ribbon","dictName","join","emptyFieldsMessage","DictModule","useGetDictsMutation","getDictsRequestError","getDictsRequestIsLoading","selectedDictId","setSelectedDictId","selectedDictName","setSelectedDictName","rowHeight","_","Item","errorUpdatedDictMessage","UserModal","dispatch","useGetUserQuery","user","refetch","useUpdateUserMutation","updatedUser","updateUserError","updateUserLoading","useGetDepartmentsQuery","useCreateUserMutation","createdUser","createUserError","userStore","username","setUsername","setName","surname","setSurname","secondName","setSecondName","selectedRoles","setSelectedRoles","selectedDepartment","setSelectedDepartment","successUpdateUserMessage","errorUpdateUserMessage","console","log","successCreatedUserMessage","errorCreatedUserMessage","addonBefore","departmentId","dep","oldUsername","getUniquesList","UserModule","useGetUsersQuery","users","getUsersError","getUsersIsLoading","refetchUsers","DepartmentModal","useCreateDepartmentMutation","createdDepartment","createDepartmentError","createDepartmentLoading","useUpdateDepartmentMutation","updatedDepartment","updateDepartmentError","selectedUsers","setSelectedUsers","successCreatedDepartmentMessage","errorCreatedDepartmentMessage","successUpdatedDepartmentMessage","DepartmentModule","refetchDepartments","errorUpdatedDepartmentMessage","BeforeReportDownloadModal","warningLoadReport","tmpButton","createElement","href","fetch","redirect","then","response","reader","getReader","ReadableStream","start","controller","pump","read","done","enqueue","stream","Response","blob","myHeaders","Headers","append","formdata","FormData","headers","JSON","parse","catch","URL","createObjectURL","err","field","ConsolidatedByStructureReportModule","useGetReport1Mutation","getRecords","records","getRecordsError","getRecordsLoading","getDepartmentsLoading","visibleBeforeDownloadModal","setVisibleBeforeDownloadModal","showPreviewText","setShowPreviewText","pinNfNumberColumn","setPinNfNumberColumn","pinNfColumn","setPinNfColumn","pinDimensionColumn","setPinDimensionColumn","nfNumber","fixed","margin","writingMode","transform","transformOrigin","srcText","background","boxShadow","FileExcelOutlined","AboutFiilingReportModule","useGetReport2Mutation","TEPDynamicReportModule","useGetReport3Mutation","yearsValue","yearValue","RangePicker","DatePicker","PlanYearModule","useUpdateSettingsMutation","updateSettingsRequest","setYear","setStartPeriod","setEndPeriod","lineHeight","dayjs","picker","format","period","InfoModule","selected","setSelected","treeData","defaultExpandAll","showLine","borderRadius","paddingLeft","src","chapter0000","chapter0001_1","chapter0001_2","chapter0002_1","chapter0002_2","chapter002","chapter003_1","chapter003_2","chapter0030","chapter0031","chapter0032","chapter0040","chapter0041","chapter0042","ConsolidatedByFilialReportModule","useGetReport4Mutation","Content","Layout","Sider","MainScreen","errorUser","isLoadingUser","useGetFilialsQuery","useGetStatusesMutation","getStatusesRequest","useGetRolesMutation","getRolesRequest","menuItems","setMenuItems","selectedModule","setSelectedModule","availableModules","TeamOutlined","DatabaseOutlined","module","BarsOutlined","DesktopOutlined","InfoCircleOutlined","collapsed","setCollapsed","colorBgContainer","theme","useToken","token","collapsible","onCollapse","grey","textAlign","defaultSelectedKeys","keyPath","Router","path","element","locale","configureStore","middleware","getDefaultMiddleware","ReactDOM","ru","getElementById"],"mappings":"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","file":"nil_arm/static/js/main.d42dd313.chunk.js","sourcesContent":["import {IUser} from \"../../models/IUser\";\nimport {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {IFilial} from \"../../models/IFilial\";\nimport {IStatus} from \"../../models/IStatus\";\nimport {IRole} from \"../../models/IRole\";\nimport {IDepartment} from \"../../models/IDepartment\";\n\ninterface generalState {\n    userInfo: IUser|null;\n    filials: IFilial[];\n    departments: IDepartment[];\n    statuses: IStatus[];\n    roles: IRole[];\n    maxYear: number,\n    settings: {\n        year: string,\n        startPeriod: string,\n        endPeriod: string\n    }\n}\n\nconst initialState: generalState = {\n    userInfo: null,\n    filials: [],\n    statuses: [],\n    departments: [],\n    roles: [],\n    maxYear: new Date().getFullYear(),\n    settings: {\n        year: '',\n        startPeriod: '',\n        endPeriod: ''\n    }\n}\n\nexport const generalSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        setUserInfo(state, action: PayloadAction<IUser>) {\n            state.userInfo = action.payload\n        },\n        setFilials(state, action: PayloadAction<IFilial[]>) {\n            state.filials = action.payload\n        },\n        setDepartments(state, action: PayloadAction<IDepartment[]>) {\n            state.departments = action.payload\n        },\n        setSettings(state, action: PayloadAction<any>) {\n            state.settings = action.payload\n        },\n        setStatuses(state, action: PayloadAction<IStatus[]>) {\n            state.statuses = action.payload\n        },\n        setRoles(state, action: PayloadAction<IRole[]>) {\n            state.roles = action.payload\n        }\n    }\n})\n\nexport const {setUserInfo, setDepartments, setFilials, setSettings, setStatuses, setRoles} = generalSlice.actions;\nexport default generalSlice.reducer;\n","export let host: string = document.location.host.split(':')[0]\r\nexport let port: string = ''\r\nexport let secure: string = document.location.protocol.slice(0, -1);\r\n\r\nif (document.location.host.split(':')[1]) {\r\n    if (document.location.host.split(':')[1] !== '3000')\r\n        port = document.location.host.split(':')[1] + '/nil_arm'\r\n    else\r\n        port = '8080/nil_arm'\r\n} else\r\n    //port = '80/nil_arm'\r\n    port='/nil_arm'","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\r\nimport {IUser} from \"../models/IUser\";\r\nimport {host, port, secure} from \"../config/config\";\r\n\r\ninterface IUpdateUserRequest {\r\n    username: string;\r\n    oldUsername: string;\r\n    name: string;\r\n    surname: string;\r\n    secondName: string;\r\n    roles: string;\r\n    filials: string;\r\n    departmentId: number;\r\n}\r\n\r\ninterface ICreateUserRequest {\r\n    departments: string,\r\n    filials: string,\r\n    name: string,\r\n    roles: string,\r\n    secondName: string,\r\n    surname: string,\r\n    username: string\r\n}\r\n\r\nexport const userAPI = createApi({\r\n    reducerPath: 'userAPI',\r\n    baseQuery: fetchBaseQuery({baseUrl: `${secure}://${host}:${port}/api/users`}),\r\n    tagTypes: ['User'],\r\n    endpoints: (build) => ({\r\n        getUsers: build.query<IUser[], void>({\r\n            query: () => ({\r\n                url: `/get-users`,\r\n            }),\r\n            providesTags: result => ['User']\r\n        }),\r\n        getUser: build.query<IUser, void>({\r\n            query: () => ({\r\n                url: `/get-user`,\r\n            }),\r\n            providesTags: result => ['User']\r\n        }),\r\n        createUser: build.mutation<any, ICreateUserRequest>({\r\n            query: (post) => ({\r\n                url: `/create-user`,\r\n                method: 'POST',\r\n                body: post\r\n            }),\r\n            invalidatesTags: ['User']\r\n        }),\r\n        updateUser: build.mutation<any, IUpdateUserRequest>({\r\n            query: (post) => ({\r\n                url: `/update-user`,\r\n                method: 'PATCH',\r\n                body: post\r\n            }),\r\n            invalidatesTags: ['User']\r\n        }),\r\n    })\r\n})\r\n","export enum CellSize {\r\n    small = \"small\",\r\n    middle = \"middle\",\r\n    big = \"big\"\r\n}\r\n\r\nexport enum GroupedColumnTepsGrid {\r\n    NONE = '',\r\n    DICT = 'shortDict',\r\n    NF = 'nfName',\r\n    RESP_STRUCT = 'responsibilityStructure',\r\n    STATUS = 'status'\r\n}\r\n\r\n\r\nexport enum GroupedColumnReport1Grid {\r\n    NONE = '',\r\n    NF = 'nfName',\r\n    DIMENSION = 'dimension',\r\n    SOURCE = 'source',\r\n    CHANGE_EXPLANATION = 'changeExplanation',\r\n    STATUS = 'status',\r\n}\r\n\r\nexport enum GroupedColumnReport2Grid {\r\n    filial = 'filial',\r\n    value = 'value'\r\n}\r\n\r\nexport enum GroupedColumnReport3Grid {\r\n    year2019 = 'year2019',\r\n    year2020 = 'year2020',\r\n    year2021 = 'year2021',\r\n    year2022 = 'year2022',\r\n    nf = 'nf',\r\n    changeExplanation = 'changeExplanation',\r\n}\r\n\r\n// export enum Roles {\r\n//     ADMIN = 'Администратор',\r\n//     EMPLOYER = 'Работник',\r\n//     ENTER_EMPLOYER = 'Ответственный за ввод данных в СП',\r\n//     PRE_CONFIRM_EMPLOYER = 'Ответственный за согласование данных в администрации и подразделении при администрации',\r\n//     CONFIRM_EMPLOYER = 'Руководитель'\r\n// }\r\n\r\n// export enum StatusTitles {\r\n//     CREATED = 'Создано',\r\n//     ON_FILLING = 'На заполнении',\r\n//     ON_PRE_CONFIRM = 'На предварительном согласовании',\r\n//     ON_CONFIRM = 'На согласовании',\r\n//     CONFIRMED = 'Согласовано',\r\n//     ON_TODO_ENTER_EMPLOYER = 'На доработку ответственному за ввод данных',\r\n//     ON_TODO_CONFIRM_EMPLOYER = 'На доработку ответственному за предварительное согласование данных',\r\n// }\r\n//\r\n// export enum StatusCodes {\r\n//     FILLED=1,\r\n//     ON_FILLING=6,\r\n//     ON_CONFIRM=7,\r\n//     ON_TODO=2,\r\n//     CONFIRMED=4,\r\n//     CREATED=5\r\n// }","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\r\nimport {host, port, secure} from \"../config/config\";\r\nimport {ITep} from \"../models/ITep\";\r\n\r\nexport interface GetPrevYearValueRequest {\r\n    normfactor: string;\r\n    filial: string;\r\n    year: string;\r\n}\r\n\r\nexport interface GetPrevYearValueResponse {\r\n    value: string;\r\n}\r\n\r\nexport interface CreateTepRecordsRequest {\r\n    filialId: string,\r\n    year: string,\r\n}\r\n\r\nexport interface GetTepRecordsRequest {\r\n    filialId: string,\r\n    planYear: string,\r\n    roleCode: number\r\n}\r\n\r\nexport interface GetNumOfNewTepsRequest {\r\n    filialId: string,\r\n    year: string\r\n}\r\n\r\nexport const tepsAPI = createApi({\r\n    reducerPath: 'tepAPI',\r\n    baseQuery: fetchBaseQuery({baseUrl: `${secure}://${host}:${port}/api/teps`}),\r\n    tagTypes: ['Tep'],\r\n    endpoints: (build) => ({\r\n        getTeps: build.mutation<ITep[], GetTepRecordsRequest>({\r\n            query: (post) => ({\r\n                url: `/get-tep-records`,\r\n                method: 'POST',\r\n                body: post\r\n            }),\r\n            invalidatesTags: ['Tep']\r\n        }),\r\n        updateTep: build.mutation<any, any>({\r\n            query: (post) => ({\r\n                url: `/update-tep-record`,\r\n                method: 'POST',\r\n                body: post\r\n            }),\r\n            invalidatesTags: ['Tep']\r\n        }),\r\n        getNumOfNewTeps: build.mutation<any, GetNumOfNewTepsRequest>({\r\n            query: (post) => ({\r\n                url: `/pre-create-tep-record`,\r\n                method: 'POST',\r\n                body: post\r\n            }),\r\n            invalidatesTags: ['Tep']\r\n        }),\r\n        createNewTeps: build.mutation<any, CreateTepRecordsRequest>({\r\n            query: (post) => ({\r\n                url: `/create-tep-record`,\r\n                method: 'POST',\r\n                body: post\r\n            }),\r\n            invalidatesTags: ['Tep']\r\n        }),\r\n        updateTepsStatuses: build.mutation<any, any>({\r\n            query: (post) => ({\r\n                url: `/update-teps-statuses`,\r\n                method: 'POST',\r\n                body: post\r\n            }),\r\n            invalidatesTags: ['Tep']\r\n        }),\r\n        getPrevYearValue: build.mutation<GetPrevYearValueResponse, GetPrevYearValueRequest>({\r\n            query: (post) => ({\r\n                url: `/get-prev-year-value`,\r\n                method: 'POST',\r\n                body: post\r\n            }),\r\n            invalidatesTags: ['Tep']\r\n        })\r\n    })\r\n})\r\n","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\r\nimport {host, port, secure} from \"../config/config\";\r\nimport {IDict} from \"../models/IDict\";\r\nimport {INormfactor} from \"../models/INormfactor\";\r\n\r\nexport interface Node {\r\n    id: number,\r\n    value: {title: string, items: {text: string}}\r\n}\r\n\r\nexport interface Edge {\r\n    source: number,\r\n    target: number,\r\n    value?: string,\r\n}\r\n\r\nexport const dictAPI = createApi({\r\n    reducerPath: 'dictAPI',\r\n    baseQuery: fetchBaseQuery({baseUrl: `${secure}://${host}:${port}/api/dicts`}),\r\n    tagTypes: ['Dict'],\r\n    endpoints: (build) => ({\r\n        createDict: build.mutation<any, { dictName: string, filial: string, oooCode: string, paoCode: string, shortDictName: string }>({\r\n            query: (post) => ({\r\n                url: `/create-dict`,\r\n                method: 'POST',\r\n                body: post\r\n            }),\r\n            invalidatesTags: ['Dict']\r\n        }),\r\n        getDicts: build.mutation<IDict[], any>({\r\n            query: (post) => ({\r\n                url: `/get-dicts-list`,\r\n                method: 'POST',\r\n                body: post\r\n            }),\r\n            invalidatesTags: ['Dict']\r\n        }),\r\n        getDictsNormfactors: build.mutation<{ normfactors: INormfactor[], responsibilityStructure: { id: number, name: string }[] }, number>({\r\n            query: (dictId) => ({\r\n                url: `/get-dict-normfactors?dictId=${dictId}`,\r\n                method: 'GET',\r\n            }),\r\n            invalidatesTags: ['Dict']\r\n        }),\r\n        getDictGraphData: build.mutation<{edges: Edge[], nodes: Node[]}, number>({\r\n            query: (dictId) => ({\r\n                url: `/get-dict-graph-data?dictId=${dictId}`,\r\n                method: 'GET',\r\n            }),\r\n            invalidatesTags: ['Dict']\r\n        }),\r\n        getAllDicts: build.mutation<any, void>({\r\n            query: (dictId) => ({\r\n                url: `/get-all-dicts`,\r\n                method: 'GET',\r\n            }),\r\n            invalidatesTags: ['Dict']\r\n        }),\r\n        updateDict: build.mutation<any, { dictName: string, filial: string, oooCode: string, paoCode: string, shortDictName: string, dictId: number }>({\r\n            query: (post) => ({\r\n                url: `/update-dict`,\r\n                method: 'PATCH',\r\n                body: post\r\n            }),\r\n            invalidatesTags: ['Dict']\r\n        }),\r\n    })\r\n})","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\r\nimport {IUser} from \"../models/IUser\";\r\nimport {host, port, secure} from \"../config/config\";\r\nimport {IDepartment} from \"../models/IDepartment\";\r\n\r\ninterface ICreateDepartmentRequest {\r\n    name: string;\r\n    users: string;\r\n}\r\n\r\ninterface IUpdateDepartmentRequest {\r\n    id: any;\r\n    name: string;\r\n    users: string;\r\n}\r\n\r\nexport const departmentAPI = createApi({\r\n    reducerPath: 'departmentAPI',\r\n    baseQuery: fetchBaseQuery({baseUrl: `${secure}://${host}:${port}/api/departments`}),\r\n    tagTypes: ['Department'],\r\n    endpoints: (build) => ({\r\n        getDepartments: build.query<IDepartment[], void>({\r\n            query: () => ({\r\n                url: `/get-departments`,\r\n            }),\r\n            providesTags: result => ['Department']\r\n        }),\r\n        createDepartment: build.mutation<any, ICreateDepartmentRequest>({\r\n            query: (post) => ({\r\n                url: `/create-department`,\r\n                method: 'POST',\r\n                body: post\r\n            }),\r\n            invalidatesTags: ['Department']\r\n        }),\r\n        updateDepartment: build.mutation<any, IUpdateDepartmentRequest>({\r\n            query: (post) => ({\r\n                url: `/update-department`,\r\n                method: 'PATCH',\r\n                body: post\r\n            }),\r\n            invalidatesTags: ['Department']\r\n        }),\r\n    })\r\n})\r\n","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\r\nimport {host, port, secure} from \"../config/config\";\r\n\r\nexport interface IReport1 {\r\n    nfNumber: number;\r\n    nf: string;\r\n    dict: string;\r\n    dimension: string;\r\n    filials: { name: string, value: string }[]\r\n}\r\n\r\nexport interface IReport4 {\r\n    nfNumber: number;\r\n    nf: string;\r\n    dict: string;\r\n    dimension: string;\r\n    departments: { name: string, value: string }[]\r\n}\r\n\r\nexport interface IReport2 {\r\n    filial: string;\r\n    filled: string;\r\n    confirmed: string;\r\n    onConfirmed: string;\r\n}\r\n\r\nexport interface IReport3 {\r\n    nfNumber: string;\r\n    nf: string;\r\n    dictL: string;\r\n    dimension: string;\r\n    yearsValue: { year: string, value: string }[]\r\n}\r\n\r\nexport const reportAPI = createApi({\r\n    reducerPath: 'reportAPI',\r\n    baseQuery: fetchBaseQuery({baseUrl: `${secure}://${host}:${port}/api/teps`}),\r\n    tagTypes: ['Report'],\r\n    endpoints: (build) => ({\r\n        getReport1: build.mutation<IReport1[], { department: string, year: string }>({\r\n            query: (post) => ({\r\n                url: `/get-consolidated-report-teps`,\r\n                method: 'POST',\r\n                body: post\r\n            }),\r\n            invalidatesTags: ['Report']\r\n        }),\r\n        getReport2: build.mutation<IReport2[], string>({\r\n            query: (year) => ({\r\n                url: `/get-pivot-grid-data?year=${year}`,\r\n                method: 'GET',\r\n            }),\r\n            invalidatesTags: ['Report']\r\n        }),\r\n        getReport3: build.mutation<IReport3[], { filial: string }>({\r\n            query: (post) => ({\r\n                url: `/get-dynamic-report`,\r\n                method: 'POST',\r\n                body: post\r\n            }),\r\n            invalidatesTags: ['Report']\r\n        }),\r\n        getReport4: build.mutation<IReport4[], { filial: string, year: string }>({\r\n            query: (post) => ({\r\n                url: `/get-consolidated-report-by-filial`,\r\n                method: 'POST',\r\n                body: post\r\n            }),\r\n            invalidatesTags: ['Report']\r\n        }),\r\n    })\r\n})\r\n","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\r\nimport {host, port, secure} from \"../config/config\";\r\nimport {IFilial} from \"../models/IFilial\";\r\n\r\n\r\nexport const filialAPI = createApi({\r\n    reducerPath: 'filialAPI',\r\n    baseQuery: fetchBaseQuery({baseUrl: `${secure}://${host}:${port}/api/filials`}),\r\n    tagTypes: ['Filial'],\r\n    endpoints: (build) => ({\r\n        getFilials: build.query<IFilial[], void>({\r\n            query: () => ({\r\n                url: `/get-all-filials`,\r\n            }),\r\n            providesTags: result => ['Filial']\r\n        }),\r\n    })\r\n})\r\n","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\r\nimport {host, port, secure} from \"../config/config\";\r\n\r\ninterface PreCreateNormfactorResponse {\r\n    normfactorExist:boolean,\r\n    normfactorExistInCurrentDict:boolean,\r\n    number?:string,\r\n    name?:string,\r\n    dimension?:string,\r\n    source?:string,\r\n    department?:string\r\n}\r\n\r\nexport const normfactorAPI = createApi({\r\n    reducerPath: 'normfactorAPI',\r\n    baseQuery: fetchBaseQuery({baseUrl: `${secure}://${host}:${port}/api/normfactors`}),\r\n    tagTypes: ['Normfactor'],\r\n    endpoints: (build) => ({\r\n        preCreateNormfactor: build.mutation<PreCreateNormfactorResponse, {number: string, dictId: number}>({\r\n            query: (post) => ({\r\n                url: `/pre-create-normfactor`,\r\n                method: 'POST',\r\n                body: post\r\n            }),\r\n            invalidatesTags: ['Normfactor']\r\n        }),\r\n        createNormfactors: build.mutation<any, { dictId: number, dimension: string, nfName: string, number: string, responsibilityStructure: string | undefined, source: string }>({\r\n            query: (post) => ({\r\n                url: `/create-normfactor`,\r\n                method: 'POST',\r\n                body: post\r\n            }),\r\n            invalidatesTags: ['Normfactor']\r\n        }),\r\n        updateNormfactors: build.mutation<any, { dictId: number, dimension: string, nfName: string, number: string, responsibilityStructure: string | undefined, source: string, nfId: number }>({\r\n            query: (post) => ({\r\n                url: `/update-normfactor`,\r\n                method: 'PATCH',\r\n                body: post\r\n            }),\r\n            invalidatesTags: ['Normfactor']\r\n        }),\r\n    })\r\n})\r\n","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\r\nimport {host, port, secure} from \"../config/config\";\r\n\r\nexport const settingsAPI = createApi({\r\n    reducerPath: 'settingsAPI',\r\n    baseQuery: fetchBaseQuery({baseUrl: `${secure}://${host}:${port}/api`}),\r\n    tagTypes: ['Settings'],\r\n    endpoints: (build) => ({\r\n        updateSettings: build.mutation<any, { year: string, startPeriod: string, endPeriod: string }>({\r\n            query: (post) => ({\r\n                url: `/settings`,\r\n                method: 'POST',\r\n                body: post\r\n            }),\r\n            invalidatesTags: ['Settings']\r\n        }),\r\n    })\r\n})","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\r\nimport {host, port, secure} from \"../config/config\";\r\nimport {IFilial} from \"../models/IFilial\";\r\nimport {IStatus} from \"../models/IStatus\";\r\n\r\n\r\nexport const statusAPI = createApi({\r\n    reducerPath: 'statusAPI',\r\n    baseQuery: fetchBaseQuery({baseUrl: `${secure}://${host}:${port}/api/statuses`}),\r\n    tagTypes: ['Status'],\r\n    endpoints: (build) => ({\r\n        getStatuses: build.mutation<IStatus[], void>({\r\n            query: () => ({\r\n                method: 'GET',\r\n                url: `/all`,\r\n            }),\r\n            invalidatesTags: ['Status']\r\n        }),\r\n    })\r\n})\r\n","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\r\nimport {host, port, secure} from \"../config/config\";\r\nimport {IFilial} from \"../models/IFilial\";\r\nimport {IStatus} from \"../models/IStatus\";\r\nimport {IRole} from \"../models/IRole\";\r\n\r\n\r\nexport const roleAPI = createApi({\r\n    reducerPath: 'roleAPI',\r\n    baseQuery: fetchBaseQuery({baseUrl: `${secure}://${host}:${port}/api/roles`}),\r\n    tagTypes: ['Role'],\r\n    endpoints: (build) => ({\r\n        getRoles: build.mutation<IRole[], void>({\r\n            query: () => ({\r\n                method: 'GET',\r\n                url: `/all`,\r\n            }),\r\n            invalidatesTags: ['Role']\r\n        }),\r\n    })\r\n})\r\n","import {combineReducers, configureStore} from \"@reduxjs/toolkit\";\nimport userReducer from './reducers/GeneralSlice'\nimport {userAPI} from \"../services/UserService\";\nimport {tepsAPI} from \"../services/TepService\";\nimport {dictAPI} from \"../services/DictService\";\nimport {departmentAPI} from \"../services/DepartmentService\";\nimport {reportAPI} from \"../services/ReportService\";\nimport {filialAPI} from \"../services/FilialService\";\nimport {normfactorAPI} from \"../services/NormfactorService\";\nimport {settingsAPI} from \"../services/SettingsService\";\nimport {statusAPI} from \"../services/StatusService\";\nimport {roleAPI} from \"../services/RoleService\";\n\nconst rootReducer = combineReducers({\n    userReducer,\n    [userAPI.reducerPath]: userAPI.reducer,\n    [tepsAPI.reducerPath]: tepsAPI.reducer,\n    [dictAPI.reducerPath]: dictAPI.reducer,\n    [departmentAPI.reducerPath]: departmentAPI.reducer,\n    [reportAPI.reducerPath]: reportAPI.reducer,\n    [filialAPI.reducerPath]: filialAPI.reducer,\n    [normfactorAPI.reducerPath]: normfactorAPI.reducer,\n    [settingsAPI.reducerPath]: settingsAPI.reducer,\n    [statusAPI.reducerPath]: statusAPI.reducer,\n    [roleAPI.reducerPath]: roleAPI.reducer,\n})\n\nexport const setupStore = () => {\n    return configureStore({\n        reducer: rootReducer,\n        middleware: (getDefaultMiddleware) =>\n            getDefaultMiddleware()\n                .concat(userAPI.middleware)\n                .concat(tepsAPI.middleware)\n                .concat(dictAPI.middleware)\n                .concat(departmentAPI.middleware)\n                .concat(reportAPI.middleware)\n                .concat(filialAPI.middleware)\n                .concat(normfactorAPI.middleware)\n                .concat(settingsAPI.middleware)\n                .concat(statusAPI.middleware)\n                .concat(roleAPI.middleware)\n    })\n}\n\nexport type RootState = ReturnType<typeof rootReducer>\nexport type AppStore = ReturnType<typeof setupStore>\nexport type AppDispatch = AppStore['dispatch']\n","import {useCallback, useRef, useState} from \"react\";\r\n\r\nexport const useTimeout = () => {\r\n    const [tick, setTick] = useState<number>(0);\r\n    const timeRef = useRef<any>(-1);\r\n    const startTimer = useCallback(() => {\r\n        const timer = setInterval(() => {\r\n            setTick(tick => tick + 1)\r\n        }, 1000);\r\n        timeRef.current = timer;\r\n    }, []);\r\n\r\n    const endTimer = useCallback(() => {\r\n        setTick(0);\r\n        clearInterval(timeRef.current);\r\n    }, []);\r\n\r\n    return {startRequestTimer: startTimer, endRequestTimer: endTimer, tick}\r\n}","import {TypedUseSelectorHook, useDispatch, useSelector} from \"react-redux\";\nimport {AppDispatch, RootState} from \"../store/store\";\n\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import {Button, Input, Modal, Select, Spin, Typography} from \"antd\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport Dragable, {DraggableData, DraggableEvent} from \"react-draggable\";\r\nimport {userAPI} from \"../services/UserService\";\r\nimport {IUser} from \"../models/IUser\";\r\nimport {departmentAPI} from \"../services/DepartmentService\";\r\nimport {IStatus} from \"../models/IStatus\";\r\nimport {Simulate} from \"react-dom/test-utils\";\r\nimport change = Simulate.change;\r\n\r\nconst {Text} = Typography;\r\nconst {TextArea} = Input;\r\n\r\ntype ModalProps = {\r\n    declineModal: { visible: boolean, status: IStatus | undefined, setStatus: Function } | null,\r\n    setDeclineModal: Function,\r\n    handleUpdateTep: Function,\r\n    warningEmptyDeclineField: Function,\r\n    setDeclineExplanationZam: Function,\r\n    setDeclineExplanationBoss: Function,\r\n}\r\n\r\nexport const DeclineTepModal = (props: ModalProps) => {\r\n    // Draggable settings\r\n    const [disabled, setDisabled] = useState<boolean>(false);\r\n    const [bounds, setBounds] = useState({left: 0, top: 0, bottom: 0, right: 0});\r\n    const draggableRef = useRef<HTMLDivElement>(null);\r\n    const onStart = (_event: DraggableEvent, uiData: DraggableData) => {\r\n        const {clientWidth, clientHeight} = window.document.documentElement;\r\n        const targetRect = draggableRef.current?.getBoundingClientRect();\r\n        if (!targetRect) {\r\n            return;\r\n        }\r\n        setBounds({\r\n            left: -targetRect.left + uiData.x,\r\n            right: clientWidth - (targetRect.right - uiData.x),\r\n            top: -targetRect.top - uiData.y,\r\n            bottom: clientHeight - (targetRect.bottom - uiData.y),\r\n        })\r\n    }\r\n    // End of dnd\r\n    const [declineExplanation, setDeclineExplanation] = useState<string>('');\r\n    return (\r\n        <Modal\r\n            title={'Опишите причину отклонения'}\r\n            centered={true}\r\n            open={props.declineModal?.visible}\r\n            onCancel={() => props.setDeclineModal((prev: any) => {\r\n                return {\r\n                    ...prev,\r\n                    visible: false\r\n                }\r\n            })}\r\n            footer={[]}\r\n            modalRender={(modal) => (\r\n                // @ts-ignore\r\n                <Dragable\r\n                    disabled={disabled}\r\n                    bounds={bounds}\r\n                    onStart={(event, uiData) => onStart(event, uiData)}\r\n                >\r\n                    <div ref={draggableRef}>{modal}</div>\r\n                </Dragable>\r\n            )}\r\n            width={\"450px\"}\r\n        >\r\n            <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    justifyContent: 'start',\r\n                    width: '100%',\r\n                    marginBottom: 15,\r\n                    marginTop: 5,\r\n                    fontSize: 14\r\n                }}>\r\n                    <Text style={{marginBottom: 5}}>Причина</Text>\r\n                    <TextArea value={declineExplanation} onChange={(e) => setDeclineExplanation(e.target.value)}/>\r\n                </div>\r\n                <div style={{display: 'flex', justifyContent: 'space-evenly'}}>\r\n                    <Button danger onClick={() => {\r\n                        if (declineExplanation.trim()) {\r\n                            props.handleUpdateTep(props.declineModal?.status, declineExplanation);\r\n                            props.setDeclineModal((prev: any) => {\r\n                                return {\r\n                                    ...prev,\r\n                                    visible: false\r\n                                }\r\n                            })\r\n                            if (props.declineModal?.status?.code === \"5\") {\r\n                                props.setDeclineExplanationZam(declineExplanation)\r\n                                props.declineModal.setStatus(props.declineModal?.status?.name)\r\n                            }\r\n                            if (props.declineModal?.status?.code === \"6\") {\r\n                                props.setDeclineExplanationBoss(declineExplanation)\r\n                                props.declineModal.setStatus(props.declineModal?.status?.name)\r\n                            }\r\n                        }\r\n                        else\r\n                            props.warningEmptyDeclineField();\r\n                    }}>Отклонить</Button>\r\n                    <Button onClick={() => {\r\n                        props.setDeclineModal((prev: any) => {\r\n                            return {\r\n                                ...prev,\r\n                                visible: false\r\n                            }\r\n                        })\r\n                    }}>Отменить</Button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}","import {Button, Input, Modal, Select, Spin, Typography} from \"antd\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport Dragable, {DraggableData, DraggableEvent} from \"react-draggable\";\r\nimport {userAPI} from \"../services/UserService\";\r\nimport {IUser} from \"../models/IUser\";\r\nimport {departmentAPI} from \"../services/DepartmentService\";\r\nimport {IStatus} from \"../models/IStatus\";\r\nimport {Simulate} from \"react-dom/test-utils\";\r\nimport change = Simulate.change;\r\nimport {useAppSelector} from \"../hooks/redux\";\r\n\r\nconst {Text} = Typography;\r\nconst {TextArea} = Input;\r\n\r\ntype ModalProps = {\r\n    visible: boolean,\r\n    setVisible: Function,\r\n    handleUpdateTep: Function,\r\n    declineExplanationZam: string,\r\n    setStatus: Function,\r\n    setDeclineExplanationZam: Function\r\n}\r\n\r\nexport const ConfirmTepModal = (props: ModalProps) => {\r\n    const generalStore = useAppSelector(store => store.userReducer);\r\n    // Draggable settings\r\n    const [disabled, setDisabled] = useState<boolean>(false);\r\n    const [bounds, setBounds] = useState({left: 0, top: 0, bottom: 0, right: 0});\r\n    const draggableRef = useRef<HTMLDivElement>(null);\r\n    const onStart = (_event: DraggableEvent, uiData: DraggableData) => {\r\n        const {clientWidth, clientHeight} = window.document.documentElement;\r\n        const targetRect = draggableRef.current?.getBoundingClientRect();\r\n        if (!targetRect) {\r\n            return;\r\n        }\r\n        setBounds({\r\n            left: -targetRect.left + uiData.x,\r\n            right: clientWidth - (targetRect.right - uiData.x),\r\n            top: -targetRect.top - uiData.y,\r\n            bottom: clientHeight - (targetRect.bottom - uiData.y),\r\n        })\r\n    }\r\n    // End of dnd\r\n    return (\r\n        <Modal\r\n            title={'Сохранить обоснование отклонения ответственному за ввод данных перед отправкой?'}\r\n            centered={true}\r\n            open={props.visible}\r\n            onCancel={() => props.setVisible(false)}\r\n            footer={[]}\r\n            modalRender={(modal) => (\r\n                // @ts-ignore\r\n                <Dragable\r\n                    disabled={disabled}\r\n                    bounds={bounds}\r\n                    onStart={(event, uiData) => onStart(event, uiData)}\r\n                >\r\n                    <div ref={draggableRef}>{modal}</div>\r\n                </Dragable>\r\n            )}\r\n            width={\"450px\"}\r\n        >\r\n            <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                <div style={{display: 'flex', justifyContent: 'space-evenly'}}>\r\n                    <Button style={{width: 100}} onClick={() => {\r\n                        props.handleUpdateTep(generalStore?.statuses?.find((status: IStatus) => status.code === \"3\"), props.declineExplanationZam);\r\n                        props.setVisible(false)\r\n                        props.setStatus(generalStore?.statuses?.find((status: IStatus) => status.code === \"3\")?.name)\r\n                        props.setDeclineExplanationZam(props.declineExplanationZam);\r\n                    }}>Да</Button>\r\n                    <Button style={{width: 100}} onClick={() => {\r\n                        props.handleUpdateTep(generalStore?.statuses?.find((status: IStatus) => status.code === \"3\"), \"\");\r\n                        props.setVisible(false)\r\n                        props.setStatus(generalStore?.statuses?.find((status: IStatus) => status.code === \"3\")?.name)\r\n                        props.setDeclineExplanationZam(\"\");\r\n                    }}>Нет</Button>\r\n                    <Button style={{width: 100}} onClick={() => props.setVisible(false)}>Отменить</Button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}","import {Alert, Button, Divider, Input, Modal, Spin, Steps, Tag, Typography} from \"antd\";\r\nimport {DataType} from \"../modules/teps/TepModule\";\r\nimport Dragable, {DraggableData, DraggableEvent} from 'react-draggable';\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {tepsAPI} from \"../services/TepService\";\r\nimport {useAppSelector} from \"../hooks/redux\";\r\nimport {IRole} from \"../models/IRole\";\r\nimport {IStatus} from \"../models/IStatus\";\r\nimport {DeclineTepModal} from \"./DeclineTepModal\";\r\nimport {ConfirmTepModal} from \"./ConfirmTepModal\";\r\n\r\nconst {TextArea} = Input;\r\nconst {Text} = Typography;\r\n\r\ntype ModalProps = {\r\n    planYear: string;\r\n    record: DataType,\r\n    visible: boolean,\r\n    setVisible: Function,\r\n    successUpdateTep: Function,\r\n    errorUpdateTep: Function,\r\n    setData: Function,\r\n    selectedRole: string,\r\n    isFillingAvailable: boolean,\r\n    warningEmptyDeclineField: Function,\r\n    warningEmptyChangeExplanationField: Function,\r\n    warningEmptyPlanYearField: Function\r\n}\r\n\r\nexport const TepModal = (props: ModalProps) => {\r\n    const generalStore = useAppSelector(store => store.userReducer);\r\n    const [updateTep, {data: teps, error, isLoading, isSuccess: isSuccessUpdateTep}] = tepsAPI.useUpdateTepMutation();\r\n    const [getPrevYearValue, {\r\n        data: prevYearValueReq,\r\n        isLoading: getPrevYearValueLoading\r\n    }] = tepsAPI.useGetPrevYearValueMutation();\r\n    const [planYearValue, setPlanYearValue] = useState<string>(\"\");\r\n    const [prevYearValue, setPrevYearValue] = useState<string>(\"\");\r\n    const [changeExplanation, setChangeExplanation] = useState<string>(props.record?.changeExplanation);\r\n    const [declineExplanationZam, setDeclineExplanationZam] = useState<string | undefined>(props.record?.declineExplanationZam);\r\n    const [declineExplanationBoss, setDeclineExplanationBoss] = useState<string | undefined>(props.record?.declineExplanationBoss);\r\n    const [status, setStatus] = useState<string | undefined>(undefined);\r\n    const [selectedRole, setSelectedRole] = useState<IRole | undefined>();\r\n    const [modalWidth,] = useState<number>(970);\r\n    const [declineModal, setDeclineModal] = useState<{ visible: boolean, status: IStatus | undefined, setStatus: Function } | null>(null);\r\n    const [visibleConfirmModal, setVisibleConfirmModal] = useState<boolean>(false);\r\n    useEffect(() => {\r\n        if (props.visible) {\r\n            setPlanYearValue(props.record?.planYearValue);\r\n            setPrevYearValue(props.record?.prevYearValue);\r\n            setChangeExplanation(props.record?.changeExplanation?.trim());\r\n            setStatus(props.record?.status);\r\n        }\r\n    }, [props.visible]);\r\n    useEffect(() => {\r\n        if (props.selectedRole)\r\n            setSelectedRole(generalStore.roles.find((role: IRole) => role.name === props.selectedRole));\r\n    }, [props.selectedRole])\r\n    const [disabled, setDisabled] = useState<boolean>(false);\r\n    const [bounds, setBounds] = useState({left: 0, top: 0, bottom: 0, right: 0});\r\n    const draggableRef = useRef<HTMLDivElement>(null);\r\n    const onStart = (_event: DraggableEvent, uiData: DraggableData) => {\r\n        const {clientWidth, clientHeight} = window.document.documentElement;\r\n        const targetRect = draggableRef.current?.getBoundingClientRect();\r\n        if (!targetRect) {\r\n            return;\r\n        }\r\n        setBounds({\r\n            left: -targetRect.left + uiData.x,\r\n            right: clientWidth - (targetRect.right - uiData.x),\r\n            top: -targetRect.top - uiData.y,\r\n            bottom: clientHeight - (targetRect.bottom - uiData.y),\r\n        })\r\n    }\r\n    const handleUpdateTep = (status: IStatus | undefined, declineExplanation?: string) => {\r\n        if  (planYearValue === null || planYearValue?.toString().trim().length === 0)\r\n            props.warningEmptyPlanYearField();\r\n        else if (prevYearValue != planYearValue && (!changeExplanation || changeExplanation?.toString().trim()?.length===0)){\r\n            props.warningEmptyChangeExplanationField();\r\n        }\r\n        else {\r\n            let tep: any = {\r\n                id: props.record.id,\r\n                plan_year_value: planYearValue ?? '',\r\n                prev_year_value: prevYearValue ?? '',\r\n                statusId: status ? status.id : null,\r\n                change_explanation: prevYearValue != planYearValue ? changeExplanation ?? '' : '',\r\n                decline_explanation_zam: (declineExplanation !== undefined && selectedRole?.code === 3) ? declineExplanation : props.record.declineExplanationZam,\r\n                decline_explanation_boss: (declineExplanation !== undefined && selectedRole?.code === 4) ? declineExplanation : props.record.declineExplanationBoss,\r\n            };\r\n            updateTep(tep);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (error)\r\n            props.errorUpdateTep();\r\n    }, [error])\r\n    useEffect(() => {\r\n        if (teps) {\r\n            props.successUpdateTep();\r\n            props.setData((prev: DataType[]) => {\r\n                return prev.map((record: DataType) => {\r\n                    if (record?.id === props?.record?.id)\r\n                        return {\r\n                            ...record,\r\n                            changeExplanation: prevYearValue != planYearValue ? changeExplanation ?? '' : '',\r\n                            declineExplanationZam: declineExplanationZam ?? props.record.declineExplanationZam,\r\n                            declineExplanationBoss: declineExplanationBoss ?? props.record.declineExplanationBoss,\r\n                            planYearValue,\r\n                            prevYearValue,\r\n                            status: status ?? record.status\r\n                        }\r\n                    else return record;\r\n                });\r\n            });\r\n            props.setVisible(false);\r\n        }\r\n    }, [teps])\r\n    useEffect(() => {\r\n        if (props.visible) {\r\n            getPrevYearValue({normfactor: props.record.nfName, filial: props.record.filial, year: props.planYear});\r\n        }\r\n    }, [props.visible])\r\n    useEffect(() => {\r\n        if (prevYearValueReq) {\r\n            setPrevYearValue(prevYearValueReq.value);\r\n        }\r\n    }, [prevYearValueReq])\r\n    if (props.record)\r\n        return (\r\n            <Modal\r\n                title={props.record.nfName}\r\n                footer={[]}\r\n                centered={true}\r\n                open={props.visible}\r\n                onCancel={() => props.setVisible(false)}\r\n                modalRender={(modal) => (\r\n                    // @ts-ignore\r\n                    <Dragable\r\n                        disabled={disabled}\r\n                        bounds={bounds}\r\n                        onStart={(event, uiData) => onStart(event, uiData)}\r\n                    >\r\n                        <div ref={draggableRef}>{modal}</div>\r\n                    </Dragable>\r\n                )}\r\n                width={modalWidth}\r\n            >\r\n                <DeclineTepModal handleUpdateTep={handleUpdateTep} declineModal={declineModal}\r\n                                 setDeclineModal={setDeclineModal}\r\n                                 warningEmptyDeclineField={props.warningEmptyDeclineField}\r\n                                 setDeclineExplanationZam={setDeclineExplanationZam}\r\n                                 setDeclineExplanationBoss={setDeclineExplanationBoss}\r\n                />\r\n                <ConfirmTepModal handleUpdateTep={handleUpdateTep} visible={visibleConfirmModal}\r\n                                 setVisible={setVisibleConfirmModal} setStatus={setStatus}\r\n                                 setDeclineExplanationZam={setDeclineExplanationZam}\r\n                                 declineExplanationZam={props.record.declineExplanationZam}/>\r\n                {isLoading ?\r\n                    <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: 400}}>\r\n                        <Spin size=\"large\"/>\r\n                    </div> :\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        flexDirection: \"column\",\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center'\r\n                    }}>\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'start',\r\n                            width: '100%',\r\n                            marginBottom: 25,\r\n                            fontSize: 14\r\n                        }}>\r\n                            <Text style={{marginBottom: 5}}>Ответсвенное подразделение</Text>\r\n                            <Input value={props.record.responsibilityStructure} disabled={true}/>\r\n                        </div>\r\n                        <div style={{display: 'flex', alignItems: 'center', width: '100%', marginBottom: 15}}\r\n                             onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)}>\r\n                            <div style={{\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                justifyContent: 'start',\r\n                                fontSize: 14\r\n                            }}>\r\n                                <Text style={{marginBottom: 5}}>Статус показателя</Text>\r\n                                <Tag style={{maxWidth: 270, overflow: 'hidden'}} color={\r\n                                    props.record.status === 'Создано' ? 'default' :\r\n                                        props.record.status === 'На зполнении' ? 'purple' :\r\n                                            props.record.status === 'Согласовано' ? 'success' :\r\n                                                props.record.status === 'На предварительном согласовании' ? 'orange' :\r\n                                                    props.record.status === 'На согласовании' ? 'processing' :\r\n                                                        props.record.status === 'На доработку ответственному за предварительное согласование данных' ? 'red' :\r\n                                                            props.record.status === 'На доработку ответственному за ввод данных' ? 'magenta' :\r\n                                                                'blue'\r\n                                }>{props.record.status}</Tag>\r\n                            </div>\r\n                            <Divider type={'vertical'} style={{height: 60}}/>\r\n                            <Steps\r\n                                style={{display: 'flex', marginTop: 15, marginLeft: -25}}\r\n                                progressDot\r\n                                current={\r\n                                    status === 'Создано' ? 0 :\r\n                                        status === 'На заполнении' ? 1 :\r\n                                            status === 'На предварительном согласовании' ? 2 :\r\n                                                status === 'На согласовании' ? 3 :\r\n                                                    status === 'Согласовано' ? 4 :\r\n                                                        status === 'На доработку ответственному за ввод данных' ? 1 :\r\n                                                            status === 'На доработку ответственному за предварительное согласование данных' ? 3 : 0\r\n                                }\r\n                                direction={'horizontal'}\r\n                            >\r\n                                <Steps.Step title={'Создано'}/>\r\n                                <Steps.Step title={'На заполнении'}/>\r\n                                <Steps.Step title={'На предварительном согласовании'}/>\r\n                                <Steps.Step title={'На согласовании'}/>\r\n                                <Steps.Step title={'Согласовано'}/>\r\n                            </Steps>\r\n                        </div>\r\n                        {props.record.declineExplanationZam?.length > 0 &&\r\n                            <div\r\n                                onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)}\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'column',\r\n                                    justifyContent: 'start',\r\n                                    width: '100%',\r\n                                    marginBottom: 15,\r\n                                    fontSize: 14\r\n                                }}>\r\n                                <Text style={{marginBottom: 5}}>Обоснование отклонения ответственному за ввод\r\n                                    данных</Text>\r\n                                <Text style={{\r\n                                    marginBottom: 5,\r\n                                    fontWeight: 'bold'\r\n                                }}>{props.record.declineExplanationZam}</Text>\r\n                            </div>\r\n                        }\r\n                        {props.record.declineExplanationBoss?.length > 0 &&\r\n                            <div\r\n                                onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)}\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'column',\r\n                                    justifyContent: 'start',\r\n                                    width: '100%',\r\n                                    marginBottom: 15,\r\n                                    fontSize: 14\r\n                                }}>\r\n                                <Text style={{marginBottom: 5}}>Обоснование отклонения ответственному за предварительное\r\n                                    согласование\r\n                                    данных</Text>\r\n                                <Text style={{\r\n                                    marginBottom: 5,\r\n                                    fontWeight: 'bold'\r\n                                }}>{props.record.declineExplanationBoss}</Text>\r\n                            </div>\r\n                        }\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'start',\r\n                            width: '100%',\r\n                            marginBottom: 15,\r\n                            fontSize: 14\r\n                        }}>\r\n                            <Text style={{marginBottom: 5}}>Планируемый год</Text>\r\n                            <Input value={props.planYear} disabled={true}/>\r\n                        </div>\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'start',\r\n                            width: '100%',\r\n                            marginBottom: 15,\r\n                            fontSize: 14\r\n                        }}>\r\n                            <Text style={{marginBottom: 5}}>Значение на планируемый год</Text>\r\n                            <Input onChange={(e) => setPlanYearValue(e.target.value)}\r\n                                   disabled={props.record.status === \"Согласовано\"\r\n                                       || props.selectedRole === generalStore?.roles?.find((role: IRole) => role.code === 1)?.name // если работник\r\n                                       || (status === generalStore?.statuses?.find((status: IStatus) => status.code === \"2\")?.name && props.selectedRole === generalStore?.roles?.find((role: IRole) => role.code === 2)?.name) // Неактивно если на пред согласовании и роль отв за ввод данных\r\n                                       || (status === generalStore?.statuses?.find((status: IStatus) => status.code === \"3\")?.name && props.selectedRole === generalStore?.roles?.find((role: IRole) => role.code === 2)?.name) // Неактивно если на согласовании и роль отв за ввод данных\r\n                                       || (status === generalStore?.statuses?.find((status: IStatus) => status.code === \"3\")?.name && props.selectedRole === generalStore?.roles?.find((role: IRole) => role.code === 3)?.name) // Неактивно если на согласовании и роль отв за предв согл данных\r\n                                       || (props.record.status === generalStore?.statuses?.find((status: IStatus) => status.code === \"6\")?.name && props.selectedRole === generalStore?.roles?.find((role: IRole) => role.code === 2)?.name) // Неактивно если на доработке у ответственного за предв согласование и роль отв за ввод данных\r\n                            }\r\n                                   value={planYearValue} allowClear/>\r\n                        </div>\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'start',\r\n                            width: '100%',\r\n                            marginBottom: 15,\r\n                            fontSize: 14\r\n                        }}>\r\n                            <Text style={{marginBottom: 5}}>Значение за предыдущий год</Text>\r\n                            <Input onChange={(e) => setPrevYearValue(e.target.value)}\r\n                                   disabled={true}\r\n                                   value={prevYearValue}\r\n                                   allowClear/>\r\n                        </div>\r\n                        {prevYearValue != planYearValue ?\r\n                            <div\r\n                                onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)}\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'column',\r\n                                    justifyContent: 'start',\r\n                                    width: '100%',\r\n                                    marginBottom: 15,\r\n                                    fontSize: 14\r\n                                }}>\r\n                                <Text style={{marginBottom: 5}}>Обоснование изменений</Text>\r\n                                <TextArea\r\n                                    disabled={props.record.status === \"Согласовано\"\r\n                                        || props.selectedRole === generalStore?.roles?.find((role: IRole) => role.code === 1)?.name // если работник\r\n                                        || (status === generalStore?.statuses?.find((status: IStatus) => status.code === \"2\")?.name && props.selectedRole === generalStore?.roles?.find((role: IRole) => role.code === 2)?.name) // Неактивно если на пред согласовании и роль отв за ввод данных\r\n                                        || (status === generalStore?.statuses?.find((status: IStatus) => status.code === \"3\")?.name && props.selectedRole === generalStore?.roles?.find((role: IRole) => role.code === 2)?.name) // Неактивно если на согласовании и роль отв за ввод данных\r\n                                        || (status === generalStore?.statuses?.find((status: IStatus) => status.code === \"3\")?.name && props.selectedRole === generalStore?.roles?.find((role: IRole) => role.code === 3)?.name) // Неактивно если на согласовании и роль отв за предв согл данных\r\n                                        || (props.record.status === generalStore?.statuses?.find((status: IStatus) => status.code === \"6\")?.name && props.selectedRole === generalStore?.roles?.find((role: IRole) => role.code === 2)?.name) // Неактивно если на доработке у ответственного за предв согласование и роль отв за ввод данных\r\n                                }\r\n                                    onChange={(e) => setChangeExplanation(e.target.value)}\r\n                                    allowClear\r\n                                    value={changeExplanation}/>\r\n                            </div>\r\n                            :\r\n                            <div\r\n                                onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)}\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    justifyContent: 'center',\r\n                                    width: '100%',\r\n                                    marginBottom: 15,\r\n                                    fontSize: 14\r\n                                }}>\r\n                                <Alert style={{width: '100%'}} showIcon\r\n                                       message={'Обоснование изменений не требуется, значения совпали'} type={'info'}/>\r\n                            </div>\r\n                        }\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)}\r\n                             style={{display: 'flex', justifyContent: 'space-evenly', width: '100%', fontSize: 14}}>\r\n\r\n                            {(!(props.selectedRole === generalStore?.roles?.find((role: IRole) => role.code === 1)?.name) // не видит кнопку работник\r\n                                    && !(props.record.status === generalStore?.statuses?.find((status: IStatus) => status.code === \"4\")?.name)) // никто не видит если согласовано\r\n                                &&\r\n                                <Button\r\n                                    disabled={(props.record.status === generalStore?.statuses?.find((status: IStatus) => status.code === \"2\")?.name && props.selectedRole === generalStore?.roles?.find((role: IRole) => role.code === 2)?.name) // Неактивно если на пред согласовании и роль отв за ввод данных\r\n                                        || (props.record.status === generalStore?.statuses?.find((status: IStatus) => status.code === \"3\")?.name && props.selectedRole === generalStore?.roles?.find((role: IRole) => role.code === 2)?.name) // Неактивно если на согласовании и роль отв за ввод данных\r\n                                        || (props.record.status === generalStore?.statuses?.find((status: IStatus) => status.code === \"3\")?.name && props.selectedRole === generalStore?.roles?.find((role: IRole) => role.code === 3)?.name) // Неактивно если на согласовании и роль отв за предв согл данных\r\n                                        || (props.record.status === generalStore?.statuses?.find((status: IStatus) => status.code === \"6\")?.name && props.selectedRole === generalStore?.roles?.find((role: IRole) => role.code === 2)?.name) // Неактивно если на доработке у ответственного за предв согласование и роль отв за ввод данных\r\n                                }\r\n                                    onClick={() => {\r\n                                        handleUpdateTep(undefined);\r\n                                    }}>\r\n                                    Сохранить\r\n                                </Button>}\r\n\r\n                            {(!(props.selectedRole === generalStore?.roles?.find((role: IRole) => role.code === 1)?.name)// не видит кнопку работник\r\n                                    && !(props.selectedRole === generalStore?.roles?.find((role: IRole) => role.code === 3)?.name)// не видит кнопку отв за пред согл\r\n                                    && !(props.selectedRole === generalStore?.roles?.find((role: IRole) => role.code === 4)?.name)// не видит кнопку отв за согл\r\n                                    && !(props.record.status === generalStore?.statuses?.find((status: IStatus) => status.code === \"4\")?.name) // не видит если согласовано\r\n                                ) &&\r\n                                <Button\r\n                                    disabled={props.record.status === generalStore?.statuses?.find((status: IStatus) => status.code === \"2\")?.name // Неактивно если на пред согласовании\r\n                                        || props.record.status === generalStore?.statuses?.find((status: IStatus) => status.code === \"3\")?.name // Неактивно если на согласовании\r\n                                        || props.record.status === generalStore?.statuses?.find((status: IStatus) => status.code === \"4\")?.name // Неактивно если согласовано\r\n                                        || props.record.status === generalStore?.statuses?.find((status: IStatus) => status.code === \"6\")?.name // Неактивно если на доработке у ответственного за предв согласование\r\n                                    }\r\n                                    onClick={() => {\r\n                                        handleUpdateTep(generalStore?.statuses?.find((status: IStatus) => status.code === \"2\"));\r\n                                        setStatus(generalStore?.statuses?.find((status: IStatus) => status.code === \"2\")?.name)\r\n                                    }}>\r\n                                    На предварительное согласование\r\n                                </Button>}\r\n\r\n                            {(!(props.selectedRole === generalStore?.roles?.find((role: IRole) => role.code === 1)?.name)// не видит кнопку работник\r\n                                    && !(props.record.status === generalStore?.statuses?.find((status: IStatus) => status.code === \"4\")?.name) // не видит если согласовано\r\n                                    && !(props.selectedRole === generalStore?.roles?.find((role: IRole) => role.code === 2)?.name)// не видит кнопку отв за ввод\r\n                                    && !(props.selectedRole === generalStore?.roles?.find((role: IRole) => role.code === 4)?.name)// не видит кнопку отв за согл\r\n                                ) &&\r\n                                <>\r\n                                    <Button\r\n                                        disabled={props.record.status === generalStore?.statuses?.find((status: IStatus) => status.code === \"3\")?.name} // Неактивно если на согласовании\r\n                                        onClick={() => {\r\n                                            if (props.record.declineExplanationZam)\r\n                                                if (props.record.declineExplanationZam.trim().length === 0) {\r\n                                                    handleUpdateTep(generalStore?.statuses?.find((status: IStatus) => status.code === \"3\"));\r\n                                                    setStatus(generalStore?.statuses?.find((status: IStatus) => status.code === \"3\")?.name)\r\n                                                } else\r\n                                                    setVisibleConfirmModal(true)\r\n                                            else {\r\n                                                handleUpdateTep(generalStore?.statuses?.find((status: IStatus) => status.code === \"3\"));\r\n                                                setStatus(generalStore?.statuses?.find((status: IStatus) => status.code === \"3\")?.name)\r\n                                            }\r\n                                        }}>\r\n                                        На согласование\r\n                                    </Button>\r\n                                    <Button\r\n                                        disabled={(props.record.status === generalStore?.statuses?.find((status: IStatus) => status.code === \"3\")?.name) // Неактивно если на согласовании\r\n                                            || props.record.status === generalStore?.statuses?.find((status: IStatus) => status.code === \"5\")?.name // Неактивно если и так отклонено\r\n                                        }\r\n                                        onClick={() => {\r\n                                            setDeclineModal({\r\n                                                visible: true,\r\n                                                status: generalStore?.statuses?.find((status: IStatus) => status.code === \"5\"),\r\n                                                setStatus,\r\n                                            })\r\n                                        }}>\r\n                                        Отклонить\r\n                                    </Button>\r\n                                </>\r\n                            }\r\n\r\n                            {props.selectedRole === generalStore?.roles?.find((role: IRole) => role.code === 4)?.name // видит только отв за согл показателей\r\n                                &&\r\n                                <>\r\n                                    <Button\r\n                                        disabled={props.record.status === generalStore?.statuses?.find((status: IStatus) => status.code === \"4\")?.name} // Неактивно если согласовано\r\n                                        onClick={() => {\r\n                                            handleUpdateTep(generalStore?.statuses?.find((status: IStatus) => status.code === \"4\"));\r\n                                            setStatus(generalStore?.statuses?.find((status: IStatus) => status.code === \"4\")?.name)\r\n                                        }}>\r\n                                        Согласовать\r\n                                    </Button>\r\n                                    <Button\r\n                                        disabled={props.record.status === generalStore?.statuses?.find((status: IStatus) => status.code === \"6\")?.name} // Неактивно если и так отклонено\r\n                                        onClick={() => {\r\n                                            setDeclineModal({\r\n                                                visible: true,\r\n                                                status: generalStore?.statuses?.find((status: IStatus) => status.code === \"6\"),\r\n                                                setStatus,\r\n                                            })\r\n                                            //setStatus(generalStore?.statuses?.find((status: IStatus) => status.code === \"6\")?.name)\r\n                                        }}>\r\n                                        Отклонить\r\n                                    </Button>\r\n                                </>\r\n                            }\r\n\r\n                            <Button onClick={() => props.setVisible(false)}>Отменить</Button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </Modal>)\r\n    else\r\n        return <></>\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n//import \"antd/dist/antd.css\";\r\n// import \"./index.css\";\r\nimport {Table} from \"antd\";\r\nimport {Resizable} from \"react-resizable\";\r\nimport ReactDragListView from \"react-drag-listview\";\r\n\r\nconst ResizableTitle = (props) => {\r\n    const {onResize, width, ...restProps} = props;\r\n\r\n    if (!width) {\r\n        return <th {...restProps} />;\r\n    }\r\n\r\n    return (\r\n        <Resizable\r\n            width={width}\r\n            height={0}\r\n            handle={\r\n                <span\r\n                    className=\"react-resizable-handle\"\r\n                    onClick={(e) => {\r\n                        e.stopPropagation();\r\n                    }}\r\n                />\r\n            }\r\n            onResize={onResize}\r\n            draggableOpts={{enableUserSelectHack: false}}\r\n        >\r\n            <th {...restProps} />\r\n        </Resizable>\r\n    );\r\n};\r\n\r\nexport class BaseGrid extends React.Component {\r\n\r\n    componentWillReceiveProps(props, nextContext) {\r\n        this.setState({\r\n            columns: props.columns,\r\n            dataSource: props.dataSource,\r\n            size: props.size,\r\n            bordered: props.bordered,\r\n            loading: props.loading,\r\n            showHeader: props.showHeader,\r\n            pagination: props.pagination,\r\n            onRow: props.onRow,\r\n            statusColored: props.statusColored,\r\n            width: props.width\r\n        })\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            columns: props.columns,\r\n            dataSource: props.dataSource,\r\n            size: props.size,\r\n            bordered: props.bordered,\r\n            loading: props.loading,\r\n            showHeader: props.showHeader,\r\n            pagination: props.pagination,\r\n            onRow: props.onRow,\r\n            statusColored: props.statusColored,\r\n        };\r\n\r\n        const that = this;\r\n        this.dragProps = {\r\n            onDragEnd(fromIndex, toIndex) {\r\n                const columns = [...that.state.columns];\r\n                const item = columns.splice(fromIndex, 1)[0];\r\n                columns.splice(toIndex, 0, item);\r\n                that.setState({\r\n                    columns\r\n                });\r\n            },\r\n            nodeSelector: \"th\",\r\n            handleSelector: \".dragHandler\",\r\n            ignoreSelector: \"react-resizable-handle\"\r\n        };\r\n    }\r\n\r\n    components = {\r\n        header: {\r\n            cell: ResizableTitle\r\n        }\r\n    };\r\n\r\n    data = [];\r\n\r\n    handleResize = (index) => (e, {size}) => {\r\n        this.setState(({columns}) => {\r\n            const nextColumns = [...columns];\r\n            nextColumns[index] = {\r\n                ...nextColumns[index],\r\n                width: size.width\r\n            };\r\n            return {columns: nextColumns};\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const columns = this.state.columns.map((col, index) => ({\r\n            ...col,\r\n            onHeaderCell: (column) => ({\r\n                width: column.width,\r\n                onResize: this.handleResize(index)\r\n            })\r\n        }));\r\n        return (\r\n            <ReactDragListView.DragColumn {...this.dragProps}>\r\n                <Table\r\n                    scroll={this.state.width ? {x: this.state.width} : undefined}\r\n                    //size={this.state.size}\r\n                    bordered={this.state.bordered}\r\n                    loading={this.state.loading}\r\n                    showHeader={this.state.showHeader}\r\n                    components={this.components}\r\n                    columns={columns}\r\n                    dataSource={this.state.dataSource}\r\n                    pagination={this.state.pagination}\r\n                    onRow={this.state.onRow}\r\n                />\r\n            </ReactDragListView.DragColumn>\r\n        );\r\n    }\r\n}\r\n\r\n//ReactDOM.render(<BaseGrid />, document.getElementById(\"container\"));\r\n","import {Divider, Modal, Radio, Switch, Typography} from \"antd\";\r\nimport {useRef, useState} from \"react\";\r\nimport Dragable, {DraggableData, DraggableEvent} from \"react-draggable\";\r\nimport {GroupedColumnTepsGrid} from \"../ENUMS\";\r\n\r\nconst {Title, Text} = Typography;\r\n\r\ntype ModalProps = {\r\n    moduleName: string,\r\n    successUpdatedSettings: Function,\r\n    visible: boolean,\r\n    setVisible: Function,\r\n    showBorders: boolean,\r\n    setShowBorders: Function,\r\n    showHeader: boolean,\r\n    setShowHeader: Function,\r\n    statusColored?: boolean,\r\n    setStatusColored?: Function,\r\n    previewText?: boolean,\r\n    setPreviewText?: Function,\r\n    selectedGroup?: GroupedColumnTepsGrid,\r\n    setSelectedGroup?: Function,\r\n    setGrouped?: Function,\r\n    fixedNfNumberColumn?: boolean,\r\n    fixedNfColumn?: boolean,\r\n    fixedDimensionColumn?: boolean,\r\n    setFixedNfColumn?: Function,\r\n    setFixedNfNumberColumn?: Function,\r\n    setFixedDimensionColumn?: Function,\r\n}\r\n\r\nexport const GridSettingsModal = (props: ModalProps) => {\r\n    // Draggable settings\r\n    const [disabled, setDisabled] = useState<boolean>(false);\r\n    const [bounds, setBounds] = useState({left: 0, top: 0, bottom: 0, right: 0});\r\n    const draggableRef = useRef<HTMLDivElement>(null);\r\n    const onStart = (_event: DraggableEvent, uiData: DraggableData) => {\r\n        const {clientWidth, clientHeight} = window.document.documentElement;\r\n        const targetRect = draggableRef.current?.getBoundingClientRect();\r\n        if (!targetRect) {\r\n            return;\r\n        }\r\n        setBounds({\r\n            left: -targetRect.left + uiData.x,\r\n            right: clientWidth - (targetRect.right - uiData.x),\r\n            top: -targetRect.top - uiData.y,\r\n            bottom: clientHeight - (targetRect.bottom - uiData.y),\r\n        })\r\n    }\r\n    // End of dnd\r\n    const handleShowHeader = (checked: boolean) => {\r\n        props.setShowHeader(checked);\r\n        //localStorage.setItem(`tableHeader-${props.moduleName}`, String(checked));\r\n        props.successUpdatedSettings();\r\n    }\r\n    const handleShowCellBorders = (checked: boolean) => {\r\n        props.setShowBorders(checked);\r\n        //localStorage.setItem(`tableBorders-${props.moduleName}`, String(checked));\r\n        props.successUpdatedSettings();\r\n    }\r\n    const handleSetStatusColored = (checked: boolean) => {\r\n        if (props.setStatusColored) {\r\n            props.setStatusColored(checked)\r\n            //localStorage.setItem(`tableColoredStatus-${props.moduleName}`, String(checked));\r\n            props.successUpdatedSettings();\r\n        }\r\n    }\r\n    const handleSetPreviewText = (checked: boolean) => {\r\n        if (props.setPreviewText) {\r\n            props.setPreviewText(checked)\r\n            //localStorage.setItem(`tablePreviewText-${props.moduleName}`, String(checked));\r\n            props.successUpdatedSettings();\r\n        }\r\n    }\r\n    const handleSelectGroup = (e: any) => {\r\n        if (props.setSelectedGroup && props.setGrouped) {\r\n            props.setSelectedGroup(e.target.value)\r\n            if (e.target.value === GroupedColumnTepsGrid.NONE)\r\n                props.setGrouped({isGrouped: false, column: GroupedColumnTepsGrid.NONE})\r\n            else if (e.target.value === GroupedColumnTepsGrid.DICT)\r\n                props.setGrouped({isGrouped: true, column: GroupedColumnTepsGrid.DICT})\r\n            else if (e.target.value === GroupedColumnTepsGrid.NF)\r\n                props.setGrouped({isGrouped: true, column: GroupedColumnTepsGrid.NF})\r\n            else if (e.target.value === GroupedColumnTepsGrid.RESP_STRUCT)\r\n                props.setGrouped({isGrouped: true, column: GroupedColumnTepsGrid.RESP_STRUCT})\r\n            else if (e.target.value === GroupedColumnTepsGrid.STATUS)\r\n                props.setGrouped({isGrouped: true, column: GroupedColumnTepsGrid.STATUS})\r\n            //localStorage.setItem(`tableSelectedGroup-${props.moduleName}`, e.target.value)\r\n            props.successUpdatedSettings();\r\n        }\r\n    }\r\n    return (\r\n        <Modal\r\n            title={'Настройки'}\r\n            centered={true}\r\n            open={props.visible}\r\n            onCancel={() => props.setVisible(false)}\r\n            footer={[]}\r\n            modalRender={(modal) => (\r\n                // @ts-ignore\r\n                <Dragable\r\n                    disabled={disabled}\r\n                    bounds={bounds}\r\n                    onStart={(event, uiData) => onStart(event, uiData)}\r\n                >\r\n                    <div ref={draggableRef}>{modal}</div>\r\n                </Dragable>\r\n            )}\r\n            width={\"400px\"}\r\n        >\r\n            <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                <Title style={{display: 'flex', alignSelf: 'center', marginBottom: 10}} level={5}>Общие</Title>\r\n                <div style={{\r\n                    width: 300,\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center',\r\n                    marginBottom: 15\r\n                }}>\r\n                    Отображать шапку таблицы\r\n                    <Switch defaultChecked={props.showHeader} onChange={handleShowHeader}/>\r\n                </div>\r\n                <div style={{\r\n                    width: 300,\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center',\r\n                    marginBottom: 15,\r\n                }}>\r\n                    Включить границы ячеек\r\n                    <Switch defaultChecked={props.showBorders} onChange={handleShowCellBorders}/>\r\n                </div>\r\n                {/*{props.setStatusColored &&*/}\r\n                {/*    <div style={{*/}\r\n                {/*        width: 300,*/}\r\n                {/*        display: 'flex',*/}\r\n                {/*        justifyContent: 'space-between',*/}\r\n                {/*        alignItems: 'center',*/}\r\n                {/*        marginBottom: 15,*/}\r\n                {/*    }}>*/}\r\n                {/*        Цветные статусы*/}\r\n                {/*        <Switch defaultChecked={props.statusColored} onChange={handleSetStatusColored}/>*/}\r\n                {/*    </div>*/}\r\n                {/*}*/}\r\n                {/*{props.setPreviewText &&*/}\r\n                {/*    <div style={{*/}\r\n                {/*        width: 300,*/}\r\n                {/*        display: 'flex',*/}\r\n                {/*        justifyContent: 'space-between',*/}\r\n                {/*        alignItems: 'center',*/}\r\n                {/*    }}>*/}\r\n                {/*        Содержимое ячейки при наведении*/}\r\n                {/*        <Switch defaultChecked={props.previewText} onChange={handleSetPreviewText}/>*/}\r\n                {/*    </div>*/}\r\n                {/*}*/}\r\n                {(props.setFixedDimensionColumn && props.setFixedNfColumn && props.setFixedNfNumberColumn) &&\r\n                    <>\r\n                        <Divider style={{width: '220px'}}/>\r\n                        <div style={{\r\n                            width: 400,\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'start',\r\n                            flexDirection: 'column'\r\n                        }}>\r\n                            <Title style={{display: 'flex', alignSelf: 'center', marginBottom: 10}} level={5}>Закрепить\r\n                                столбцы</Title>\r\n                            <div style={{\r\n                                width: 300,\r\n                                display: 'flex',\r\n                                justifyContent: 'space-between',\r\n                                alignItems: 'center',\r\n                                marginBottom: 15\r\n                            }}>\r\n                                № Нормофактора\r\n                                <Switch defaultChecked={props.fixedNfNumberColumn}\r\n                                        onChange={() => {\r\n                                            if (props.setFixedNfNumberColumn) {\r\n                                                props.setFixedNfNumberColumn((prev: boolean) => {\r\n                                                    //if (props.fixedNfNumberColumn !== undefined)\r\n                                                    //    localStorage.setItem('pinNfNumber-consolidatedReport', props.fixedNfNumberColumn.toString());\r\n                                                    return !prev;\r\n                                                });\r\n                                            }\r\n                                        }}/>\r\n                            </div>\r\n                            <div style={{\r\n                                width: 300,\r\n                                display: 'flex',\r\n                                justifyContent: 'space-between',\r\n                                alignItems: 'center',\r\n                                marginBottom: 15\r\n                            }}>\r\n                                Наименование Нормофактора (ТЭП)\r\n                                <Switch defaultChecked={props.fixedNfColumn}\r\n                                        onChange={() => {\r\n                                            if (props.setFixedNfColumn && props.fixedNfColumn !== undefined) {\r\n                                                props.setFixedNfColumn((prev: boolean) => {\r\n                                                    //if (props.fixedNfColumn !== undefined)\r\n                                                    //    localStorage.setItem('pinNfName-consolidatedReport', props.fixedNfColumn.toString());\r\n                                                    return !prev;\r\n                                                });\r\n                                            }\r\n                                        }}/>\r\n                            </div>\r\n                            <div style={{\r\n                                width: 300,\r\n                                display: 'flex',\r\n                                justifyContent: 'space-between',\r\n                                alignItems: 'center',\r\n                                marginBottom: 15\r\n                            }}>\r\n                                Единицы измерения\r\n                                <Switch defaultChecked={props.fixedDimensionColumn}\r\n                                        onChange={() => {\r\n                                            if (props.setFixedDimensionColumn && props.fixedDimensionColumn !== undefined) {\r\n                                                props.setFixedDimensionColumn((prev: boolean) => {\r\n                                                    //if (props.fixedDimensionColumn !== undefined)\r\n                                                    //    localStorage.setItem('pinDimension-consolidatedReport', props.fixedDimensionColumn.toString());\r\n                                                    return !prev\r\n                                                });\r\n                                            }\r\n                                        }}/>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                }\r\n                {(props.setSelectedGroup && props.setGrouped) &&\r\n                    <>\r\n                        <Divider style={{width: '220px'}}/>\r\n                        <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                            <Title style={{display: 'flex', alignSelf: 'center', marginBottom: 10}} level={5}>Группировка\r\n                                по столбцам</Title>\r\n                            <Radio.Group style={{display: 'flex', flexDirection: 'column'}} onChange={handleSelectGroup}\r\n                                         value={props.selectedGroup}>\r\n                                <Radio value={GroupedColumnTepsGrid.NONE} style={{marginBottom: '5px'}}>Нет</Radio>\r\n                                <Radio value={GroupedColumnTepsGrid.DICT} style={{marginBottom: '5px'}}>Сборник</Radio>\r\n                                <Radio value={GroupedColumnTepsGrid.NF} style={{marginBottom: '5px'}}>Наименование\r\n                                    Нормофактора</Radio>\r\n                                <Radio value={GroupedColumnTepsGrid.RESP_STRUCT} style={{marginBottom: '5px'}}>Ответственное\r\n                                    подразделение</Radio>\r\n                                <Radio value={GroupedColumnTepsGrid.STATUS} style={{marginBottom: '5px'}}>Статус</Radio>\r\n                            </Radio.Group>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>\r\n        </Modal>\r\n    )\r\n}","import React, {useEffect, useRef, useState} from 'react';\r\nimport {\r\n    Badge,\r\n    Button,\r\n    Divider,\r\n    Input, InputRef,\r\n    message,\r\n    notification,\r\n    Popconfirm,\r\n    Select, Space,\r\n    Table,\r\n    Tag,\r\n    Tooltip,\r\n    Typography\r\n} from 'antd';\r\nimport type {ColumnsType, ColumnType} from 'antd/es/table';\r\nimport {blue} from '@ant-design/colors';\r\nimport {SearchOutlined} from '@ant-design/icons';\r\nimport {tepsAPI} from \"../../services/TepService\";\r\nimport {ITep} from \"../../models/ITep\";\r\nimport {SettingOutlined} from \"@ant-design/icons\";\r\nimport {GroupedColumnTepsGrid} from \"../../ENUMS\";\r\n// @ts-ignore\r\nimport Highlighter from \"react-highlight-words\"\r\nimport \"../../App.css\";\r\nimport {useAppSelector} from \"../../hooks/redux\";\r\nimport {IFilial} from \"../../models/IFilial\";\r\nimport {useTimeout} from \"../../hooks/useTimeout\";\r\nimport {TepModal} from \"../../components/TepModal\";\r\nimport {IRole} from \"../../models/IRole\";\r\nimport {BaseGrid} from \"../../components/BaseGrid\";\r\nimport {GridSettingsModal} from \"../../components/GridSettingsModal\";\r\nimport {NotificationPlacement} from \"antd/es/notification/interface\";\r\nimport {IStatus} from \"../../models/IStatus\";\r\nimport {FilterConfirmProps} from \"antd/es/table/interface\";\r\n\r\nconst {Text} = Typography;\r\n\r\ninterface DictsListItem {\r\n    text: string;\r\n    value: string;\r\n}\r\n\r\ninterface Grouped {\r\n    isGrouped: boolean;\r\n    column: GroupedColumnTepsGrid;\r\n}\r\n\r\nexport interface DataType extends ITep {\r\n    key: React.Key;\r\n    children?: any;\r\n}\r\n\r\ntype DataIndex = keyof DataType;\r\n\r\nfunction getUniqDictsList(data: DataType[] | undefined): DictsListItem[] {\r\n    if (data) {\r\n        let result: DictsListItem[] = []\r\n        data.forEach((record: any) => {\r\n            if (!result.find((resRecord: any) => (resRecord.text === record.shortDict))) {\r\n                result.push({\r\n                    text: record.shortDict,\r\n                    value: record.shortDict\r\n                })\r\n            }\r\n        })\r\n        return result\r\n    } else return [];\r\n}\r\n\r\nfunction getUniqNfNameList(data: DataType[] | undefined): DictsListItem[] {\r\n    if (data) {\r\n        let result: DictsListItem[] = []\r\n        data.forEach((record: any) => {\r\n            if (!result.find((resRecord: any) => (resRecord.text === record.nfName))) {\r\n                result.push({\r\n                    text: record.nfName,\r\n                    value: record.nfName\r\n                })\r\n            }\r\n        })\r\n        return result\r\n    } else return [];\r\n}\r\n\r\nfunction getUniqStatusList(data: DataType[] | undefined): DictsListItem[] {\r\n    if (data) {\r\n        let result: DictsListItem[] = []\r\n        data.forEach((record: any) => {\r\n            if (!result.find((resRecord: any) => (resRecord.text === record.status))) {\r\n                result.push({\r\n                    text: record.status,\r\n                    value: record.status\r\n                })\r\n            }\r\n        })\r\n        return result\r\n    } else return [];\r\n}\r\n\r\nfunction getUniqDimensionsList(data: DataType[] | undefined): DictsListItem[] {\r\n    if (data) {\r\n        let result: DictsListItem[] = [];\r\n        data.forEach((record: any) => {\r\n            if (!result.find((resRecord: any) => (resRecord.text === record.dimension))) {\r\n                result.push({\r\n                    text: record.dimension,\r\n                    value: record.dimension\r\n                })\r\n            }\r\n        })\r\n        return result\r\n    } else return [];\r\n}\r\n\r\nfunction getUniqResponsibilityStructureList(data: DataType[] | undefined): DictsListItem[] {\r\n    if (data) {\r\n        let result: DictsListItem[] = []\r\n        data.forEach((record: any) => {\r\n            if (!result.find((resRecord: any) => (resRecord.text === record.responsibilityStructure))) {\r\n                result.push({\r\n                    text: record.responsibilityStructure,\r\n                    value: record.responsibilityStructure\r\n                })\r\n            }\r\n        })\r\n        return result\r\n    } else return [];\r\n}\r\n\r\nconst getGroupedData = (data: DataType[] | undefined, column: GroupedColumnTepsGrid) => {\r\n    if (data && column === GroupedColumnTepsGrid.DICT) {\r\n        return getUniqDictsList(data).map((dict, key) => {\r\n            let parentKey = key + 1\r\n            let result: any = {\r\n                key: parentKey,\r\n                shortDict: dict.text,\r\n                children: [],\r\n            }\r\n            let counter = 0\r\n            data.forEach((record: any) => {\r\n                if (record.shortDict === dict.text) {\r\n                    counter += 1\r\n                    result.children.push({...record, shortDict: '', key: parseInt(`${parentKey}${counter}`)})\r\n                }\r\n            })\r\n            return result\r\n        })\r\n    }\r\n    if (data && column === GroupedColumnTepsGrid.NF) {\r\n        return getUniqNfNameList(data).map((nf, key) => {\r\n            let parentKey = key + 1\r\n            let result: any = {\r\n                key: parentKey,\r\n                nfName: nf.text,\r\n                children: [],\r\n            }\r\n            let counter = 0\r\n            data.forEach((record: any) => {\r\n                if (record.nfName === nf.text) {\r\n                    counter += 1\r\n                    result.children.push({...record, nfName: '', key: parseInt(`${parentKey}${counter}`)})\r\n                }\r\n            })\r\n            return result\r\n        })\r\n    }\r\n    if (data && column === GroupedColumnTepsGrid.STATUS) {\r\n        return getUniqStatusList(data).map((status, key) => {\r\n            let parentKey = key + 1\r\n            let result: any = {\r\n                key: parentKey,\r\n                status: status.text,\r\n                children: [],\r\n            }\r\n            let counter = 0\r\n            data.forEach((record: any) => {\r\n                if (record.status === status.text) {\r\n                    counter += 1\r\n                    result.children.push({...record, status: '', key: parseInt(`${parentKey}${counter}`)})\r\n                }\r\n            })\r\n            return result\r\n        })\r\n    }\r\n    if (data && column === GroupedColumnTepsGrid.RESP_STRUCT) {\r\n        return getUniqResponsibilityStructureList(data).map((responsibilityStructure, key) => {\r\n            let parentKey = key + 1\r\n            let result: any = {\r\n                key: parentKey,\r\n                responsibilityStructure: responsibilityStructure.text,\r\n                children: [],\r\n            }\r\n            let counter = 0\r\n            data.forEach((record: any) => {\r\n                if (record.responsibilityStructure === responsibilityStructure.text) {\r\n                    counter += 1\r\n                    result.children.push({\r\n                        ...record,\r\n                        responsibilityStructure: '',\r\n                        key: parseInt(`${parentKey}${counter}`)\r\n                    })\r\n                }\r\n            })\r\n            return result\r\n        })\r\n    }\r\n}\r\n\r\nconst getGroupedColumns = (columns: any, col: GroupedColumnTepsGrid) => {\r\n    let first = columns.find((column: any) => column.key == col);\r\n    let other = columns.filter((column: any) => !(column.key === col));\r\n    other.unshift(first);\r\n    return other;\r\n}\r\nexport const TepModule: React.FC = () => {\r\n    // Messages\r\n    const [messageApi, contextHolder] = message.useMessage();\r\n    const [api, contextNotificationHolder] = notification.useNotification();\r\n    const successLoadTeps = () => {\r\n        // messageApi.open({\r\n        //     type: 'success',\r\n        //     content: 'Записи загружены',\r\n        //     duration: 1,\r\n        // });\r\n    }\r\n    const successUpdatedSettings = () => {\r\n        // messageApi.open({\r\n        //     type: 'success',\r\n        //     content: 'Настройки обновлены',\r\n        //     duration: 1,\r\n        // });\r\n    }\r\n    const errorLoadTeps = () => {\r\n        // messageApi.open({\r\n        //     type: 'error',\r\n        //     content: `Не получилось загрузить записи.`,\r\n        //     duration: 2,\r\n        // });\r\n    }\r\n    const successUpdateTep = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: `Запись обновлена.`,\r\n            duration: 2,\r\n        });\r\n    }\r\n    const errorUpdateTep = () => {\r\n        // messageApi.open({\r\n        //     type: 'error',\r\n        //     content: `Не получилось обновить запись.`,\r\n        //     duration: 2,\r\n        // });\r\n    }\r\n    const warningNoTepsForCreation = () => {\r\n        messageApi.open({\r\n            type: 'warning',\r\n            content: `Не найдены новые показатели`,\r\n            duration: 2,\r\n        });\r\n    }\r\n    const warningEmptyDeclineField = () => {\r\n        messageApi.open({\r\n            type: 'warning',\r\n            content: `Введите причину отклонения`,\r\n            duration: 2,\r\n        });\r\n    }\r\n    const warningEmptyChangeExplanationField = () => {\r\n        messageApi.open({\r\n            type: 'warning',\r\n            content: `Введите обоснование изменений`,\r\n            duration: 2,\r\n        });\r\n    }\r\n    const warningEmptyPlanYearField = () => {\r\n        messageApi.open({\r\n            type: 'warning',\r\n            content: `Введите значение на планируемый год`,\r\n            duration: 2,\r\n        });\r\n    }\r\n    // End of messages\r\n    // Requests\r\n    const {startRequestTimer, endRequestTimer, tick} = useTimeout();\r\n    const [getTeps, {data: teps, error, isLoading}] = tepsAPI.useGetTepsMutation();\r\n    const [getNewTepsInfo, {\r\n        data: newTepsInfo,\r\n        error: errorGetNewTepsInfo,\r\n        isLoading: isLoadingGetNewTepsInfo\r\n    }] = tepsAPI.useGetNumOfNewTepsMutation();\r\n    const [createTeps, {\r\n        data: isCreateTepsSuccess,\r\n        error: isErrorCreateNewTeps,\r\n        isLoading: isLoadingCreateNewTeps\r\n    }] = tepsAPI.useCreateNewTepsMutation();\r\n    const [updateStatuses, {\r\n        data: isStatusesUpdated,\r\n        error: isErrorUpdateStatuses,\r\n        isLoading: isLoadingUpdateStatus\r\n    }] = tepsAPI.useUpdateTepsStatusesMutation();\r\n    // End of requests\r\n    const generalStore = useAppSelector(store => store.userReducer);\r\n    const [years, setYears] = useState<{ value: string, label: string }[]>([]);\r\n    const [gridData, setGridData] = useState<DataType[]>();\r\n    const [visibleGridSettingsModal, setVisibleGridSettingsModal] = useState<boolean>(false);\r\n    const [visibleUpdateRecordModal, setVisibleUpdateRecordModal] = useState<boolean>(false);\r\n    const [selectedRecordInfo, setSelectedRecordInfo] = useState<DataType | undefined>();\r\n    const [gridGrouped, setGridGrouped] = useState<Grouped>({isGrouped: false, column: GroupedColumnTepsGrid.NONE});\r\n    const [selectedGroup, setSelectedGroup] = useState<GroupedColumnTepsGrid>(GroupedColumnTepsGrid.NONE);\r\n    const [showHeader, setShowHeader] = useState<boolean>(localStorage.getItem('tableHeader-teps') ? localStorage.getItem('tableHeader-teps') === 'true' : true);\r\n    const [showGridCellBorders, setShowGridCellBorders] = useState<boolean>(localStorage.getItem('tableBorders-teps') ? localStorage.getItem('tableBorders-teps') === 'true' : true);\r\n    const [statusColored, setStatusColored] = useState<boolean>(localStorage.getItem('tableColoredStatus-teps') ? localStorage.getItem('tableColoredStatus-teps') === 'true' : true);\r\n    const [previewText, setPreviewText] = useState<boolean>(localStorage.getItem('tablePreviewText-teps') ? localStorage.getItem('tablePreviewText-teps') === 'true' : true);\r\n    const [selectedFilial, setSelectedFilial] = useState<IFilial | null>(generalStore?.userInfo?.filials[0] ? generalStore?.userInfo?.filials[0] : null);\r\n    const [selectedRole, setSelectedRole] = useState<string | undefined>(generalStore?.userInfo?.roles.filter((role: IRole) => role.code !== 0)[0].name);\r\n    const [selectedYear, setSelectedYear] = useState<string>(generalStore.settings.year);\r\n    const [gridRowHeight] = useState<string>('78px');\r\n    const [titleFontSize,] = useState('13px');\r\n    const [tableCellFontSize,] = useState('15px');\r\n    const [columns, setColumns] = useState<ColumnsType<DataType>>([]);\r\n    const numberColumnHeader = useRef(null);\r\n    const [counter, setCounter] = useState(0);\r\n    const [isFillingAvailable, _] = useState<boolean>(() => {\r\n        let startPeriodList = generalStore.settings.startPeriod.split(\"-\");\r\n        let startPeriod = new Date(Number(startPeriodList[2]), Number(startPeriodList[1]) - 1, Number(startPeriodList[0]));\r\n        let endPeriodList = generalStore.settings.endPeriod.split(\"-\");\r\n        let endPeriod = new Date(Number(endPeriodList[2]), Number(endPeriodList[1]) - 1, Number(endPeriodList[0]));\r\n        let now = new Date();\r\n        let rightNow = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n        return (Number(rightNow) >= Number(startPeriod) && Number(rightNow) <= Number(endPeriod));\r\n    });\r\n    const searchInput = useRef<InputRef>(null);\r\n    const [searchText, setSearchText] = useState<string>('');\r\n    const [searchedColumn, setSearchedColumn] = useState<string>('');\r\n    const getColumnSearchProps = (dataIndex: DataIndex): ColumnType<DataType> => ({\r\n        filterDropdown: ({setSelectedKeys, selectedKeys, confirm, clearFilters, close}) => (\r\n            <div style={{padding: 8}} onKeyDown={(e) => e.stopPropagation()}>\r\n                <Input\r\n                    ref={searchInput}\r\n                    placeholder={`Поиск`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => handleSearch(selectedKeys as string[], confirm, dataIndex)}\r\n                    style={{marginBottom: 8, display: 'block'}}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => handleSearch(selectedKeys as string[], confirm, dataIndex)}\r\n                        icon={<SearchOutlined/>}\r\n                        size=\"small\"\r\n                        style={{width: 90}}\r\n                    >\r\n                        Поиск\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => clearFilters && handleReset(clearFilters)}\r\n                        size=\"small\"\r\n                        style={{width: 90}}\r\n                    >\r\n                        Сбросить\r\n                    </Button>\r\n                    {/*<Button*/}\r\n                    {/*    type=\"link\"*/}\r\n                    {/*    size=\"small\"*/}\r\n                    {/*    onClick={() => {*/}\r\n                    {/*        confirm({closeDropdown: false});*/}\r\n                    {/*        setSearchText((selectedKeys as string[])[0]);*/}\r\n                    {/*        setSearchedColumn(dataIndex);*/}\r\n                    {/*    }}*/}\r\n                    {/*>*/}\r\n                    {/*    Filter*/}\r\n                    {/*</Button>*/}\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            close();\r\n                        }}\r\n                    >\r\n                        Закрыть\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: (filtered: boolean) => (\r\n            <SearchOutlined style={{color: filtered ? '#1677ff' : undefined}}/>\r\n        ),\r\n        onFilter: (value, record) => {\r\n            try {\r\n                return record[dataIndex]\r\n                    .toString()\r\n                    .toLowerCase()\r\n                    .includes((value as string).toLowerCase())\r\n            } catch (e) {\r\n                return !!record.children.find((child: any) => child[dataIndex]\r\n                    .toString()\r\n                    .toLowerCase()\r\n                    .includes((value as string).toLowerCase()));\r\n            }\r\n        },\r\n        onFilterDropdownOpenChange: (visible) => {\r\n            if (visible) {\r\n                setTimeout(() => searchInput.current?.select(), 100);\r\n            }\r\n        },\r\n        render: (text) => {\r\n            return searchedColumn === dataIndex ? (\r\n                <div style={text?.length > 70 ? {\r\n                    fontSize: tableCellFontSize,\r\n                    color: 'black',\r\n                    height: gridRowHeight,\r\n                    overflowY: 'scroll'\r\n                } : {fontSize: tableCellFontSize, color: 'black', height: gridRowHeight}}><Highlighter\r\n                    highlightStyle={{backgroundColor: '#ffc069', padding: 0}}\r\n                    searchWords={[searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : ''}\r\n                /></div>\r\n            ) : (\r\n                <div style={text?.length > 70 ? {\r\n                    fontSize: tableCellFontSize,\r\n                    color: 'black',\r\n                    height: gridRowHeight,\r\n                    overflowY: 'scroll'\r\n                } : {fontSize: tableCellFontSize, color: 'black', height: gridRowHeight}}>{text}</div>\r\n            )\r\n        }\r\n    });\r\n    useEffect(() => {\r\n        if (numberColumnHeader && gridData && counter < 1)\r\n            if (numberColumnHeader.current) {\r\n                setCounter(prev => prev += 1)\r\n                //@ts-ignore\r\n                numberColumnHeader.current.click()\r\n            }\r\n    }, [columns, gridData])\r\n    useEffect(() => {\r\n        setColumns(columns)\r\n    }, [statusColored])\r\n    useEffect(() => {\r\n        if (teps) {\r\n            let gridData = teps.map((tep: ITep, key: number) => {\r\n                let tmp: DataType = {...tep, key};\r\n                return tmp;\r\n            });\r\n            const columns = [\r\n                {\r\n                    title: () => {\r\n                        return <Text ref={numberColumnHeader} className=\"dragHandler\"\r\n                                     style={{\r\n                                         color: blue.primary,\r\n                                         fontSize: titleFontSize,\r\n                                         maxHeight: 140,\r\n                                         overflow: 'hidden'\r\n                                     }}>№ нормофактора</Text>\r\n                    },\r\n                    dataIndex: 'dictNumber',\r\n                    key: 'dictNumber',\r\n                    width: 100,\r\n                    ...getColumnSearchProps('dictNumber'),\r\n                    defaultSortOrder: 'ascend',\r\n                    sorter: (a: any, b: any) => a.dictNumber - b.dictNumber,\r\n                    sortDirections: ['descend', 'ascend'],\r\n                },\r\n                {\r\n                    title: () => {\r\n                        return <Text className=\"dragHandler\"\r\n                                     style={{\r\n                                         color: blue.primary,\r\n                                         fontSize: titleFontSize,\r\n                                         maxHeight: 140,\r\n                                         overflow: 'hidden'\r\n                                     }}>Сборник</Text>\r\n                    },\r\n                    render(text: any, record: any) {\r\n                        return {\r\n                            props: {\r\n                                style: {color: 'red'}\r\n                            },\r\n                            children: <div style={text?.length > 70 ? {\r\n                                fontSize: tableCellFontSize,\r\n                                color: 'black',\r\n                                height: gridRowHeight,\r\n                                overflowY: 'scroll'\r\n                            } : {fontSize: tableCellFontSize, color: 'black', height: gridRowHeight}}>\r\n                                {(previewText && text?.length > 70) ?\r\n                                    <Tooltip placement={'left'} title={text}>\r\n                                        {text}\r\n                                    </Tooltip> :\r\n                                    <div>{text}</div>\r\n                                }\r\n                            </div>\r\n                        };\r\n                    },\r\n                    dataIndex: 'shortDict',\r\n                    key: 'shortDict',\r\n                    width: 70,\r\n                    ...getColumnSearchProps('shortDict'),\r\n                    defaultSortOrder: 'ascend',\r\n                    sorter: (a: any, b: any) => a?.shortDict?.length - b?.shortDict?.length,\r\n                    sortDirections: ['descend', 'ascend'],\r\n                    filterSearch: true,\r\n                },\r\n                {\r\n                    title: () => {\r\n                        return <Text className=\"dragHandler\"\r\n                                     style={{\r\n                                         color: blue.primary,\r\n                                         fontSize: titleFontSize,\r\n                                         maxHeight: 140,\r\n                                         overflow: 'hidden'\r\n                                     }}>Наименование\r\n                            нормофактора</Text>\r\n                    },\r\n                    dataIndex: 'nfName',\r\n                    key: 'nfName',\r\n                    width: 90,\r\n                    ...getColumnSearchProps('nfName'),\r\n                    sorter: (a: any, b: any) => a?.nfName?.length - b?.nfName?.length,\r\n                    sortDirections: ['descend', 'ascend'],\r\n                    filterSearch: true,\r\n                },\r\n                {\r\n                    title: () => {\r\n                        return <Text className=\"dragHandler\"\r\n                                     style={{\r\n                                         color: blue.primary,\r\n                                         fontSize: titleFontSize,\r\n                                         maxHeight: 140,\r\n                                         overflow: 'hidden'\r\n                                     }}>Ед.\r\n                            изм.</Text>\r\n                    },\r\n                    render(text: any, record: any) {\r\n                        return {\r\n                            props: {\r\n                                style: {color: 'red'}\r\n                            },\r\n                            children: <div style={text?.length > 70 ? {\r\n                                fontSize: tableCellFontSize,\r\n                                color: 'black',\r\n                                height: gridRowHeight,\r\n                                overflowY: 'scroll'\r\n                            } : {fontSize: tableCellFontSize, color: 'black', height: gridRowHeight}}>{text}</div>\r\n                        };\r\n                    },\r\n                    ...getColumnSearchProps('dimension'),\r\n                    filterSearch: true,\r\n                    dataIndex: 'dimension',\r\n                    key: 'dimension',\r\n                    width: 50,\r\n                },\r\n                {\r\n                    title: () => {\r\n                        return <Text className=\"dragHandler\"\r\n                                     style={{\r\n                                         color: blue.primary,\r\n                                         fontSize: titleFontSize,\r\n                                         maxHeight: 140,\r\n                                         overflow: 'hidden'\r\n                                     }}>Пред.\r\n                            год</Text>\r\n                    },\r\n                    render(text: any, record: any) {\r\n                        return {\r\n                            props: {\r\n                                style: {color: 'red'}\r\n                            },\r\n                            children: <div style={text?.length > 70 ? {\r\n                                fontSize: tableCellFontSize,\r\n                                color: 'black',\r\n                                height: gridRowHeight,\r\n                                overflowY: 'scroll'\r\n                            } : {fontSize: tableCellFontSize, color: 'black', height: gridRowHeight}}>{text}</div>\r\n                        };\r\n                    },\r\n                    ...getColumnSearchProps('prevYearValue'),\r\n                    filterSearch: true,\r\n                    dataIndex: 'prevYearValue',\r\n                    key: 'prevYearValue',\r\n                    width: 50,\r\n                },\r\n                {\r\n                    title: () => {\r\n                        return <Text className=\"dragHandler\"\r\n                                     style={{\r\n                                         color: blue.primary,\r\n                                         fontSize: titleFontSize,\r\n                                         maxHeight: 140,\r\n                                         overflow: 'hidden'\r\n                                     }}>План.\r\n                            год</Text>\r\n                    },\r\n                    render(text: any, record: any) {\r\n                        return {\r\n                            props: {\r\n                                fontSize: tableCellFontSize,\r\n                                style: {color: 'red'}\r\n                            },\r\n                            children: <div style={text?.length > 70 ? {\r\n                                color: 'black',\r\n                                height: gridRowHeight,\r\n                                overflowY: 'scroll'\r\n                            } : {fontSize: tableCellFontSize, color: 'black', height: gridRowHeight}}>{text}</div>\r\n                        };\r\n                    },\r\n                    ...getColumnSearchProps('planYearValue'),\r\n                    filterSearch: true,\r\n                    dataIndex: 'planYearValue',\r\n                    key: 'planYearValue',\r\n                    width: 50,\r\n                },\r\n                {\r\n                    title: () => {\r\n                        return <Text className=\"dragHandler\"\r\n                                     style={{\r\n                                         color: blue.primary,\r\n                                         fontSize: titleFontSize,\r\n                                         maxHeight: 140,\r\n                                         overflow: 'hidden'\r\n                                     }}>Источник</Text>\r\n                    },\r\n                    render(text: any, record: any) {\r\n                        return {\r\n                            props: {\r\n                                style: {color: 'red'}\r\n                            },\r\n                            children: <div style={text?.length > 70 ? {\r\n                                fontSize: tableCellFontSize,\r\n                                color: 'black',\r\n                                height: gridRowHeight,\r\n                                overflowY: 'scroll'\r\n                            } : {fontSize: tableCellFontSize, color: 'black', height: gridRowHeight}}>\r\n\r\n                                {(previewText && text?.length > 70) ?\r\n                                    <Tooltip placement={'left'} title={text}>\r\n                                        {text}\r\n                                    </Tooltip> :\r\n                                    <div>{text}</div>\r\n                                }\r\n                            </div>\r\n                        };\r\n                    },\r\n                    ...getColumnSearchProps('source'),\r\n                    filterSearch: true,\r\n                    dataIndex: 'source',\r\n                    key: 'source',\r\n                    width: 100,\r\n                },\r\n                {\r\n                    title: () => {\r\n                        return <Text className=\"dragHandler\"\r\n                                     style={{\r\n                                         color: blue.primary,\r\n                                         fontSize: titleFontSize,\r\n                                         maxHeight: 140,\r\n                                         overflow: 'hidden'\r\n                                     }}>Обоснование\r\n                            изменений</Text>\r\n                    },\r\n                    render(text: any, record: any) {\r\n                        return {\r\n                            props: {\r\n                                style: {color: 'red'}\r\n                            },\r\n                            children: <div style={text?.length > 70 ? {\r\n                                fontSize: tableCellFontSize,\r\n                                color: 'black',\r\n                                height: gridRowHeight,\r\n                                overflowY: 'scroll'\r\n                            } : {fontSize: tableCellFontSize, color: 'black', height: gridRowHeight}}>{text}</div>\r\n                        };\r\n                    },\r\n                    ...getColumnSearchProps('changeExplanation'),\r\n                    filterSearch: true,\r\n                    dataIndex: 'changeExplanation',\r\n                    key: 'changeExplanation',\r\n                    width: 110,\r\n                },\r\n                {\r\n                    title: () => {\r\n                        return <Text className=\"dragHandler\"\r\n                                     style={{\r\n                                         color: blue.primary,\r\n                                         fontSize: titleFontSize,\r\n                                         maxHeight: 140,\r\n                                         overflow: 'hidden'\r\n                                     }}>Ответственное подразделение</Text>\r\n                    },\r\n                    render(text: any, record: any) {\r\n                        return {\r\n                            props: {\r\n                                style: {color: 'red'}\r\n                            },\r\n                            children: <div style={text?.length > 70 ? {\r\n                                fontSize: tableCellFontSize,\r\n                                color: 'black',\r\n                                height: gridRowHeight,\r\n                                overflowY: 'scroll'\r\n                            } : {fontSize: tableCellFontSize, color: 'black', height: gridRowHeight}}>{text}</div>\r\n                        };\r\n                    },\r\n                    dataIndex: 'responsibilityStructure',\r\n                    key: 'responsibilityStructure',\r\n                    width: 100,\r\n                    filters: getUniqResponsibilityStructureList(gridData),\r\n                    onFilter: (value: any, record: any) => {\r\n                        if (record.responsibilityStructure) return record.responsibilityStructure.indexOf(value) === 0\r\n                        else return !!record.children.find((child: any) => child.responsibilityStructure.indexOf(value) === 0);\r\n                    },\r\n                    filterSearch: true,\r\n                },\r\n                {\r\n                    title: () => {\r\n                        return <Text className=\"dragHandler\"\r\n                                     style={{\r\n                                         color: blue.primary,\r\n                                         fontSize: titleFontSize,\r\n                                         maxHeight: 140,\r\n                                         overflow: 'hidden'\r\n                                     }}>Статус</Text>\r\n                    },\r\n                    render(text: any, record: any) {\r\n                        return {\r\n                            props: {\r\n                                style: {color: 'red'}\r\n                            },\r\n                            children: <div style={text?.length > 70 ? {\r\n                                fontSize: tableCellFontSize,\r\n                                color: 'black',\r\n                                height: gridRowHeight,\r\n                                overflowY: 'scroll'\r\n                            } : {fontSize: tableCellFontSize, color: 'black', height: gridRowHeight}}>\r\n                                {/*{statusColored ?*/}\r\n                                {/*    <Tag style={{maxWidth: 270, whiteSpace: 'normal'}} color={*/}\r\n                                {/*        text === 'Создано' ? 'default' :*/}\r\n                                {/*            text === 'На зполнении' ? 'purple' :*/}\r\n                                {/*                text === 'Согласовано' ? 'success' :*/}\r\n                                {/*                    text === 'На предварительном согласовании' ? 'orange' :*/}\r\n                                {/*                        text === 'На согласовании' ? 'processing' :*/}\r\n                                {/*                            text === 'На доработку ответственному за предварительное согласование данных' ? 'red' :*/}\r\n                                {/*                                text === 'На доработку ответственному за ввод данных' ? 'magenta' :*/}\r\n                                {/*                                    'blue'*/}\r\n                                {/*    }>{text}</Tag>*/}\r\n                                {/*    :*/}\r\n                                <div>{text}</div>\r\n\r\n                            </div>\r\n                        };\r\n                    },\r\n                    dataIndex: 'status',\r\n                    key: 'status',\r\n                    width: 70,\r\n                    filters: getUniqStatusList(gridData),\r\n                    onFilter: (value: any, record: any) => {\r\n                        if (record.status) return record.status.indexOf(value) === 0\r\n                        else return !!record.children.find((child: any) => child.status.indexOf(value) === 0);\r\n                    },\r\n                    sorter: (a: any, b: any) => a.status.length - b.status.length,\r\n                    sortDirections: ['descend', 'ascend'],\r\n                    filterSearch: true,\r\n                }\r\n            ]\r\n            let sg = localStorage.getItem('tableSelectedGroup-teps');\r\n            setGridData(gridData);\r\n            if (sg) {\r\n                if (sg === '' || sg === 'shortDict' || sg === 'nfName' || sg === 'responsibilityStructure' || sg === 'status') {\r\n                    setSelectedGroup(GroupedColumnTepsGrid.STATUS);\r\n                    setGridGrouped({isGrouped: true, column: sg as GroupedColumnTepsGrid})\r\n                    setColumns(getGroupedColumns(columns, sg as GroupedColumnTepsGrid))\r\n                }\r\n            } else {\r\n                // @ts-ignore\r\n                setColumns(columns)\r\n            }\r\n            successLoadTeps();\r\n        }\r\n    }, [teps]);\r\n    useEffect(() => {\r\n        if (error) {\r\n            errorLoadTeps();\r\n            startRequestTimer();\r\n        }\r\n    }, [error]);\r\n    useEffect(() => {\r\n        if (!isLoading)\r\n            endRequestTimer();\r\n    }, [isLoading]);\r\n    useEffect(() => {\r\n        let years: { label: string, value: string }[] = [];\r\n        for (let year = 2018; year <= Number(generalStore.settings.year); year++) years.push({\r\n            label: String(year),\r\n            value: String(year)\r\n        })\r\n        setYears(years);\r\n        if (selectedFilial) getNewTepsInfo({filialId: selectedFilial?.id, year: selectedYear});\r\n    }, []);\r\n    useEffect(() => {\r\n        if (!isFillingAvailable) {\r\n            openNotification('topRight')\r\n        } else {\r\n            let role: IRole | undefined = generalStore?.userInfo?.roles.find((role: IRole) => role.name === selectedRole);\r\n            if (role && selectedFilial) {\r\n                getTeps({filialId: selectedFilial.id, planYear: selectedYear, roleCode: role.code});\r\n                getNewTepsInfo({filialId: selectedFilial.id, year: selectedYear});\r\n            }\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        if (isCreateTepsSuccess && generalStore.userInfo) {\r\n            let role: IRole | undefined = generalStore?.userInfo?.roles.find((role: IRole) => role.name === selectedRole);\r\n            if (role && selectedFilial) {\r\n                getTeps({filialId: selectedFilial.id, planYear: selectedYear, roleCode: role.code});\r\n                getNewTepsInfo({filialId: selectedFilial.id, year: selectedYear});\r\n            }\r\n        }\r\n    }, [isCreateTepsSuccess]);\r\n    useEffect(() => {\r\n        if (isStatusesUpdated) {\r\n            let role: IRole | undefined = generalStore?.userInfo?.roles.find((role: IRole) => role.name === selectedRole);\r\n            if (role && selectedFilial) getTeps({\r\n                filialId: selectedFilial.id,\r\n                planYear: selectedYear,\r\n                roleCode: role.code\r\n            });\r\n        }\r\n    }, [isStatusesUpdated])\r\n    useEffect(() => {\r\n        if (gridGrouped.isGrouped) {\r\n            setColumns(getGroupedColumns(columns, gridGrouped.column))\r\n        }\r\n    }, [gridGrouped])\r\n    useEffect(() => {\r\n        setColumns((prevColumns) => {\r\n            return prevColumns.map((column: any) => {\r\n                return {\r\n                    ...column, render: (text) => {\r\n                        return searchedColumn === column.dataIndex ? (\r\n                                <div style={text?.length > 70 ? {\r\n                                    fontSize: tableCellFontSize,\r\n                                    color: 'black',\r\n                                    height: gridRowHeight,\r\n                                    overflowY: 'scroll'\r\n                                } : {fontSize: tableCellFontSize, color: 'black', height: gridRowHeight}}>\r\n                                    {(previewText && text?.length > 70) ?\r\n                                        <Tooltip placement={'left'} title={text}>\r\n                                            <Highlighter\r\n                                                highlightStyle={{backgroundColor: '#ffc069', padding: 0}}\r\n                                                searchWords={[searchText]}\r\n                                                autoEscape\r\n                                                textToHighlight={text ? text.toString() : ''}\r\n                                            />\r\n                                        </Tooltip> :\r\n                                        <div><Highlighter\r\n                                            highlightStyle={{backgroundColor: '#ffc069', padding: 0}}\r\n                                            searchWords={[searchText]}\r\n                                            autoEscape\r\n                                            textToHighlight={text ? text.toString() : ''}\r\n                                        /></div>\r\n                                    }\r\n                                </div>\r\n                            ) :\r\n                            <div style={text?.length > 70 ? {\r\n                                fontSize: tableCellFontSize,\r\n                                color: 'black',\r\n                                height: gridRowHeight,\r\n                                overflowY: 'scroll'\r\n                            } : {fontSize: tableCellFontSize, color: 'black', height: gridRowHeight}}>\r\n                                {(previewText && text?.length > 70) ?\r\n                                    <Tooltip placement={'left'} title={text}>\r\n                                        {text}\r\n                                    </Tooltip> :\r\n                                    <div>{text}</div>\r\n                                }\r\n                            </div>\r\n                    }\r\n                }\r\n            })\r\n        })\r\n    }, [searchText]);\r\n    const handleChangeStatus = (status: IStatus | undefined) => {\r\n        if (selectedFilial && status) {\r\n            updateStatuses({\r\n                filialId: selectedFilial.id,\r\n                statusId: status.id,\r\n                year: selectedYear\r\n            });\r\n        }\r\n    }\r\n    const handleUpdateRole = (roleStr: string) => {\r\n        setSelectedRole(roleStr);\r\n        let role: IRole | undefined = generalStore?.userInfo?.roles.find((role: IRole) => role.name === roleStr);\r\n        if (role && selectedFilial) {\r\n            getTeps({filialId: selectedFilial.id, planYear: selectedYear, roleCode: role.code});\r\n            getNewTepsInfo({filialId: selectedFilial.id, year: selectedYear});\r\n        }\r\n    }\r\n    const handleUpdateFilial = (value: string) => {\r\n        let selectedFilial: IFilial | undefined = generalStore?.userInfo?.filials.find((filial: IFilial) => filial.name === value);\r\n        if (selectedFilial) {\r\n            setSelectedFilial(selectedFilial);\r\n            let role: IRole | undefined = generalStore?.userInfo?.roles.find((role: IRole) => role.name === selectedRole);\r\n            if (role) getTeps({filialId: selectedFilial.id, planYear: selectedYear, roleCode: role.code});\r\n            getNewTepsInfo({filialId: selectedFilial.id, year: selectedYear});\r\n        }\r\n    }\r\n    const handleUpdateYear = (value: string) => {\r\n        setSelectedYear(value);\r\n        let role: IRole | undefined = generalStore?.userInfo?.roles.find((role: IRole) => role.name === selectedRole);\r\n        if (role && selectedFilial) {\r\n            getTeps({filialId: selectedFilial.id, planYear: value, roleCode: role.code});\r\n            getNewTepsInfo({filialId: selectedFilial.id, year: value});\r\n        }\r\n    }\r\n    const handleCreateNewTeps = () => {\r\n        if (newTepsInfo?.createdCount && selectedFilial) {\r\n            createTeps({year: selectedYear, filialId: selectedFilial.id});\r\n        } else {\r\n            warningNoTepsForCreation();\r\n        }\r\n    }\r\n    const openNotification = (placement: NotificationPlacement) => {\r\n        api.info({\r\n            message: 'Заполнение недоступно',\r\n            description: `Начало: ${generalStore.settings.startPeriod} \r\n                            Окончание: ${generalStore.settings.endPeriod}`,\r\n            duration: 10,\r\n            placement\r\n        })\r\n    }\r\n    const openNotificationNotFilledPlanYearValueRecords = (placement: NotificationPlacement, props: any[]) => {\r\n        api.info({\r\n            message: 'Заполнение недоступно',\r\n            description: `Записи без заполненного значения на планируемый год: ${props[0]}`,\r\n            duration: 10,\r\n            placement\r\n        })\r\n    }\r\n    const handleSearch = (selectedKeys: string[], confirm: (param?: FilterConfirmProps) => void, dataIndex: DataIndex) => {\r\n        confirm()\r\n        setSearchText(selectedKeys[0]);\r\n        setSearchedColumn(dataIndex);\r\n    }\r\n    const handleReset = (clearFilters: () => void) => {\r\n        clearFilters();\r\n        setSearchText('');\r\n    }\r\n    return (\r\n        <>{(generalStore.userInfo && generalStore.roles) &&\r\n            <div style={{height: window.innerHeight - 140, paddingTop: '10px'}}>\r\n                {contextHolder}\r\n                {contextNotificationHolder}\r\n                <GridSettingsModal\r\n                    moduleName={'teps'}\r\n                    successUpdatedSettings={successUpdatedSettings}\r\n                    previewText={previewText}\r\n                    setPreviewText={setPreviewText}\r\n                    setStatusColored={setStatusColored}\r\n                    statusColored={statusColored}\r\n                    selectedGroup={selectedGroup}\r\n                    setSelectedGroup={setSelectedGroup}\r\n                    visible={visibleGridSettingsModal}\r\n                    setVisible={setVisibleGridSettingsModal}\r\n                    setGrouped={setGridGrouped}\r\n                    showBorders={showGridCellBorders}\r\n                    showHeader={showHeader}\r\n                    setShowHeader={setShowHeader}\r\n                    setShowBorders={setShowGridCellBorders}\r\n                />\r\n                {selectedRecordInfo &&\r\n                    <TepModal\r\n                        planYear={selectedYear}\r\n                        selectedRole={selectedRole ?? ''}\r\n                        setData={setGridData}\r\n                        successUpdateTep={successUpdateTep}\r\n                        errorUpdateTep={errorUpdateTep}\r\n                        record={selectedRecordInfo}\r\n                        visible={visibleUpdateRecordModal}\r\n                        setVisible={setVisibleUpdateRecordModal}\r\n                        isFillingAvailable={isFillingAvailable}\r\n                        warningEmptyDeclineField={warningEmptyDeclineField}\r\n                        warningEmptyChangeExplanationField={warningEmptyChangeExplanationField}\r\n                        warningEmptyPlanYearField={warningEmptyPlanYearField}\r\n                    />\r\n                }\r\n                <div style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center',\r\n                    marginLeft: '15px',\r\n                    marginRight: '15px',\r\n                    marginBottom: '10px'\r\n                }}>\r\n                    <div style={{display: 'flex'}}>\r\n                        {generalStore?.userInfo?.filials.length === 1 ?\r\n                            <Text style={{\r\n                                width: '220px',\r\n                                marginRight: '5px',\r\n                                display: 'flex',\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center'\r\n                            }}>{generalStore?.userInfo?.filials[0].name}</Text>\r\n                            :\r\n                            <Select\r\n                                disabled={isLoading}\r\n                                defaultValue={selectedFilial?.name}\r\n                                style={{width: '190px', marginRight: '5px'}}\r\n                                onChange={handleUpdateFilial}\r\n                                options={generalStore?.userInfo?.filials.map((filial: IFilial) => ({\r\n                                    value: filial.name,\r\n                                    label: filial.name\r\n                                }))}\r\n                            />\r\n                        }\r\n                        <Select\r\n                            disabled={isLoading}\r\n                            defaultValue={selectedYear}\r\n                            style={{width: '190px'}}\r\n                            onChange={handleUpdateYear}\r\n                            options={years}\r\n                        />\r\n                        {generalStore?.userInfo?.roles.filter((role: IRole) => role.code !== 0).length === 1 ?\r\n                            <div></div>\r\n                            //<Text style={{width: '190px', marginRight: '5px', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>{generalStore?.userInfo?.roles.filter((role: IRole) => role.code !== 0)[0].name}</Text>\r\n                            :\r\n                            <Select\r\n                                disabled={isLoading}\r\n                                defaultValue={selectedRole}\r\n                                style={{width: '250px', marginLeft: 5}}\r\n                                onChange={handleUpdateRole}\r\n                                options={generalStore?.userInfo?.roles.filter((role: IRole) => role.code !== 0).map((role: IRole) => ({\r\n                                    value: role.name,\r\n                                    label: role.name\r\n                                }))}\r\n                            />\r\n                        }\r\n\r\n                        {(isFillingAvailable && selectedYear >= generalStore.settings.year) &&\r\n                            <Divider type={'vertical'} style={{height: 34, marginLeft: 30}}/>}\r\n\r\n                        {(isFillingAvailable && selectedRole === generalStore?.roles.find((role: IRole) => role.code === 1)?.name && selectedYear >= generalStore.settings.year) &&\r\n                            <Popconfirm\r\n                                disabled={!isFillingAvailable}\r\n                                title={newTepsInfo?.createdCount > 0 ? 'Найдены новые записи в сборниках' : 'Новые записи в сборниках не найдены'}\r\n                                // @ts-ignore\r\n                                description={newTepsInfo?.createdCount > 0 ? `Вы уверены, что хотите добавить ${newTepsInfo?.createdCount} показателей` : ''}\r\n                                okText={'Добавить'}\r\n                                cancelText={'Отменить'}\r\n                                onConfirm={handleCreateNewTeps}\r\n                            >\r\n                                <Badge style={{backgroundColor: '#1677FF'}} count={newTepsInfo?.createdCount}>\r\n                                    <Button disabled={isLoadingUpdateStatus || isLoadingCreateNewTeps}\r\n                                            style={{marginLeft: 20}}>Добавить\r\n                                        показатели</Button>\r\n                                </Badge>\r\n                            </Popconfirm>}\r\n\r\n                        {(isFillingAvailable\r\n                                && generalStore?.userInfo?.roles.find((role: IRole) => role.code === 1)?.name\r\n                                && selectedRole === generalStore?.roles.find((role: IRole) => role.code === 1)?.name\r\n                                && selectedYear >= generalStore.settings.year) &&\r\n                            <Popconfirm\r\n                                disabled={!isFillingAvailable}\r\n                                title={'Отправить показатели на заполнение'}\r\n                                // @ts-ignore\r\n                                description={'Технико-экономические показатели со статусом \"Создано\" будут отправлены на заполнение'}\r\n                                okText={'Отправить'}\r\n                                cancelText={'Отменить'}\r\n                                onConfirm={() => handleChangeStatus(generalStore.statuses.find((status: IStatus) => status.code === \"1\"))}\r\n                            >\r\n                                <Button disabled={isLoadingUpdateStatus} style={{marginLeft: 20}}>На заполнение</Button>\r\n                            </Popconfirm>\r\n                        }\r\n\r\n                        {(isFillingAvailable\r\n                                && generalStore?.userInfo?.roles.find((role: IRole) => role.code === 2)?.name\r\n                                && selectedRole === generalStore?.roles.find((role: IRole) => role.code === 2)?.name\r\n                                && selectedYear >= generalStore.settings.year) &&\r\n                            <Popconfirm\r\n                                disabled={!isFillingAvailable}\r\n                                title={'Отправить показатели на предварительное согласование'}\r\n                                // @ts-ignore\r\n                                description={'Показатели со статусом \"На заполнении\" будут отправлены на предварительное согласование'}\r\n                                okText={'Отправить'}\r\n                                cancelText={'Отменить'}\r\n                                onConfirm={() => {\r\n                                    if (gridData) {\r\n                                        const notFilledPlanYearValueRecords = gridData.filter((record: DataType) => record.planYearValue === null || record.planYearValue?.toString().trim().length === 0)\r\n                                        if (notFilledPlanYearValueRecords?.length > 0 )\r\n                                            openNotificationNotFilledPlanYearValueRecords('topRight', [notFilledPlanYearValueRecords?.length])\r\n                                        else\r\n                                            handleChangeStatus(generalStore.statuses.find((status: IStatus) => status.code === \"2\"))\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <Button disabled={isLoadingUpdateStatus} style={{marginLeft: 20}}>\r\n                                    На предварительное согласование\r\n                                </Button>\r\n                            </Popconfirm>\r\n                        }\r\n\r\n                        {(isFillingAvailable &&\r\n                                generalStore?.userInfo?.roles.find((role: IRole) => role.code === 3)\r\n                                && selectedRole === generalStore?.roles.find((role: IRole) => role.code === 3)?.name\r\n                                && selectedYear >= generalStore.settings.year) &&\r\n                            <Popconfirm\r\n                                disabled={!isFillingAvailable}\r\n                                title={'Отправить показатели на согласование'}\r\n                                // @ts-ignore\r\n                                description={'Все показатели будут отправлены на согласование, вы уверены?'}\r\n                                okText={'Отправить'}\r\n                                cancelText={'Отменить'}\r\n                                onConfirm={() => handleChangeStatus(generalStore.statuses.find((status: IStatus) => status.code === \"3\"))}\r\n                            >\r\n                                <Button disabled={isLoadingUpdateStatus} style={{marginLeft: 20}}>На\r\n                                    согласование</Button>\r\n                            </Popconfirm>\r\n                        }\r\n\r\n                        {(isFillingAvailable &&\r\n                                generalStore?.userInfo?.roles.find((role: IRole) => role.code === 4)\r\n                                && selectedRole === generalStore?.roles.find((role: IRole) => role.code === 4)?.name\r\n                                && selectedYear >= generalStore.settings.year) &&\r\n                            <Popconfirm\r\n                                disabled={!isFillingAvailable || !gridData?.find((record: DataType) => record.status !== generalStore?.statuses?.find((status: IStatus) => status.code === \"4\")?.name)}\r\n                                title={'Согласовать'}\r\n                                // @ts-ignore\r\n                                description={'Все показатели будут согласованы, вы уверены?'}\r\n                                okText={'Согласовать'}\r\n                                cancelText={'Отменить'}\r\n                                onConfirm={() => handleChangeStatus(generalStore.statuses.find((status: IStatus) => status.code === \"4\"))}\r\n                            >\r\n                                <Button disabled={isLoadingUpdateStatus\r\n                                    || !gridData?.find((record: DataType) => record.status !== generalStore?.statuses?.find((status: IStatus) => status.code === \"4\")?.name)}\r\n                                        style={{marginLeft: 20}}>Согласовать</Button>\r\n                            </Popconfirm>\r\n                        }\r\n\r\n\r\n                    </div>\r\n                    <Tooltip placement={'leftTop'} title={'Настройки таблицы'}>\r\n                        <Button className='settingsButton' icon={<SettingOutlined/>} shape={'circle'}\r\n                                onClick={() => setVisibleGridSettingsModal(true)}/>\r\n                    </Tooltip>\r\n                </div>\r\n                <BaseGrid\r\n                    statusColored={statusColored}\r\n                    bordered={showGridCellBorders}\r\n                    loading={isLoading}\r\n                    showHeader={showHeader}\r\n                    columns={columns}\r\n                    dataSource={gridGrouped.isGrouped ? getGroupedData(gridData, gridGrouped.column) : gridData}\r\n                    pagination={{position: [\"bottomRight\"], defaultPageSize: 10}}\r\n                    onRow={(record: DataType) => {\r\n                        return {\r\n                            onDoubleClick: () => {\r\n                                if (!Object.keys(record).find(key => key === 'children')) {\r\n                                    if (!record.status) {\r\n                                        //@ts-ignore\r\n                                        record.status = gridData?.find((rec: any) => rec.recordId === record.recordId)?.status\r\n                                    }\r\n                                    setVisibleUpdateRecordModal(true);\r\n                                    setSelectedRecordInfo(record);\r\n                                }\r\n                            }\r\n                        }\r\n                    }}\r\n                />\r\n            </div>}\r\n        </>\r\n    );\r\n}","import {Alert, Button, Input, Modal, Select, Spin, Typography} from \"antd\";\r\nimport {PullRequestOutlined, LoadingOutlined} from \"@ant-design/icons\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport Dragable, {DraggableData, DraggableEvent} from \"react-draggable\";\r\nimport {normfactorAPI} from \"../services/NormfactorService\";\r\n\r\nconst {Text} = Typography;\r\nconst {TextArea} = Input;\r\n\r\ninterface ResponsibilityStructure {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\ntype ModalProps = {\r\n    dictId: number,\r\n    responsibilityStructures: ResponsibilityStructure[],\r\n    visible: boolean,\r\n    setVisible: Function,\r\n    emptyFieldsWarning: Function,\r\n    getNormfactors: Function,\r\n    successCreatedNormfactorMessage: Function,\r\n    errorCreatedNormfactorMessage: Function,\r\n    successUpdatedNormfactorMessage: Function,\r\n    errorUpdatedNormfactorMessage: Function,\r\n    data: any,\r\n    setData: Function\r\n}\r\n\r\nexport const NormfactorModal = (props: ModalProps) => {\r\n    const [preCreateNormfactor, {\r\n        data: preCreatedNormfactor,\r\n        isLoading: preCreateNormfactorLoading\r\n    }] = normfactorAPI.usePreCreateNormfactorMutation();\r\n    const [createNormfactor, {\r\n        data: createdNormfactor,\r\n        error: createdNormfactorError,\r\n        isLoading: createNormfactorLoading\r\n    }] = normfactorAPI.useCreateNormfactorsMutation();\r\n    const [updateNormfactor, {\r\n        data: updatedNormfactor,\r\n        error: updatedNormfactorError,\r\n        isLoading: updateNormfactorLoading\r\n    }] = normfactorAPI.useUpdateNormfactorsMutation();\r\n    // Draggable settings\r\n    const [disabled, setDisabled] = useState<boolean>(false);\r\n    const [bounds, setBounds] = useState({left: 0, top: 0, bottom: 0, right: 0});\r\n    const draggableRef = useRef<HTMLDivElement>(null);\r\n    const onStart = (_event: DraggableEvent, uiData: DraggableData) => {\r\n        const {clientWidth, clientHeight} = window.document.documentElement;\r\n        const targetRect = draggableRef.current?.getBoundingClientRect();\r\n        if (!targetRect) {\r\n            return;\r\n        }\r\n        setBounds({\r\n            left: -targetRect.left + uiData.x,\r\n            right: clientWidth - (targetRect.right - uiData.x),\r\n            top: -targetRect.top - uiData.y,\r\n            bottom: clientHeight - (targetRect.bottom - uiData.y),\r\n        })\r\n    }\r\n    // End of dnd\r\n    const [department, setDepartment] = useState<string>();\r\n    const [nfName, setNfName] = useState<string>();\r\n    const [dimension, setDimension] = useState<string>();\r\n    const [source, setSource] = useState<string>();\r\n    const [number, setNumber] = useState<string>();\r\n    const [isNormfactorNumberExist, setIsNormfactorNumberExist] = useState<boolean>(false);\r\n    const [isNormfactorExistInCurrentDict, setIsNormfactorExistInCurrentDict] = useState<boolean>(false);\r\n    const handleSelectResponsibilityStructure = (value: string) => {\r\n        setDepartment(value);\r\n    }\r\n    const handleUpdateDict = () => {\r\n        if (department && nfName && dimension && source && number) {\r\n            updateNormfactor({\r\n                nfId: props.data.id,\r\n                dictId: props.dictId,\r\n                dimension,\r\n                nfName,\r\n                number,\r\n                responsibilityStructure: department,\r\n                source\r\n            })\r\n        } else {\r\n            props.emptyFieldsWarning()\r\n        }\r\n    }\r\n    const handleCreateDict = () => {\r\n        if (department && nfName && dimension && source && number) {\r\n            createNormfactor({\r\n                dictId: props.dictId,\r\n                dimension,\r\n                nfName,\r\n                number,\r\n                responsibilityStructure: department,\r\n                source\r\n            })\r\n        } else {\r\n            props.emptyFieldsWarning()\r\n        }\r\n    }\r\n    const handleEndOfNumberInput = () => {\r\n        if (number)\r\n            preCreateNormfactor({number, dictId: props.dictId});\r\n    }\r\n    useEffect(() => {\r\n        if (!props.visible) {\r\n            setDepartment('');\r\n            setNfName('');\r\n            setDimension('');\r\n            setSource('');\r\n            setNumber('');\r\n            setIsNormfactorNumberExist(false);\r\n            setIsNormfactorExistInCurrentDict(false);\r\n            props.setData(null);\r\n        } else if (props.data) {\r\n            setDepartment(props.data.responsibility_structure);\r\n            setNfName(props.data.name);\r\n            setDimension(props.data.dimension);\r\n            setSource(props.data.source);\r\n            setNumber(props.data.number);\r\n        }\r\n    }, [props.visible])\r\n    useEffect(() => {\r\n        if (createdNormfactor) {\r\n            props.successCreatedNormfactorMessage();\r\n            props.getNormfactors(props.dictId);\r\n            props.setVisible(false);\r\n        }\r\n    }, [createdNormfactor])\r\n    useEffect(() => {\r\n        if (updatedNormfactorError) {\r\n            props.errorCreatedNormfactorMessage();\r\n        }\r\n    }, [createdNormfactorError])\r\n    useEffect(() => {\r\n        if (updatedNormfactor) {\r\n            props.successUpdatedNormfactorMessage();\r\n            props.getNormfactors(props.dictId);\r\n            props.setVisible(false);\r\n        }\r\n    }, [updatedNormfactor])\r\n    useEffect(() => {\r\n        if (updatedNormfactorError) {\r\n            props.errorUpdatedNormfactorMessage();\r\n        }\r\n    }, [updatedNormfactorError])\r\n    useEffect(() => {\r\n        if (preCreatedNormfactor) {\r\n            setIsNormfactorNumberExist(preCreatedNormfactor.normfactorExist)\r\n            if (preCreatedNormfactor.normfactorExist) {\r\n                setNumber(preCreatedNormfactor.number);\r\n                setNfName(preCreatedNormfactor.name);\r\n                setDimension(preCreatedNormfactor.dimension);\r\n                setSource(preCreatedNormfactor.source);\r\n                setDepartment(preCreatedNormfactor.department);\r\n                setIsNormfactorExistInCurrentDict(preCreatedNormfactor.normfactorExistInCurrentDict);\r\n            }\r\n        }\r\n        else{\r\n            setIsNormfactorExistInCurrentDict(false);\r\n            setDepartment('');\r\n            setNfName('');\r\n            setDimension('');\r\n            setSource('');\r\n        }\r\n    }, [preCreatedNormfactor])\r\n    return (\r\n        <Modal\r\n            title={props.data ? 'Редактирование нормофактора' : 'Создание нормофактора'}\r\n            centered={true}\r\n            open={props.visible}\r\n            onCancel={() => props.setVisible(false)}\r\n            footer={[]}\r\n            modalRender={(modal) => (\r\n                // @ts-ignore\r\n                <Dragable\r\n                    disabled={disabled}\r\n                    bounds={bounds}\r\n                    onStart={(event, uiData) => onStart(event, uiData)}\r\n                >\r\n                    <div ref={draggableRef}>{modal}</div>\r\n                </Dragable>\r\n            )}\r\n            width={\"550px\"}\r\n        >\r\n            <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                {updateNormfactorLoading ?\r\n                    <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: 400}}>\r\n                        <Spin size=\"large\"/>\r\n                    </div>\r\n                    :\r\n                    <>\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'start',\r\n                            width: '100%',\r\n                            marginBottom: 15,\r\n                            fontSize: 14\r\n                        }}>\r\n                            <Text style={{marginBottom: 5}}>№ нормофактора</Text>\r\n                            <Input\r\n                                value={number}\r\n                                onChange={(e: any) => setNumber(e.target.value)}\r\n                                onBlur={handleEndOfNumberInput}\r\n                                prefix={preCreateNormfactorLoading ? <LoadingOutlined/> : isNormfactorNumberExist ?\r\n                                    <PullRequestOutlined/> : undefined}\r\n                                status={isNormfactorNumberExist ? 'warning' : undefined}\r\n                            />\r\n                        </div>\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'start',\r\n                            width: '100%',\r\n                            marginBottom: 15,\r\n                            marginTop: 5,\r\n                            fontSize: 14\r\n                        }}>\r\n                            <Text style={{marginBottom: 5}}>Наименование нормофактора</Text>\r\n                            <TextArea disabled={isNormfactorExistInCurrentDict || isNormfactorNumberExist} style={{minHeight: 78}} value={nfName}\r\n                                      onChange={(e: any) => setNfName(e.target.value)}/>\r\n                        </div>\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'start',\r\n                            width: '100%',\r\n                            marginBottom: 15,\r\n                            fontSize: 14\r\n                        }}>\r\n                            <Text style={{marginBottom: 5}}>Единица измерения</Text>\r\n                            <Input disabled={isNormfactorExistInCurrentDict || isNormfactorNumberExist} value={dimension} onChange={(e: any) => setDimension(e.target.value)}/>\r\n                        </div>\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'start',\r\n                            width: '100%',\r\n                            marginBottom: 15,\r\n                            fontSize: 14\r\n                        }}>\r\n                            <Text style={{marginBottom: 5}}>Источник формирования ТЭП</Text>\r\n                            <TextArea disabled={isNormfactorExistInCurrentDict || isNormfactorNumberExist} style={{minHeight: 150}} value={source}\r\n                                      onChange={(e: any) => setSource(e.target.value)}/>\r\n\r\n                        </div>\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'start',\r\n                            width: '100%',\r\n                            marginBottom: 15,\r\n                            fontSize: 14\r\n                        }}>\r\n                            <Text style={{marginBottom: 5}}>Ответственное подразделение</Text>\r\n                            <Select\r\n                                disabled={isNormfactorExistInCurrentDict || isNormfactorNumberExist}\r\n                                allowClear\r\n                                value={department}\r\n                                style={{width: 500}}\r\n                                onChange={handleSelectResponsibilityStructure}\r\n                                options={props.responsibilityStructures.map((rs: any) => ({\r\n                                    value: rs.name,\r\n                                    label: rs.name\r\n                                }))}\r\n                            />\r\n                        </div>\r\n                        {(isNormfactorNumberExist && !isNormfactorExistInCurrentDict) &&\r\n                            <Alert style={{marginBottom: 15}} message={'Нормофактор уже существует, Вы можете добавить его в этот сборник'} type={'warning'}/>\r\n                        }\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)}\r\n                             style={{\r\n                                 display: 'flex',\r\n                                 justifyContent: 'space-evenly',\r\n                                 alignItems: 'center',\r\n                                 width: '100%',\r\n                                 fontSize: 14\r\n                             }}>\r\n                            {props.data ?\r\n                                <Button disabled={preCreateNormfactorLoading}\r\n                                        onClick={handleUpdateDict}>Сохранить</Button>\r\n                                :\r\n                                preCreatedNormfactor !== undefined ?\r\n                                    !isNormfactorExistInCurrentDict ?\r\n                                        <Button disabled={preCreateNormfactorLoading}\r\n                                                onClick={handleCreateDict}>{isNormfactorNumberExist ? 'Добавить в сборник' : 'Создать'}</Button>\r\n                                        :\r\n                                        <Alert message={'Нормофактор уже существует в этом сборнике'} type={'warning'}/>\r\n                                    :\r\n                                    <Button disabled={preCreateNormfactorLoading}\r\n                                            onClick={handleCreateDict}>Создать</Button>\r\n                            }\r\n                            <Button onClick={() => props.setVisible(false)}>Отменить</Button>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>\r\n        </Modal>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {Button, message, Table, Tooltip, Typography} from 'antd';\r\nimport type {ColumnsType} from 'antd/es/table';\r\nimport {blue} from '@ant-design/colors';\r\nimport {SettingOutlined} from \"@ant-design/icons\";\r\nimport \"../../App.css\";\r\nimport {dictAPI} from \"../../services/DictService\";\r\nimport {INormfactor} from \"../../models/INormfactor\";\r\nimport {GridSettingsModal} from \"../../components/GridSettingsModal\";\r\nimport {NormfactorModal} from \"../../components/NormfactorModal\";\r\n\r\nconst {Text} = Typography;\r\n\r\nexport interface DataType {\r\n    id: number;\r\n    key: React.Key;\r\n    name: string;\r\n    dimension: string;\r\n    source: string;\r\n    responsibilityStructure: string;\r\n    number: number;\r\n}\r\n\r\nexport const NormfactorModule = (props: any) => {\r\n    // Create Toasts context\r\n    const [messageApi, contextHolder] = message.useMessage();\r\n    const successUpdatedSettings = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: 'Настройки обновлены',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const successLoadNormfactors = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: 'Нормофакторы загружены',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const errorLoadTDicts = () => {\r\n        messageApi.open({\r\n            type: 'error',\r\n            content: 'Ошибка загрузки',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const emptyFieldsWarning = () => {\r\n        messageApi.open({\r\n            type: 'warning',\r\n            content: 'Некоторые поля остались пустыми',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const successCreatedNormfactorMessage = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: 'Нормофатор создан',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const successUpdatedNormfactorMessage = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: 'Нормофатор обновлен',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const errorCreatedNormfactorMessage = () => {\r\n        messageApi.open({\r\n            type: 'error',\r\n            content: 'Ошибка создания',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const errorUpdatedNormfactorMessage = () => {\r\n        messageApi.open({\r\n            type: 'error',\r\n            content: 'Ошибка обновления',\r\n            duration: 1,\r\n        });\r\n    }\r\n    //End of toasts\r\n    // Requests\r\n    const [getNormfactors, {\r\n        data: normfactors,\r\n        error: getNormfactorsRequestError,\r\n        isLoading: getNormfactorsRequestIsLoading\r\n    }] = dictAPI.useGetDictsNormfactorsMutation();\r\n    // End of requests\r\n    const [data, setData] = useState<DataType[]>();\r\n    const [visibleSettings, setVisibleSettings] = useState<boolean>(false);\r\n    const [visible, setVisible] = useState<boolean>(false);\r\n    const [showHeader, setShowHeader] = useState<boolean>(localStorage.getItem('tableHeader-normfactors') ? localStorage.getItem('tableHeader-normfactors') === 'true' : true);\r\n    const [showCellBorders, setShowBorders] = useState<boolean>(localStorage.getItem('tableBorders-normfactors') ? localStorage.getItem('tableBorders-normfactors') === 'true' : true);\r\n    const [previewText, setPreviewText] = useState<boolean>(localStorage.getItem('tablePreviewText-normfactors') ? localStorage.getItem('tablePreviewText-normfactors') === 'true' : true);\r\n    const [selectedRecordData, setSelectedRecordData] = useState();\r\n    const [titleFontSize, ] = useState('13px');\r\n    const [tableCellFontSize, ] = useState('15px');\r\n    useEffect(() => {\r\n        getNormfactors(props.dictId)\r\n    }, []);\r\n    useEffect(() => {\r\n        if (normfactors) {\r\n            setData(normfactors.normfactors.map((nf: INormfactor, key: number) => ({...nf, key} as DataType)));\r\n            successLoadNormfactors();\r\n        }\r\n    }, [normfactors]);\r\n    useEffect(() => {\r\n        if (getNormfactorsRequestError) {\r\n            errorLoadTDicts();\r\n        }\r\n    }, [getNormfactorsRequestError]);\r\n    useEffect(()=>{if (!visible) setSelectedRecordData(undefined)}, [visible])\r\n    const columns: ColumnsType<DataType> = [\r\n        {\r\n            title: () => {\r\n                return <Text style={{color: blue.primary, fontSize: titleFontSize, maxHeight: 100, overflow: 'hidden'}}>№ нормофактора</Text>\r\n            },\r\n            render(text, record) {\r\n                return {\r\n                    props: {\r\n                        style: {color: 'red'}\r\n                    },\r\n                    children: <div style={text?.length > 70 ? {\r\n                        fontSize: tableCellFontSize,\r\n                        color: 'black',\r\n                        height: '67px',\r\n                        overflowY: 'scroll'\r\n                    } : {fontSize: tableCellFontSize, color: 'black', height: '67px'}}>{text}</div>\r\n                };\r\n            },\r\n            dataIndex: 'number',\r\n            key: 'number',\r\n            width: 'tableCellFontSize%',\r\n        },\r\n        {\r\n            title: () => {\r\n                return <Text\r\n                    style={{color: blue.primary, fontSize: titleFontSize, maxHeight: 100, overflow: 'hidden'}}>\r\n                    Наименование нормофактора\r\n                </Text>\r\n            },\r\n            render(text, record) {\r\n                return {\r\n                    props: {\r\n                        style: {color: 'red'}\r\n                    },\r\n                    children: <div style={text?.length > 70 ? {\r\n                        fontSize: tableCellFontSize,\r\n                        color: 'black',\r\n                        height: '67px',\r\n                        overflowY: 'scroll'\r\n                    } : {fontSize: tableCellFontSize, color: 'black', height: '67px'}}>\r\n                        {(previewText && text?.length > 70) ?\r\n                            <Tooltip placement={'left'} title={text}>\r\n                                {text}\r\n                            </Tooltip> :\r\n                            <div>{text}</div>\r\n                        }\r\n                    </div>\r\n                };\r\n            },\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            width: '30%',\r\n        },\r\n        {\r\n            title: () => {\r\n                return <Text style={{color: blue.primary, fontSize: titleFontSize, maxHeight: 100, overflow: 'hidden'}}>Единица\r\n                    измерения</Text>\r\n            },\r\n            render(text, record) {\r\n                return {\r\n                    props: {\r\n                        style: {color: 'red'}\r\n                    },\r\n                    children: <div style={text?.length > 70 ? {\r\n                        fontSize: tableCellFontSize,\r\n                        color: 'black',\r\n                        height: '67px',\r\n                        overflowY: 'scroll'\r\n                    } : {fontSize: tableCellFontSize, color: 'black', height: '67px'}}>\r\n                        {(previewText && text?.length > 70) ?\r\n                            <Tooltip placement={'left'} title={text}>\r\n                                {text}\r\n                            </Tooltip> :\r\n                            <div>{text}</div>\r\n                        }\r\n                    </div>\r\n                };\r\n            },\r\n            dataIndex: 'dimension',\r\n            key: 'dimension',\r\n            width: '10%',\r\n        },\r\n        {\r\n            title: () => {\r\n                return <Text style={{color: blue.primary, fontSize: titleFontSize, maxHeight: 100, overflow: 'hidden'}}>Источник\r\n                    формирования ТЭП</Text>\r\n            },\r\n            render(text, record) {\r\n                return {\r\n                    props: {\r\n                        style: {color: 'red'}\r\n                    },\r\n                    children: <div style={text?.length > 70 ? {\r\n                        fontSize: tableCellFontSize,\r\n                        color: 'black',\r\n                        height: '67px',\r\n                        overflowY: 'scroll'\r\n                    } : {fontSize: tableCellFontSize, color: 'black', height: '67px'}}>\r\n                        {(previewText && text?.length > 70) ?\r\n                            <Tooltip placement={'left'} title={text}>\r\n                                {text}\r\n                            </Tooltip> :\r\n                            <div>{text}</div>\r\n                        }\r\n                    </div>\r\n                };\r\n            },\r\n            dataIndex: 'source',\r\n            key: 'source',\r\n            width: '30%',\r\n        },\r\n        {\r\n            title: () => {\r\n                return <Text style={{color: blue.primary, fontSize: titleFontSize, maxHeight: 100, overflow: 'hidden'}}>Ответственное\r\n                    подразделение</Text>\r\n            },\r\n            render(text, record) {\r\n                return {\r\n                    props: {\r\n                        style: {color: 'red'}\r\n                    },\r\n                    children: <div style={text?.length > 70 ? {\r\n                        fontSize: tableCellFontSize,\r\n                        color: 'black',\r\n                        height: '67px',\r\n                        overflowY: 'scroll'\r\n                    } : {fontSize: tableCellFontSize, color: 'black', height: '67px'}}>{text}</div>\r\n                };\r\n            },\r\n            dataIndex: 'responsibility_structure',\r\n            key: 'responsibility_structure',\r\n            width: '15%',\r\n        },\r\n    ];\r\n    return (\r\n        <div style={{height: window.innerHeight - 140, paddingTop: '10px'}}>\r\n            {contextHolder}\r\n            {normfactors &&\r\n                <NormfactorModal\r\n                    visible={visible}\r\n                    setVisible={setVisible}\r\n                    dictId={props.dictId}\r\n                    emptyFieldsWarning={emptyFieldsWarning}\r\n                    getNormfactors={getNormfactors}\r\n                    successCreatedNormfactorMessage={successCreatedNormfactorMessage}\r\n                    errorCreatedNormfactorMessage={errorCreatedNormfactorMessage}\r\n                    responsibilityStructures={normfactors.responsibilityStructure}\r\n                    data={selectedRecordData}\r\n                    setData={setSelectedRecordData}\r\n                    errorUpdatedNormfactorMessage={errorUpdatedNormfactorMessage}\r\n                    successUpdatedNormfactorMessage={successUpdatedNormfactorMessage}/>\r\n            }\r\n            <GridSettingsModal\r\n                moduleName={'normfactors'}\r\n                successUpdatedSettings={successUpdatedSettings}\r\n                previewText={previewText}\r\n                setPreviewText={setPreviewText}\r\n                visible={visibleSettings}\r\n                setVisible={setVisibleSettings}\r\n                showBorders={showCellBorders}\r\n                showHeader={showHeader}\r\n                setShowHeader={setShowHeader}\r\n                setShowBorders={setShowBorders}\r\n            />\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                marginLeft: '15px',\r\n                marginRight: '15px',\r\n                marginBottom: '10px'\r\n            }}>\r\n                <div style={{display: 'flex'}}>\r\n                    <Button onClick={() => setVisible (true)}>Добавить показатель</Button>\r\n                </div>\r\n                <Tooltip placement={'leftTop'} title={'Настройки таблицы'}>\r\n                    <Button className='settingsButton' icon={<SettingOutlined/>} shape={'circle'}\r\n                            onClick={() => setVisibleSettings(true)}/>\r\n                </Tooltip>\r\n            </div>\r\n            <Table\r\n                bordered={showCellBorders}\r\n                loading={getNormfactorsRequestIsLoading}\r\n                showHeader={showHeader}\r\n                columns={columns}\r\n                dataSource={data}\r\n                pagination={{position: [\"bottomRight\"], defaultPageSize: 10}}\r\n                onRow={(record: any) => {\r\n                    return {\r\n                        onDoubleClick: () => {\r\n                            setSelectedRecordData(record);\r\n                            setVisible(true);\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FlowAnalysisGraph } from '@ant-design/graphs';\r\nimport {Button} from \"antd\";\r\n\r\nexport const DictGraph = ({data, setVisible}) => {\r\n\r\n  const config = {\r\n    data,\r\n    nodeCfg: {\r\n      size: [700, 70],\r\n      items: {\r\n        containerStyle: {\r\n          fill: '#fff',\r\n        },\r\n        padding: 6,\r\n        style: (cfg, group, type) => {\r\n          const styles = {\r\n            icon: {\r\n              width: 12,\r\n              height: 12,\r\n            },\r\n            value: {\r\n              fill: '#f00',\r\n            },\r\n            text: {\r\n              fill: '#aaa',\r\n            },\r\n          };\r\n          return styles[type];\r\n        },\r\n      },\r\n      nodeStateStyles: {\r\n        hover: {\r\n          stroke: '#1890ff',\r\n          lineWidth: 2,\r\n        },\r\n      },\r\n      title: {\r\n        containerStyle: {\r\n          fill: 'transparent',\r\n        },\r\n        style: {\r\n          fill: '#000',\r\n          fontSize: 22,\r\n        },\r\n      },\r\n      style: {\r\n        fill: '#E6EAF1',\r\n        stroke: '#B2BED5',\r\n        radius: [2, 2, 2, 2],\r\n      },\r\n    },\r\n    edgeCfg: {\r\n      label: {\r\n        style: {\r\n          fill: '#aaa',\r\n          fontSize: 12,\r\n          fillOpacity: 1,\r\n        },\r\n      },\r\n      style: (edge) => {\r\n        const stroke = edge.target === '0' ? '#c86bdd' : '#5ae859';\r\n        return {\r\n          stroke,\r\n          lineWidth: 5,\r\n          strokeOpacity: 0.5,\r\n        };\r\n      },\r\n      edgeStateStyles: {\r\n        hover: {\r\n          strokeOpacity: 1,\r\n        },\r\n      },\r\n    },\r\n\r\n    behaviors: ['drag-canvas', 'zoom-canvas', 'drag-node'],\r\n  };\r\n\r\n  return (\r\n      <>\r\n        <FlowAnalysisGraph width={1200} height={850} {...config} />\r\n        <Button onClick={() => setVisible(false)}>Окончить просмотр</Button>\r\n      </>\r\n  );\r\n};\r\n","import {Alert, AutoComplete, Badge, Button, Input, Modal, Select, Spin, Typography} from \"antd\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport Dragable, {DraggableData, DraggableEvent} from \"react-draggable\";\r\nimport {useAppSelector} from \"../hooks/redux\";\r\nimport {dictAPI, Edge, Node} from \"../services/DictService\";\r\nimport {IFilial} from \"../models/IFilial\";\r\nimport {DictGraph} from \"./DictGraph\"\r\nimport {departmentAPI} from \"../services/DepartmentService\";\r\nimport {IDict} from \"../models/IDict\";\r\n\r\nconst {Text} = Typography;\r\n\r\ntype ModalProps = {\r\n    availableDicts: IDict[],\r\n    data: { filials: string[], name: string, short_name: string, ooo_code: string, pao_code: string, id: number }|undefined,\r\n    setData: Function,\r\n    visible: boolean,\r\n    setVisible: Function,\r\n    emptyFieldsMessage: Function,\r\n    getDicts: Function,\r\n    successCreatedDictMessage: Function,\r\n    errorCreatedDictMessage: Function,\r\n    successUpdatedDictMessage: Function,\r\n    errorUpdatedDictMessage: Function,\r\n}\r\n\r\nexport const DictModal = (props: ModalProps) => {\r\n    const generalStore = useAppSelector(store => store.userReducer);\r\n    const [createDict, {\r\n        data: createdDict,\r\n        error: createdDictError,\r\n        isLoading: createDictLoading\r\n    }] = dictAPI.useCreateDictMutation();\r\n    const [updateDict, {\r\n        data: updatedDict,\r\n        error: updateDictError,\r\n        isLoading: updateDictLoading\r\n    }] = dictAPI.useUpdateDictMutation();\r\n    const [getDictGraphData, {\r\n        data: dictGraphDataOriginal,\r\n        error: dictGraphDataError,\r\n        isLoading: dictGraphDataLoading\r\n    }] = dictAPI.useGetDictGraphDataMutation();\r\n    const [getAllDicts, {\r\n        data: allDictsResponse,\r\n        isLoading: getAllDictsLoading\r\n    }] = dictAPI.useGetAllDictsMutation();\r\n    // Draggable settings\r\n    const [disabled, setDisabled] = useState<boolean>(true);\r\n    const [bounds, setBounds] = useState({left: 0, top: 0, bottom: 0, right: 0});\r\n    const draggableRef = useRef<HTMLDivElement>(null);\r\n    const onStart = (_event: DraggableEvent, uiData: DraggableData) => {\r\n        const {clientWidth, clientHeight} = window.document.documentElement;\r\n        const targetRect = draggableRef.current?.getBoundingClientRect();\r\n        if (!targetRect) {\r\n            return;\r\n        }\r\n        setBounds({\r\n            left: -targetRect.left + uiData.x,\r\n            right: clientWidth - (targetRect.right - uiData.x),\r\n            top: -targetRect.top - uiData.y,\r\n            bottom: clientHeight - (targetRect.bottom - uiData.y),\r\n        })\r\n    }\r\n    // End of dnd\r\n    const [showDictGraph, setShowDictGraph] = useState<boolean>(false);\r\n    const [dictGraphData, setDictGraphData] = useState<{ edges: Edge[]; nodes: Node[]; }>();\r\n    const [selectedFilials, setSelectedFilials] = useState<string[]>([]);\r\n    const [fullDictName, setFullDictName] = useState<string>('');\r\n    const [shortDictName, setShortDictName] = useState<string>('');\r\n    const [paoCode, setPaoCode] = useState<string>('');\r\n    const [oooCode, setOooCode] = useState<string>('');\r\n    const [allDicts, setAllDicts] = useState<{value:string}[]>([]);\r\n    const [existedDict, setExistedDict] = useState<boolean>(false);\r\n    const [dictAlreadyAvailable, setDictAlreadyAvailable] = useState<boolean>(false);\r\n    const handleSelectFilial = (value: string[]) => {\r\n        setSelectedFilials(value);\r\n    }\r\n    const handleUpdateDict = () => {\r\n        if (selectedFilials.length > 0 && fullDictName && shortDictName && paoCode && oooCode && props.data) {\r\n            updateDict({\r\n                dictId: props.data.id,\r\n                dictName: fullDictName,\r\n                filial: selectedFilials.map(filial => filial).join(';'),\r\n                oooCode,\r\n                paoCode,\r\n                shortDictName\r\n            })\r\n        } else {\r\n            props.emptyFieldsMessage()\r\n        }\r\n    }\r\n    const handleCreateDict = () => {\r\n        if (selectedFilials.length > 0 && ((fullDictName && shortDictName && paoCode && oooCode) || existedDict)) {\r\n            let result = allDictsResponse.dicts.find((dict:any)=>dict.name===fullDictName);\r\n            if (result)\r\n                updateDict({\r\n                    dictId: result.id,\r\n                    dictName: fullDictName,\r\n                    filial: selectedFilials.map(filial => filial).join(';'),\r\n                    oooCode,\r\n                    paoCode,\r\n                    shortDictName\r\n                })\r\n            else\r\n                createDict({\r\n                dictName: fullDictName,\r\n                filial: selectedFilials.map(filial => filial).join(';'),\r\n                oooCode,\r\n                paoCode,\r\n                shortDictName\r\n            })\r\n        } else {\r\n            props.emptyFieldsMessage()\r\n        }\r\n    }\r\n    const handleOnSelectDictName = (fullDictName:string) => {\r\n        let result = allDictsResponse.dicts.find((dict:any)=>dict.name===fullDictName);\r\n        if (result) {\r\n            if (props.data){\r\n                if (props.data.id!==result.id){\r\n                    setDictAlreadyAvailable(!(props.availableDicts.find((dict:IDict)=>dict.id===result.id)===undefined));\r\n                    setExistedDict(true);\r\n                }\r\n            }\r\n            else{\r\n                setDictAlreadyAvailable(!(props.availableDicts.find((dict:IDict)=>dict.id===result.id)===undefined));\r\n                setExistedDict(true);\r\n            }\r\n            setShortDictName(result.shortName);\r\n            setPaoCode(result.paoCode);\r\n            setOooCode(result.oooCode);\r\n            setSelectedFilials(result.filials?.map((filial:{name:string, id:number})=>filial.name));\r\n        }\r\n    }\r\n    const openDictGraphHandler = () => {\r\n        if (props.data) {\r\n            getDictGraphData(props.data.id);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        if (dictGraphDataOriginal) {\r\n            setDisabled(true);\r\n            setShowDictGraph(true);\r\n            setDictGraphData(dictGraphDataOriginal);\r\n        }\r\n    }, [dictGraphDataOriginal])\r\n    useEffect(() => {\r\n        if (!props.visible) {\r\n            setSelectedFilials([]);\r\n            setFullDictName('')\r\n            setShortDictName('')\r\n            setPaoCode('')\r\n            setOooCode('')\r\n            props.setData(null);\r\n            setShowDictGraph(false);\r\n            setExistedDict(false);\r\n            setDictAlreadyAvailable(false);\r\n        }\r\n        else{\r\n            if (props.data){\r\n                setSelectedFilials(props.data.filials);\r\n                setFullDictName(props.data.name);\r\n                setShortDictName(props.data.short_name);\r\n                setPaoCode(props.data.pao_code)\r\n                setOooCode(props.data.ooo_code)\r\n            }\r\n            getAllDicts();\r\n        }\r\n    }, [props.visible])\r\n    useEffect(()=>{\r\n        if (allDictsResponse){\r\n            setAllDicts(allDictsResponse.dicts.filter((dict:any)=>dict.name.length>0).map((dict:any)=>({value:dict.name})))\r\n        }\r\n    }, [allDictsResponse])\r\n    useEffect(() => {\r\n        if (updatedDict) {\r\n            props.successUpdatedDictMessage();\r\n            props.getDicts({});\r\n            props.setVisible(false);\r\n        }\r\n    }, [updatedDict])\r\n    useEffect(() => {\r\n        if (updateDictError) {\r\n            props.errorCreatedDictMessage();\r\n        }\r\n    }, [updateDictError])\r\n    useEffect(() => {\r\n        if (createdDict) {\r\n            props.successCreatedDictMessage();\r\n            props.getDicts({});\r\n            props.setVisible(false);\r\n        }\r\n    }, [createdDict])\r\n    useEffect(() => {\r\n        if (createdDictError) {\r\n            props.errorCreatedDictMessage();\r\n        }\r\n    }, [createdDictError])\r\n    useEffect(()=>{\r\n        if (fullDictName.trim().length===0){\r\n            setSelectedFilials([]);\r\n            setShortDictName('');\r\n            setPaoCode('');\r\n            setOooCode('');\r\n        }\r\n    }, [fullDictName])\r\n    return (\r\n        <Modal\r\n            title={props.data ? 'Редактирование сборника' : 'Создание сборника'}\r\n            centered={true}\r\n            open={props.visible}\r\n            onCancel={() => props.setVisible(false)}\r\n            footer={[]}\r\n            modalRender={(modal) => (\r\n                // @ts-ignore\r\n                <Dragable\r\n                    disabled={disabled}\r\n                    bounds={bounds}\r\n                    onStart={(event, uiData) => onStart(event, uiData)}\r\n                >\r\n                    <div ref={draggableRef}>{modal}</div>\r\n                </Dragable>\r\n            )}\r\n            width={showDictGraph?\"1250px\":\"550px\"}\r\n        >\r\n            {(showDictGraph && dictGraphData)  ?\r\n                <DictGraph data={dictGraphData} setVisible={setShowDictGraph}/>\r\n                :\r\n                <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                {(updateDictLoading || getAllDictsLoading) ?\r\n                    <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: 400}}>\r\n                        <Spin size=\"large\"/>\r\n                    </div>\r\n                    :\r\n                    <>\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'start',\r\n                            width: '100%',\r\n                            marginBottom: 15,\r\n                            fontSize: 14\r\n                        }}>\r\n                            <Text style={{marginBottom: 5}}>Наименование</Text>\r\n                            {/*<Input value={fullDictName} onChange={(e: any) => setFullDictName(e.target.value)}/>*/}\r\n                            <AutoComplete\r\n                                value={fullDictName}\r\n                                allowClear={true}\r\n                                onClear={() => {\r\n                                    setExistedDict(false);\r\n                                    setDictAlreadyAvailable(false);\r\n                                }}\r\n                                options={allDicts}\r\n                                onChange={(e)=> {\r\n                                    setFullDictName(e);\r\n                                    let result = allDictsResponse.dicts.find((dict:any)=>dict.name===e);\r\n                                    if (result) {\r\n                                        if (props.data){\r\n                                            if (props.data.id!==result.id){\r\n                                                setExistedDict(true);\r\n                                            }\r\n                                        }\r\n                                        else{\r\n                                            setExistedDict(true);\r\n                                        }\r\n                                    }\r\n                                    else setExistedDict(false);\r\n                                }}\r\n                                onSelect={(text)=>{\r\n                                    setFullDictName(text);\r\n                                    handleOnSelectDictName(text);\r\n                                }}\r\n                                filterOption={(inputValue, option)=>option!.value.toUpperCase().indexOf(inputValue.toUpperCase())!==-1}\r\n                            />\r\n                        </div>\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'start',\r\n                            width: '100%',\r\n                            marginBottom: 15,\r\n                            fontSize: 14\r\n                        }}>\r\n                            <Text style={{marginBottom: 5}}>Краткое наименование</Text>\r\n                            <Input value={shortDictName} onChange={(e: any) => setShortDictName(e.target.value)} disabled={existedDict}/>\r\n                        </div>\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'start',\r\n                            width: '100%',\r\n                            marginBottom: 15,\r\n                            marginTop: 5,\r\n                            fontSize: 14\r\n                        }}>\r\n                            <Text style={{marginBottom: 5}}>Филиал</Text>\r\n                            <Select\r\n                                disabled={dictAlreadyAvailable || (props.data && existedDict)}\r\n                                allowClear={true}\r\n                                mode={'multiple'}\r\n                                value={selectedFilials}\r\n                                style={{width: 500}}\r\n                                onChange={handleSelectFilial}\r\n                                options={generalStore?.userInfo?.filials.map((filial: IFilial) => ({\r\n                                    value: filial.name,\r\n                                    label: filial.name\r\n                                }))}\r\n                                onDeselect={(filial:string)=>{\r\n                                    if (allDictsResponse && existedDict) {\r\n                                        let dict = allDictsResponse.dicts.find((dict: any) => dict.name === fullDictName);\r\n                                        if (dict){\r\n                                            if (dict.filials.find((f:{id:number, name:string})=>f.name===filial))\r\n                                                setSelectedFilials(prev=>prev.concat(filial));\r\n                                        }\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'start',\r\n                            width: '100%',\r\n                            marginBottom: 15,\r\n                            fontSize: 14\r\n                        }}>\r\n                            <Text style={{marginBottom: 5}}>Код перечня ПАО Газпром</Text>\r\n                            <Input disabled={existedDict} value={paoCode} onChange={(e: any) => setPaoCode(e.target.value)}/>\r\n                        </div>\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'start',\r\n                            width: '100%',\r\n                            marginBottom: 15,\r\n                            fontSize: 14\r\n                        }}>\r\n                            <Text style={{marginBottom: 5}}>Код перечня ООО Газпром Трансгаз Сургут</Text>\r\n                            <Input disabled={existedDict} value={oooCode} onChange={(e: any) => setOooCode(e.target.value)}/>\r\n                        </div>\r\n                        {(existedDict && !dictAlreadyAvailable && !props.data)  &&\r\n                            <Alert style={{marginBottom: 10}} message=\"Данный сборник уже существует, Вы можете добавить в него свои филиалы, чтобы он стал Вам доступен\" />\r\n                        }\r\n                        {(props.data && existedDict && !dictAlreadyAvailable) &&\r\n                            <Alert style={{marginBottom: 10}} message=\"Данный сборник уже существует, Вам необходимо его добавить\" />\r\n                        }\r\n                        {(props.data && existedDict && dictAlreadyAvailable) &&\r\n                            <Alert style={{marginBottom: 10}} message=\"Данный сборник уже есть в списке\" />\r\n                        }\r\n                        {(dictAlreadyAvailable && !props.data) &&\r\n                            <Alert style={{marginBottom: 10}} message=\"Данный сборник уже есть списке\" />\r\n                        }\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)}\r\n                             style={{display: 'flex', justifyContent: 'space-evenly', width: '100%', fontSize: 14}}>\r\n                            {(props.data) ?\r\n                                <>\r\n                                    <Badge.Ribbon text={'Beta'} color={'green'} style={{marginTop: -15}}>\r\n                                        <Button style={{width: '120px'}} onClick={openDictGraphHandler}>Граф</Button>\r\n                                    </Badge.Ribbon>\r\n                                    <Button disabled={(props.data && existedDict)} onClick={handleUpdateDict}>Сохранить</Button>\r\n                                </>\r\n                                :\r\n                                <Button disabled={dictAlreadyAvailable} onClick={handleCreateDict}>{existedDict?'Добавить':'Создать'}</Button>\r\n                            }\r\n                            <Button onClick={() => props.setVisible(false)}>Отменить</Button>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>\r\n            }\r\n        </Modal>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {Breadcrumb, Button, message, Space, Table, Tooltip, Typography} from 'antd';\r\nimport type {ColumnsType} from 'antd/es/table';\r\nimport {blue} from '@ant-design/colors';\r\nimport {SettingOutlined} from \"@ant-design/icons\";\r\n// @ts-ignore\r\nimport Highlighter from \"react-highlight-words\"\r\nimport \"../../App.css\";\r\nimport {IDict} from \"../../models/IDict\";\r\nimport {dictAPI} from \"../../services/DictService\";\r\nimport {NormfactorModule} from \"./NormfactorModule\";\r\nimport {GridSettingsModal} from \"../../components/GridSettingsModal\";\r\nimport {DictModal} from \"../../components/DictModal\";\r\n\r\nconst {Text} = Typography;\r\n\r\nexport interface DataType {\r\n    id: number;\r\n    key: React.Key;\r\n    name: string;\r\n    ooo_code: string;\r\n    pao_code: string;\r\n    short_name: string;\r\n    filials: string[];\r\n}\r\n\r\nexport const DictModule: React.FC = () => {\r\n    // Create Toasts context\r\n    const [messageApi, contextHolder] = message.useMessage();\r\n    const successUpdatedSettings = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: 'Настройки обновлены',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const successLoadTDicts = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: 'Сборники загружены',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const errorLoadTDicts = () => {\r\n        messageApi.open({\r\n            type: 'error',\r\n            content: 'Ошибка загрузки',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const successCreatedDictMessage = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: 'Сборник создан',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const errorCreatedDictMessage = () => {\r\n        messageApi.open({\r\n            type: 'error',\r\n            content: 'Сборник с таким именем уже существует',\r\n            duration: 2,\r\n        });\r\n    }\r\n    const errorUpdatedDictMessage = () => {\r\n        messageApi.open({\r\n            type: 'error',\r\n            content: 'Ошибка обновления сборника',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const successUpdatedDictMessage = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: 'Сборник обновлен',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const emptyFieldsMessage = () => {\r\n        messageApi.open({\r\n            type: 'warning',\r\n            content: 'Некоторые поля остались пустыми',\r\n            duration: 1,\r\n        });\r\n    }\r\n    //End of toasts\r\n    // Requests\r\n    const [getDicts, {\r\n        data: dicts,\r\n        error: getDictsRequestError,\r\n        isLoading: getDictsRequestIsLoading\r\n    }] = dictAPI.useGetDictsMutation();\r\n    // End of requests\r\n    const [data, setData] = useState<DataType[]>();\r\n    const [visibleSettings, setVisibleSettings] = useState<boolean>(false);\r\n    const [visible, setVisible] = useState<boolean>(false);\r\n    const [showHeader, setShowHeader] = useState<boolean>(localStorage.getItem('tableHeader-dicts') ? localStorage.getItem('tableHeader-dicts') === 'true' : true);\r\n    const [showCellBorders, setShowBorders] = useState<boolean>(localStorage.getItem('tableBorders-dicts') ? localStorage.getItem('tableBorders-dicts') === 'true' : true);\r\n    const [selectedDictId, setSelectedDictId] = useState<number | undefined>(undefined);\r\n    const [selectedDictName, setSelectedDictName] = useState<string | undefined>(undefined);\r\n    const [rowHeight, setRowHeight] = useState<string>('6vh');\r\n    const [titleFontSize, ] = useState('13px');\r\n    const [tableCellFontSize, ] = useState('15px');\r\n    const [selectedRecordData, setSelectedRecordData] = useState();\r\n    useEffect(() => {\r\n        getDicts({})\r\n    }, [])\r\n    useEffect(() => {\r\n        if (dicts) {\r\n            setData(dicts.map((dict: IDict, key: number) => ({...dict, key} as DataType)));\r\n            successLoadTDicts();\r\n        }\r\n    }, [dicts]);\r\n    useEffect(() => {\r\n        if (getDictsRequestError) {\r\n            errorLoadTDicts();\r\n        }\r\n    }, [getDictsRequestError]);\r\n    const columns: ColumnsType<DataType> = [\r\n        {\r\n            title: () => {\r\n                return <Text\r\n                    style={{color: blue.primary, fontSize: titleFontSize, maxHeight: 100, overflow: 'hidden'}}>Краткое\r\n                    наименование сборника</Text>\r\n            },\r\n            render(text, record) {\r\n                return {\r\n                    props: {\r\n                        style: {color: 'red'}\r\n                    },\r\n                    children: <div style={text?.length > 70 ? {\r\n                        fontSize: tableCellFontSize,\r\n                        color: 'black',\r\n                        height: rowHeight,\r\n                        overflowY: 'scroll'\r\n                    } : {fontSize: tableCellFontSize, color: 'black', height: rowHeight}}>\r\n                        <div>{text}</div>\r\n                    </div>\r\n                };\r\n            },\r\n            dataIndex: 'short_name',\r\n            key: 'short_name',\r\n            width: '25%',\r\n        },\r\n        {\r\n            title: () => {\r\n                return <Text style={{color: blue.primary, fontSize: titleFontSize, maxHeight: 100, overflow: 'hidden'}}>Наименование\r\n                    сборника</Text>\r\n            },\r\n            render(text, record) {\r\n                return {\r\n                    props: {\r\n                        style: {color: 'red'}\r\n                    },\r\n                    children: <div style={text?.length > 70 ? {\r\n                        fontSize: tableCellFontSize,\r\n                        color: 'black',\r\n                        height: rowHeight,\r\n                        overflowY: 'scroll'\r\n                    } : {fontSize: tableCellFontSize, color: 'black', height: rowHeight}}>\r\n\r\n                        <div>{text}</div>\r\n                    </div>\r\n                };\r\n            },\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            width: '45%',\r\n        },\r\n        {\r\n            title: () => {\r\n                return <Text style={{color: blue.primary, fontSize: titleFontSize, maxHeight: 100, overflow: 'hidden'}}>Код\r\n                    ПАО</Text>\r\n            },\r\n            render(text, record) {\r\n                return {\r\n                    props: {\r\n                        style: {color: 'red'}\r\n                    },\r\n                    children: <div style={text?.length > 70 ? {\r\n                        fontSize: tableCellFontSize,\r\n                        color: 'black',\r\n                        height: rowHeight,\r\n                        overflowY: 'scroll'\r\n                    } : {fontSize: tableCellFontSize, color: 'black', height: rowHeight}}>{text}</div>\r\n                };\r\n            },\r\n            dataIndex: 'pao_code',\r\n            key: 'pao_code',\r\n            width: '8%',\r\n        },\r\n        {\r\n            title: () => {\r\n                return <Text style={{color: blue.primary, fontSize: titleFontSize, maxHeight: 100, overflow: 'hidden'}}>Код ООО\r\n                    ГТС</Text>\r\n            },\r\n            render(text, record) {\r\n                return {\r\n                    props: {\r\n                        style: {color: 'red'}\r\n                    },\r\n                    children: <div style={text?.length > 70 ? {\r\n                        fontSize: tableCellFontSize,\r\n                        color: 'black',\r\n                        height: rowHeight,\r\n                        overflowY: 'scroll'\r\n                    } : {fontSize: tableCellFontSize, color: 'black', height: rowHeight}}>{text}</div>\r\n                };\r\n            },\r\n            dataIndex: 'ooo_code',\r\n            key: 'ooo_code',\r\n            width: '8%',\r\n        },\r\n        {\r\n            title: '',\r\n            render: (_, record) => (\r\n                <Space size='middle'>\r\n                    <Button onClick={() => {\r\n                        setSelectedDictId(record.id);\r\n                        setSelectedDictName(record.short_name);\r\n                    }}>Открыть показатели</Button>\r\n                </Space>\r\n            ),\r\n            key: 'action',\r\n            width: '10%',\r\n        },\r\n    ];\r\n    return (\r\n        <div style={{height: window.innerHeight - 140, paddingTop: '10px'}}>\r\n            {contextHolder}\r\n            <Breadcrumb style={{marginBottom: 15, marginLeft: 15}}>\r\n                <Breadcrumb.Item>\r\n                    <a onClick={() => {\r\n                        setSelectedDictName(undefined);\r\n                        setSelectedDictId(undefined);\r\n                    }}>Сборники</a>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    {selectedDictName}\r\n                </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            {selectedDictId ?\r\n                <NormfactorModule dictId={selectedDictId}/>\r\n                :\r\n                <>\r\n                    {dicts &&\r\n                    <DictModal\r\n                        availableDicts={dicts}\r\n                        data={selectedRecordData}\r\n                        setData={setSelectedRecordData}\r\n                        visible={visible}\r\n                        setVisible={setVisible}\r\n                        emptyFieldsMessage={emptyFieldsMessage}\r\n                        getDicts={getDicts}\r\n                        successCreatedDictMessage={successCreatedDictMessage}\r\n                        errorCreatedDictMessage={errorCreatedDictMessage}\r\n                        errorUpdatedDictMessage={errorUpdatedDictMessage}\r\n                        successUpdatedDictMessage={successUpdatedDictMessage}\r\n                    />\r\n                    }\r\n                    <GridSettingsModal\r\n                        moduleName={'dicts'}\r\n                        successUpdatedSettings={successUpdatedSettings}\r\n                        visible={visibleSettings}\r\n                        setVisible={setVisibleSettings}\r\n                        showBorders={showCellBorders}\r\n                        showHeader={showHeader}\r\n                        setShowHeader={setShowHeader}\r\n                        setShowBorders={setShowBorders}\r\n                    />\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center',\r\n                        marginLeft: '15px',\r\n                        marginRight: '15px',\r\n                        marginBottom: '10px'\r\n                    }}>\r\n                        <div style={{display: 'flex'}}>\r\n                            <Button onClick={() => setVisible(true)}>Добавить сборник</Button>\r\n                        </div>\r\n                        <Tooltip placement={'leftTop'} title={'Настройки таблицы'}>\r\n                            <Button className='settingsButton' icon={<SettingOutlined/>} shape={'circle'}\r\n                                    onClick={() => setVisibleSettings(true)}/>\r\n                        </Tooltip>\r\n                    </div>\r\n                    <Table\r\n                        bordered={showCellBorders}\r\n                        loading={getDictsRequestIsLoading}\r\n                        showHeader={showHeader}\r\n                        columns={columns}\r\n                        dataSource={data}\r\n                        pagination={{position: [\"bottomRight\"], defaultPageSize: 10}}\r\n                        onRow={(record: any) => {\r\n                            return {\r\n                                onDoubleClick: () => {\r\n                                    setVisible(true);\r\n                                    setSelectedRecordData(record);\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n}","import {Button, Input, Modal, Select, Spin, Switch, Typography} from \"antd\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport Dragable, {DraggableData, DraggableEvent} from \"react-draggable\";\r\nimport {IFilial} from \"../models/IFilial\";\r\nimport {IRole} from \"../models/IRole\";\r\nimport {useAppDispatch, useAppSelector} from \"../hooks/redux\";\r\nimport {userAPI} from \"../services/UserService\";\r\nimport {setUserInfo} from \"../store/reducers/GeneralSlice\";\r\nimport {IDepartment} from \"../models/IDepartment\";\r\nimport {departmentAPI} from \"../services/DepartmentService\";\r\n\r\nconst {Text} = Typography;\r\n\r\ntype ModalProps = {\r\n    getUsers: Function,\r\n    visible: boolean,\r\n    setVisible: Function,\r\n    emptyFieldsMessage: Function,\r\n    successUpdateUserMessage: Function,\r\n    errorUpdateUserMessage: Function,\r\n    successCreatedUserMessage: Function,\r\n    errorCreatedUserMessage: Function,\r\n    data?: {\r\n        department: any,\r\n        filials: IFilial[],\r\n        name: string,\r\n        roles: IRole[],\r\n        secondName: string,\r\n        surname: string,\r\n        username: string\r\n    }\r\n    setData: Function,\r\n}\r\n\r\nexport const UserModal = (props: ModalProps) => {\r\n    const generalStore = useAppSelector(store => store.userReducer);\r\n    const dispatch = useAppDispatch();\r\n    const {data: user, error, isLoading: isLoadingUser, refetch} = userAPI.useGetUserQuery();\r\n    const [updateUser, {\r\n        data: updatedUser,\r\n        error: updateUserError,\r\n        isLoading: updateUserLoading\r\n    }] = userAPI.useUpdateUserMutation();\r\n    const {\r\n        data: departments,\r\n        error: getDepartmentsError,\r\n        isLoading: getDepartmentsLoading,\r\n        refetch: refetchDepartments\r\n    } = departmentAPI.useGetDepartmentsQuery();\r\n    const [createUser, {\r\n        data: createdUser,\r\n        error: createUserError,\r\n        isLoading: createUserLoading\r\n    }] = userAPI.useCreateUserMutation();\r\n    // Draggable settings\r\n    const [disabled, setDisabled] = useState<boolean>(false);\r\n    const [bounds, setBounds] = useState({left: 0, top: 0, bottom: 0, right: 0});\r\n    const draggableRef = useRef<HTMLDivElement>(null);\r\n    const onStart = (_event: DraggableEvent, uiData: DraggableData) => {\r\n        const {clientWidth, clientHeight} = window.document.documentElement;\r\n        const targetRect = draggableRef.current?.getBoundingClientRect();\r\n        if (!targetRect) {\r\n            return;\r\n        }\r\n        setBounds({\r\n            left: -targetRect.left + uiData.x,\r\n            right: clientWidth - (targetRect.right - uiData.x),\r\n            top: -targetRect.top - uiData.y,\r\n            bottom: clientHeight - (targetRect.bottom - uiData.y),\r\n        })\r\n    }\r\n    // End of dnd\r\n    const userStore = useAppSelector(store => store.userReducer);\r\n    const [modalWidth, setModalWidth] = useState<number>(750);\r\n    const [username, setUsername] = useState<string>();\r\n    const [name, setName] = useState<string>();\r\n    const [surname, setSurname] = useState<string>();\r\n    const [secondName, setSecondName] = useState<string>();\r\n    const [selectedFilials, setSelectedFilials] = useState<string[]>([]);\r\n    const [selectedRoles, setSelectedRoles] = useState<number[]>([]);\r\n    const [selectedDepartment, setSelectedDepartment] = useState<string>();\r\n    const handleSelectFilials = (value: string[]) => {\r\n        setSelectedFilials(value);\r\n    }\r\n    const handleSelectRoles = (value: number[]) => {\r\n        setSelectedRoles(value);\r\n    }\r\n    const handleSelectDepartments = (value: string) => {\r\n        setSelectedDepartment(value);\r\n    }\r\n    const handleUpdateUser = () => {\r\n        if (username && name && surname && secondName && selectedFilials && selectedRoles.length > 0 && props.data) {\r\n            updateUser({\r\n                // @ts-ignore\r\n                departmentId: departments.find(dep => dep.name === selectedDepartment)?.id, //todo\r\n                filials: selectedFilials.map(f => f).join(';'),\r\n                //filials: userStore.filials.map((filial: IFilial) => filial.id).join(';'),\r\n                name,\r\n                roles: selectedRoles.map(role => role).join(';'),\r\n                secondName,\r\n                surname,\r\n                username: 'sgp\\\\' + username,\r\n                oldUsername: props.data.username\r\n            })\r\n        } else {\r\n            props.emptyFieldsMessage()\r\n        }\r\n    }\r\n    const handleCreateUser = () => {\r\n        if (username && name && surname && secondName && selectedFilials && selectedRoles.length > 0) {\r\n            createUser({\r\n                departments: selectedDepartment ?? \"\",\r\n                filials: selectedFilials.map(f => f).join(';'),\r\n                name,\r\n                roles: selectedRoles.map(role => role).join(';'),\r\n                secondName,\r\n                surname,\r\n                username: 'sgp\\\\' + username\r\n            })\r\n        } else {\r\n            props.emptyFieldsMessage()\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (user) dispatch(setUserInfo(user));\r\n    }, [user])\r\n    useEffect(() => {\r\n        if (!props.visible) {\r\n            setUsername('');\r\n            setName('');\r\n            setSurname('');\r\n            setSecondName('');\r\n            setSelectedFilials([]);\r\n            setSelectedRoles([]);\r\n            setSelectedDepartment('');\r\n            props.setData(null);\r\n        } else {\r\n            if (props.data) {\r\n                setUsername(props.data.username.slice(4));\r\n                setName(props.data.name);\r\n                setSurname(props.data.surname);\r\n                setSecondName(props.data.secondName);\r\n                setSelectedFilials(props.data.filials.map((filial: IFilial) => filial.id));\r\n                setSelectedRoles(props.data.roles.map((role: IRole) => role.code));\r\n                setSelectedDepartment(props.data.department?.name);\r\n            }\r\n        }\r\n    }, [props.visible])\r\n    useEffect(() => {\r\n        if (updatedUser) {\r\n            refetch();\r\n            props.successUpdateUserMessage();\r\n            props.getUsers();\r\n            props.setVisible(false);\r\n        }\r\n    }, [updatedUser])\r\n    useEffect(() => {\r\n        if (updateUserError) {\r\n            props.errorUpdateUserMessage();\r\n        }\r\n    }, [updateUserError])\r\n    useEffect(() => {\r\n        if (selectedRoles.find((roleCode: number) => roleCode === generalStore?.roles.find((role: IRole) => role.code === 3)?.code || roleCode === generalStore?.roles.find((role: IRole) => role.code === 4)?.code)) {\r\n            setSelectedDepartment(props.data?.department?.name);\r\n        } else {\r\n            console.log(selectedRoles, generalStore?.roles, 'kiiil')\r\n            setSelectedDepartment('')\r\n        }\r\n    }, [selectedRoles])\r\n    useEffect(() => {\r\n        if (createdUser) {\r\n            props.successCreatedUserMessage();\r\n            props.getUsers();\r\n            props.setVisible(false);\r\n        }\r\n    }, [createdUser])\r\n    useEffect(() => {\r\n        if (createUserError) {\r\n            props.errorCreatedUserMessage();\r\n        }\r\n    }, [createUserError])\r\n    console.log(selectedDepartment)\r\n    return (\r\n        <Modal\r\n            title={props.data ? 'Редактирование пользователя' : 'Создание пользователя'}\r\n            centered={true}\r\n            open={props.visible}\r\n            onCancel={() => props.setVisible(false)}\r\n            footer={[]}\r\n            modalRender={(modal) => (\r\n                // @ts-ignore\r\n                <Dragable\r\n                    disabled={disabled}\r\n                    bounds={bounds}\r\n                    onStart={(event, uiData) => onStart(event, uiData)}\r\n                >\r\n                    <div ref={draggableRef}>{modal}</div>\r\n                </Dragable>\r\n            )}\r\n            width={modalWidth}\r\n        >\r\n            <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                {updateUserLoading ?\r\n                    <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: 500}}>\r\n                        <Spin size=\"large\"/>\r\n                    </div>\r\n                    :\r\n                    <>\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'start',\r\n                            width: '100%',\r\n                            marginBottom: 15,\r\n                            marginTop: 5,\r\n                            fontSize: 14\r\n                        }}>\r\n                            <Text style={{marginBottom: 5}}>Логин</Text>\r\n                            <Input addonBefore={`sgp\\\\`} value={username}\r\n                                   onChange={(e: any) => setUsername(e.target.value)}/>\r\n                        </div>\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'start',\r\n                            width: '100%',\r\n                            marginBottom: 15,\r\n                            fontSize: 14\r\n                        }}>\r\n                            <Text style={{marginBottom: 5}}>Фамилия</Text>\r\n                            <Input value={surname} onChange={(e: any) => setSurname(e.target.value)}/>\r\n                        </div>\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'start',\r\n                            width: '100%',\r\n                            marginBottom: 15,\r\n                            fontSize: 14\r\n                        }}>\r\n                            <Text style={{marginBottom: 5}}>Имя</Text>\r\n                            <Input value={name} onChange={(e: any) => setName(e.target.value)}/>\r\n                        </div>\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'start',\r\n                            width: '100%',\r\n                            marginBottom: 15,\r\n                            fontSize: 14\r\n                        }}>\r\n                            <Text style={{marginBottom: 5}}>Отчетсво</Text>\r\n                            <Input value={secondName} onChange={(e: any) => setSecondName(e.target.value)}/>\r\n                        </div>\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'start',\r\n                            width: '100%',\r\n                            marginBottom: 15,\r\n                            marginTop: 5,\r\n                            fontSize: 14\r\n                        }}>\r\n                            <Text style={{marginBottom: 5}}>Филиал</Text>\r\n                            <Select\r\n                                mode={'multiple'}\r\n                                value={selectedFilials}\r\n                                style={{width: modalWidth - 50}}\r\n                                onChange={handleSelectFilials}\r\n                                options={userStore.filials.map((filial: IFilial) => ({\r\n                                    value: filial.id,\r\n                                    label: filial.name\r\n                                }))}\r\n                            />\r\n                        </div>\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'start',\r\n                            width: '100%',\r\n                            marginBottom: 15,\r\n                            marginTop: 5,\r\n                            fontSize: 14\r\n                        }}>\r\n                            <Text style={{marginBottom: 5}}>Роль</Text>\r\n                            <Select\r\n                                allowClear\r\n                                mode={'multiple'}\r\n                                value={selectedRoles}\r\n                                style={{width: modalWidth - 50}}\r\n                                onChange={handleSelectRoles}\r\n                                options={generalStore?.roles.map((role: IRole) => ({\r\n                                    value: role.code,\r\n                                    label: role.name\r\n                                }))}\r\n                            />\r\n                        </div>\r\n                        {(selectedRoles.find((role: number) => role === generalStore?.roles.find((role: IRole) => role.code === 3)?.code) ||\r\n                                selectedRoles.find((role: number) => role === generalStore?.roles.find((role: IRole) => role.code === 4)?.code)) &&\r\n                            <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                justifyContent: 'start',\r\n                                width: '100%',\r\n                                marginBottom: 15,\r\n                                marginTop: 5,\r\n                                fontSize: 14\r\n                            }}>\r\n                                <Text style={{marginBottom: 5}}>Подразделение</Text>\r\n                                <Select\r\n                                    value={selectedDepartment}\r\n                                    style={{width: modalWidth - 50}}\r\n                                    onChange={handleSelectDepartments}\r\n                                    options={departments && departments.map((department: IDepartment) => ({\r\n                                        value: department.name,\r\n                                        label: department.name\r\n                                    }))}\r\n                                />\r\n                            </div>\r\n                        }\r\n                        {(selectedRoles.find((role: number) => role === generalStore?.roles.find((role: IRole) => role.code === 2)?.code) && false) &&\r\n                            <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                                display: 'flex',\r\n                                justifyContent: 'start',\r\n                                alignItems: 'center',\r\n                                width: '100%',\r\n                                marginBottom: 15,\r\n                                marginTop: 5,\r\n                                fontSize: 14\r\n                            }}>\r\n                                <Text style={{marginBottom: 5, marginRight: 15}}>Возможность редакции показателей за\r\n                                    прошедшие периоды</Text>\r\n                                <Switch style={{width: 50}}/>\r\n                            </div>\r\n                        }\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)}\r\n                             style={{display: 'flex', justifyContent: 'space-evenly', width: '100%', fontSize: 14}}>\r\n                            {props.data ?\r\n                                <Button onClick={handleUpdateUser}>Сохранить</Button>\r\n                                :\r\n                                <Button onClick={handleCreateUser}>Создать</Button>\r\n                            }\r\n                            <Button onClick={() => props.setVisible(false)}>Отменить</Button>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>\r\n        </Modal>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {Button, message, Table, Tag, Tooltip, Typography} from 'antd';\r\nimport type {ColumnsType} from 'antd/es/table';\r\nimport {blue} from '@ant-design/colors';\r\nimport {SettingOutlined} from \"@ant-design/icons\";\r\nimport {CellSize} from \"../../ENUMS\";\r\n// @ts-ignore\r\nimport Highlighter from \"react-highlight-words\"\r\nimport \"../../App.css\";\r\nimport {IUser} from \"../../models/IUser\";\r\nimport {IRole} from \"../../models/IRole\";\r\nimport {IFilial} from \"../../models/IFilial\";\r\nimport {userAPI} from \"../../services/UserService\";\r\nimport {GridSettingsModal} from \"../../components/GridSettingsModal\";\r\nimport {UserModal} from \"../../components/UserModal\";\r\n\r\nconst {Text} = Typography;\r\n\r\ninterface DataType extends IUser {\r\n    key: React.Key;\r\n}\r\ninterface ColumnItem {\r\n    text: string;\r\n    value: string;\r\n}\r\n\r\nconst getUniquesList = (data: DataType[] | undefined, column : string): ColumnItem[] => {\r\n    if (data) {\r\n        let result: ColumnItem[] = []\r\n        data.forEach((record: any) => {\r\n            if (!result.find((resRecord: any) => (resRecord.text === record[column]))) {\r\n                result.push({\r\n                    text: record[column],\r\n                    value: record[column]\r\n                })\r\n            }\r\n        })\r\n        return result\r\n    } else return [];\r\n}\r\n\r\nexport const UserModule: React.FC = () => {\r\n    // Create Toasts context\r\n    const [messageApi, contextHolder] = message.useMessage();\r\n    const successUpdatedSettings = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: 'Настройки обновлены',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const successLoadUsers = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: 'Пользоватли загружены',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const errorLoadUsers = () => {\r\n        messageApi.open({\r\n            type: 'error',\r\n            content: 'Ошибка загрузки',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const successUpdateUserMessage = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: 'Пользователь обновлен',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const errorUpdateUserMessage = () => {\r\n        messageApi.open({\r\n            type: 'error',\r\n            content: 'Ошибка обновления',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const emptyFieldsMessage = () => {\r\n        messageApi.open({\r\n            type: 'warning',\r\n            content: 'Некоторые поля остались пустыми',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const errorCreatedUserMessage = () => {\r\n        messageApi.open({\r\n            type: 'error',\r\n            content: 'Ошибка создания пользователя, вероятно он уже существует',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const successCreatedUserMessage = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: 'Пользователь создан',\r\n            duration: 1,\r\n        });\r\n    }\r\n    //End of toasts\r\n    // Requests\r\n    const {\r\n        data: users,\r\n        error: getUsersError,\r\n        isLoading: getUsersIsLoading,\r\n        refetch: refetchUsers\r\n    } = userAPI.useGetUsersQuery();\r\n    // End of requests\r\n    const [data, setData] = useState<DataType[]>();\r\n    const [visibleSettings, setVisibleSettings] = useState<boolean>(false);\r\n    const [visible, setVisible] = useState<boolean>(false);\r\n    const [showHeader, setShowHeader] = useState<boolean>(localStorage.getItem('showHeaderUsersGrid') ? localStorage.getItem('showHeaderUsersGrid') === 'true' : true);\r\n    const [showCellBorders, setShowBorders] = useState<boolean>(localStorage.getItem('showHeaderUsersGrid') ? localStorage.getItem('showBordersUsersGrid') === 'true' : true);\r\n    const [rowHeight, setRowHeight] = useState<string>('100px');\r\n    const [selectedRecordData, setSelectedRecordData] = useState();\r\n    const [titleFontSize,] = useState('13px');\r\n    const [tableCellFontSize,] = useState('15px');\r\n    useEffect(() => {\r\n        if (users) {\r\n            setData(users.map((user: IUser, key: number) => ({...user, key} as DataType)));\r\n            successLoadUsers();\r\n        }\r\n    }, [users]);\r\n    useEffect(() => {\r\n        if (getUsersError) {\r\n            errorLoadUsers();\r\n        }\r\n    }, [getUsersError]);\r\n    useEffect(() => {\r\n        refetchUsers();\r\n    }, []);\r\n    const columns: ColumnsType<DataType> = [\r\n        {\r\n            title: () => {\r\n                return <Text\r\n                    style={{color: blue.primary, fontSize: titleFontSize, maxHeight: 100, overflow: 'hidden'}}>Имя\r\n                    пользователя</Text>\r\n            },\r\n            render(text, record) {\r\n                return {\r\n                    props: {\r\n                        style: {color: 'red'}\r\n                    },\r\n                    children: <div style={text?.length > 70 ? {\r\n                        fontSize: tableCellFontSize,\r\n                        color: 'black',\r\n                        height: rowHeight,\r\n                        overflowY: 'scroll'\r\n                    } : {fontSize: tableCellFontSize, color: 'black', height: rowHeight}}>\r\n                        <div>{text}</div>\r\n                    </div>\r\n                };\r\n            },\r\n            dataIndex: 'username',\r\n            key: 'username',\r\n            width: '8%',\r\n            filters: getUniquesList(data, 'username'),\r\n            onFilter: (value: any, record: any) => {\r\n                return record.username.indexOf(value) === 0\r\n            },\r\n            sorter: (a: any, b: any) => a?.username?.length - b?.username?.length,\r\n            sortDirections: ['descend', 'ascend'],\r\n            filterSearch: true,\r\n        },\r\n        {\r\n            title: () => {\r\n                return <Text\r\n                    style={{\r\n                        color: blue.primary,\r\n                        fontSize: titleFontSize,\r\n                        maxHeight: 100,\r\n                        overflow: 'hidden'\r\n                    }}>Фамилия</Text>\r\n            },\r\n            render(text, record) {\r\n                return {\r\n                    props: {\r\n                        style: {color: 'red'}\r\n                    },\r\n                    children: <div style={text?.length > 70 ? {\r\n                        fontSize: tableCellFontSize,\r\n                        color: 'black',\r\n                        height: rowHeight,\r\n                        overflowY: 'scroll'\r\n                    } : {fontSize: tableCellFontSize, color: 'black', height: rowHeight}}>\r\n                        <div>{text}</div>\r\n                    </div>\r\n                };\r\n            },\r\n            dataIndex: 'surname',\r\n            key: 'surname',\r\n            width: '8%',\r\n            filters: getUniquesList(data, 'surname'),\r\n            onFilter: (value: any, record: any) => {\r\n                return record.surname.indexOf(value) === 0\r\n            },\r\n            sorter: (a: any, b: any) => a?.surname?.length - b?.surname?.length,\r\n            sortDirections: ['descend', 'ascend'],\r\n            filterSearch: true,\r\n        },\r\n        {\r\n            title: () => {\r\n                return <Text\r\n                    style={{\r\n                        color: blue.primary,\r\n                        fontSize: titleFontSize,\r\n                        maxHeight: 100,\r\n                        overflow: 'hidden'\r\n                    }}>Имя</Text>\r\n            },\r\n            render(text, record) {\r\n                return {\r\n                    props: {\r\n                        style: {color: 'red'}\r\n                    },\r\n                    children: <div style={text?.length > 70 ? {\r\n                        fontSize: tableCellFontSize,\r\n                        color: 'black',\r\n                        height: rowHeight,\r\n                        overflowY: 'scroll'\r\n                    } : {fontSize: tableCellFontSize, color: 'black', height: rowHeight}}>\r\n                        <div>{text}</div>\r\n                    </div>\r\n                };\r\n            },\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            width: '8%',\r\n            filters: getUniquesList(data, 'name'),\r\n            onFilter: (value: any, record: any) => {\r\n                return record.name.indexOf(value) === 0\r\n            },\r\n            sorter: (a: any, b: any) => a?.name?.length - b?.name?.length,\r\n            sortDirections: ['descend', 'ascend'],\r\n            filterSearch: true,\r\n        },\r\n        {\r\n            title: () => {\r\n                return <Text\r\n                    style={{\r\n                        color: blue.primary,\r\n                        fontSize: titleFontSize,\r\n                        maxHeight: 100,\r\n                        overflow: 'hidden'\r\n                    }}>Отчество</Text>\r\n            },\r\n            render(text, record) {\r\n                return {\r\n                    props: {\r\n                        style: {color: 'red'}\r\n                    },\r\n                    children: <div style={text?.length > 70 ? {\r\n                        fontSize: tableCellFontSize,\r\n                        color: 'black',\r\n                        height: rowHeight,\r\n                        overflowY: 'scroll'\r\n                    } : {fontSize: tableCellFontSize, color: 'black', height: rowHeight}}>\r\n                        <div>{text}</div>\r\n                    </div>\r\n                };\r\n            },\r\n            dataIndex: 'secondName',\r\n            key: 'secondName',\r\n            width: '8%',\r\n            filters: getUniquesList(data, 'secondName'),\r\n            onFilter: (value: any, record: any) => {\r\n                return record.secondName.indexOf(value) === 0\r\n            },\r\n            sorter: (a: any, b: any) => a?.secondName?.length - b?.secondName?.length,\r\n            sortDirections: ['descend', 'ascend'],\r\n            filterSearch: true,\r\n        },\r\n        {\r\n            title: () => {\r\n                return <Text\r\n                    style={{\r\n                        color: blue.primary,\r\n                        fontSize: titleFontSize,\r\n                        maxHeight: 100,\r\n                        overflow: 'hidden'\r\n                    }}>Роли</Text>\r\n            },\r\n            render(roles, record) {\r\n                return {\r\n                    props: {\r\n                        style: {color: 'red'}\r\n                    },\r\n                    children: <div style={{fontSize: tableCellFontSize, color: 'black', height: rowHeight}}>\r\n                        {roles.map((role: IRole) => <Tag color='geekblue' style={{\r\n                            marginBottom: 3,\r\n                            maxWidth: 250,\r\n                            overflow: 'hidden'\r\n                        }}>{role.name}</Tag>)}\r\n                    </div>\r\n                };\r\n            },\r\n            dataIndex: 'roles',\r\n            key: 'roles',\r\n            width: '20%',\r\n        },\r\n        {\r\n            title: () => {\r\n                return <Text\r\n                    style={{\r\n                        color: blue.primary,\r\n                        fontSize: titleFontSize,\r\n                        maxHeight: 100,\r\n                        overflow: 'hidden'\r\n                    }}>Филиалы</Text>\r\n            },\r\n            render(filials, record) {\r\n                return {\r\n                    props: {\r\n                        style: {color: 'red'}\r\n                    },\r\n                    children: <div style={{fontSize: tableCellFontSize, color: 'black', height: rowHeight}}>\r\n                        {filials.map((filial: IFilial) => <Tag color='geekblue'\r\n                                                               style={{marginBottom: 3}}>{filial.name}</Tag>)}\r\n                    </div>\r\n                };\r\n            },\r\n            dataIndex: 'filials',\r\n            key: 'filials',\r\n            width: '25%',\r\n        },\r\n        {\r\n            title: () => {\r\n                return <Text style={{color: blue.primary, fontSize: titleFontSize, maxHeight: 100, overflow: 'hidden'}}>Структурное\r\n                    подразделение</Text>\r\n            },\r\n            render(department, record) {\r\n                return {\r\n                    props: {\r\n                        style: {color: 'red'}\r\n                    },\r\n                    children: <div style={{fontSize: tableCellFontSize, color: 'black', height: rowHeight}}>\r\n                        {department ? <Tag color='geekblue' style={{\r\n                            marginBottom: 3,\r\n                            maxWidth: 260,\r\n                            overflow: 'hidden'\r\n                        }}>{department.name}</Tag> : ''}\r\n                    </div>\r\n                };\r\n            },\r\n            key: 'department',\r\n            dataIndex: 'department',\r\n            width: '20%',\r\n        },\r\n    ];\r\n    return (\r\n        <div style={{height: window.innerHeight - 140, paddingTop: '10px'}}>\r\n            {contextHolder}\r\n            <UserModal\r\n                data={selectedRecordData}\r\n                setData={setSelectedRecordData}\r\n                visible={visible}\r\n                setVisible={setVisible}\r\n                emptyFieldsMessage={emptyFieldsMessage}\r\n                getUsers={refetchUsers}\r\n                successUpdateUserMessage={successUpdateUserMessage}\r\n                errorUpdateUserMessage={errorUpdateUserMessage}\r\n                errorCreatedUserMessage={errorCreatedUserMessage}\r\n                successCreatedUserMessage={successCreatedUserMessage}\r\n            />\r\n            <GridSettingsModal\r\n                moduleName={'users'}\r\n                successUpdatedSettings={successUpdatedSettings}\r\n                visible={visibleSettings}\r\n                setVisible={setVisibleSettings}\r\n                showBorders={showCellBorders}\r\n                showHeader={showHeader}\r\n                setShowHeader={setShowHeader}\r\n                setShowBorders={setShowBorders}\r\n            />\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                marginLeft: '15px',\r\n                marginRight: '15px',\r\n                marginBottom: '10px'\r\n            }}>\r\n                <div style={{display: 'flex'}}>\r\n                    <Button onClick={() => setVisible(true)}>Добавить пользователя</Button>\r\n                </div>\r\n                <Tooltip placement={'leftTop'} title={'Настройки таблицы'}>\r\n                    <Button className='settingsButton' icon={<SettingOutlined/>} shape={'circle'}\r\n                            onClick={() => setVisibleSettings(true)}/>\r\n                </Tooltip>\r\n            </div>\r\n            <Table\r\n                bordered={showCellBorders}\r\n                loading={getUsersIsLoading}\r\n                showHeader={showHeader}\r\n                columns={columns}\r\n                dataSource={data}\r\n                pagination={{position: [\"bottomRight\"], defaultPageSize: 10}}\r\n                onRow={(record: any) => {\r\n                    return {\r\n                        onDoubleClick: () => {\r\n                            setVisible(true);\r\n                            setSelectedRecordData(record);\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}","import {Button, Input, Modal, Select, Spin, Typography} from \"antd\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport Dragable, {DraggableData, DraggableEvent} from \"react-draggable\";\r\nimport {userAPI} from \"../services/UserService\";\r\nimport {IUser} from \"../models/IUser\";\r\nimport {departmentAPI} from \"../services/DepartmentService\";\r\n\r\nconst {Text} = Typography;\r\nconst {TextArea} = Input;\r\n\r\ntype ModalProps = {\r\n    visible: boolean,\r\n    setVisible: Function,\r\n    emptyFieldsMessage: Function,\r\n    getDepartments: Function,\r\n    successCreatedDepartmentMessage: Function,\r\n    errorCreatedDepartmentMessage: Function,\r\n    successUpdatedDepartmentMessage: Function,\r\n    errorUpdatedDepartmentMessage: Function,\r\n    data: {\r\n        id: number,\r\n        name: string,\r\n        users: string[]\r\n    }|undefined,\r\n    setData: Function,\r\n}\r\n\r\nexport const DepartmentModal = (props: ModalProps) => {\r\n    const [createDepartment, {\r\n        data: createdDepartment,\r\n        error: createDepartmentError,\r\n        isLoading: createDepartmentLoading\r\n    }] = departmentAPI.useCreateDepartmentMutation();\r\n    const {\r\n        data: users,\r\n        error: getUsersError,\r\n        isLoading: getUsersIsLoading,\r\n        refetch: refetchUsers\r\n    } = userAPI.useGetUsersQuery();\r\n    const [updateDepartment, {\r\n        data: updatedDepartment,\r\n        error: updateDepartmentError,\r\n        isLoading: updateDepartmentLoading\r\n    }] = departmentAPI.useUpdateDepartmentMutation();\r\n    // Draggable settings\r\n    const [disabled, setDisabled] = useState<boolean>(false);\r\n    const [bounds, setBounds] = useState({left: 0, top: 0, bottom: 0, right: 0});\r\n    const draggableRef = useRef<HTMLDivElement>(null);\r\n    const onStart = (_event: DraggableEvent, uiData: DraggableData) => {\r\n        const {clientWidth, clientHeight} = window.document.documentElement;\r\n        const targetRect = draggableRef.current?.getBoundingClientRect();\r\n        if (!targetRect) {\r\n            return;\r\n        }\r\n        setBounds({\r\n            left: -targetRect.left + uiData.x,\r\n            right: clientWidth - (targetRect.right - uiData.x),\r\n            top: -targetRect.top - uiData.y,\r\n            bottom: clientHeight - (targetRect.bottom - uiData.y),\r\n        })\r\n    }\r\n    // End of dnd\r\n    const [name, setName] = useState<string>();\r\n    const [selectedUsers, setSelectedUsers] = useState<string[]>([]);\r\n    const handleSelectUsers = (value: string[]) => {\r\n        setSelectedUsers(value);\r\n    }\r\n    const handleCreateDepartment = () => {\r\n        if (name) {\r\n            createDepartment({name, users: selectedUsers.join(';')});\r\n        } else {\r\n            props.emptyFieldsMessage()\r\n        }\r\n    }\r\n    const handleUpdateDepartment = () => {\r\n        if (name && props.data) {\r\n            updateDepartment({id: props.data.id, name, users: selectedUsers.join(';')} as any);\r\n        } else {\r\n            props.emptyFieldsMessage()\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (!props.visible) {\r\n            setName('');\r\n            setSelectedUsers([]);\r\n            props.setData(null);\r\n        }\r\n        else if (props.data){\r\n            setName(props.data.name);\r\n            setSelectedUsers(props.data.users);\r\n        }\r\n    }, [props.visible])\r\n    useEffect(() => {\r\n        if (createdDepartment) {\r\n            props.successCreatedDepartmentMessage();\r\n            props.getDepartments();\r\n            props.setVisible(false);\r\n        }\r\n    }, [createdDepartment])\r\n    useEffect(() => {\r\n        if (createDepartmentError) {\r\n            props.errorCreatedDepartmentMessage();\r\n        }\r\n    }, [createDepartmentError])\r\n    useEffect(() => {\r\n        if (updatedDepartment) {\r\n            props.successUpdatedDepartmentMessage();\r\n            props.getDepartments();\r\n            props.setVisible(false);\r\n        }\r\n    }, [updatedDepartment])\r\n    useEffect(() => {\r\n        if (updateDepartmentError) {\r\n            props.errorCreatedDepartmentMessage();\r\n        }\r\n    }, [updateDepartmentError])\r\n    return (\r\n        <Modal\r\n            title={props.data ? 'Редактирование подразделения' : 'Создание подразделения'}\r\n            centered={true}\r\n            open={props.visible}\r\n            onCancel={() => props.setVisible(false)}\r\n            footer={[]}\r\n            modalRender={(modal) => (\r\n                // @ts-ignore\r\n                <Dragable\r\n                    disabled={disabled}\r\n                    bounds={bounds}\r\n                    onStart={(event, uiData) => onStart(event, uiData)}\r\n                >\r\n                    <div ref={draggableRef}>{modal}</div>\r\n                </Dragable>\r\n            )}\r\n            width={\"450px\"}\r\n        >\r\n            <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                {createDepartmentLoading ?\r\n                    <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: 400}}>\r\n                        <Spin size=\"large\"/>\r\n                    </div>\r\n                    :\r\n                    <>\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'start',\r\n                            width: '100%',\r\n                            marginBottom: 15,\r\n                            marginTop: 5,\r\n                            fontSize: 14\r\n                        }}>\r\n                            <Text style={{marginBottom: 5}}>Наименование</Text>\r\n                            <TextArea value={name} onChange={(e: any) => setName(e.target.value)}/>\r\n                        </div>\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)} style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'start',\r\n                            width: '100%',\r\n                            marginBottom: 15,\r\n                            marginTop: 5,\r\n                            fontSize: 14\r\n                        }}>\r\n                            <Text style={{marginBottom: 5}}>Выбор пользователей</Text>\r\n                            <Select\r\n                                mode={'multiple'}\r\n                                value={selectedUsers}\r\n                                style={{width: 400}}\r\n                                onChange={handleSelectUsers}\r\n                                options={users && users.filter((user: IUser) => user.roles.find(role => role.code === 3)).map((user: IUser) => ({\r\n                                    value: user.username,\r\n                                    label: user.username\r\n                                }))}\r\n                            />\r\n                        </div>\r\n\r\n                        <div onMouseOver={() => setDisabled(true)} onMouseLeave={() => setDisabled(false)}\r\n                             style={{display: 'flex', justifyContent: 'space-evenly', width: '100%', fontSize: 14}}>\r\n                            {props.data ?\r\n                                <Button onClick={handleUpdateDepartment}>Сохранить</Button>\r\n                                :\r\n                                <Button onClick={handleCreateDepartment}>Создать</Button>\r\n                            }\r\n                            <Button onClick={() => props.setVisible(false)}>Отменить</Button>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>\r\n        </Modal>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {Button, message, Table, Tag, Tooltip, Typography} from 'antd';\r\nimport type {ColumnsType} from 'antd/es/table';\r\nimport {blue} from '@ant-design/colors';\r\nimport {SettingOutlined} from \"@ant-design/icons\";\r\nimport {CellSize} from \"../../ENUMS\";\r\n// @ts-ignore\r\nimport Highlighter from \"react-highlight-words\"\r\nimport {SizeType} from \"antd/es/config-provider/SizeContext\";\r\nimport \"../../App.css\";\r\nimport {departmentAPI} from \"../../services/DepartmentService\";\r\nimport {IDepartment} from \"../../models/IDepartment\";\r\nimport {userAPI} from \"../../services/UserService\";\r\nimport {GridSettingsModal} from \"../../components/GridSettingsModal\";\r\nimport {DepartmentModal} from \"../../components/DepartmentModal\";\r\n\r\nconst {Text} = Typography;\r\n\r\ninterface DataType extends IDepartment {\r\n    key: React.Key;\r\n}\r\n\r\nexport const DepartmentModule: React.FC = () => {\r\n    // Messages\r\n    const [messageApi, contextHolder] = message.useMessage();\r\n    const successUpdatedSettingsMessage = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: 'Настройки обновлены',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const successLoadDepartmentsMessage = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: 'Подразделения загружены',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const errorLoadDepartmentsMessage = () => {\r\n        messageApi.open({\r\n            type: 'error',\r\n            content: 'Ошибка загрузки',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const successCreatedDepartmentMessage = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: 'Подразделенее создано',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const successUpdatedDepartmentMessage = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: 'Подразделение обновлено',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const errorCreatedDepartmentMessage = () => {\r\n        messageApi.open({\r\n            type: 'error',\r\n            content: 'Ошибка создания',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const errorUpdatedDepartmentMessage = () => {\r\n        messageApi.open({\r\n            type: 'error',\r\n            content: 'Ошибка обновления',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const emptyFieldsMessage = () => {\r\n        messageApi.open({\r\n            type: 'warning',\r\n            content: 'Некоторые поля остались пустыми',\r\n            duration: 1,\r\n        });\r\n    }\r\n    //End of messages\r\n    // Requests\r\n    const {\r\n        data: users,\r\n        error: getUsersError,\r\n        isLoading: getUsersIsLoading,\r\n        refetch: refetchUsers\r\n    } = userAPI.useGetUsersQuery();\r\n    const {\r\n        data: departments,\r\n        error: getDepartmentsError,\r\n        isLoading: getDepartmentsLoading,\r\n        refetch: refetchDepartments\r\n    } = departmentAPI.useGetDepartmentsQuery();\r\n    // End of requests\r\n    const [data, setData] = useState<DataType[]>();\r\n    const [visibleSettings, setVisibleSettings] = useState<boolean>(false);\r\n    const [visible, setVisible] = useState<boolean>(false);\r\n    const [selectedRecordData, setSelectedRecordData] = useState({id: 0, name: '', users: []});\r\n    const [showHeader, setShowHeader] = useState<boolean>(localStorage.getItem('showHeaderDepartmentsGrid') ? localStorage.getItem('showHeaderDepartmentsGrid') === 'true' : true);\r\n    const [showCellBorders, setShowBorders] = useState<boolean>(localStorage.getItem('showBordersDepartmentsGrid') === 'true');\r\n    const [titleFontSize, ] = useState('13px');\r\n    const [tableCellFontSize, ] = useState('15px');\r\n    useEffect(() => {\r\n        if (departments) {\r\n            setData(departments.map((dep: IDepartment, key: number) => ({...dep, key} as DataType)));\r\n            successLoadDepartmentsMessage();\r\n        }\r\n    }, [departments]);\r\n    useEffect(() => {\r\n        if (getUsersError) {\r\n            errorLoadDepartmentsMessage();\r\n        }\r\n    }, [getUsersError]);\r\n    useEffect(() => {\r\n        refetchUsers();\r\n        refetchDepartments();\r\n    }, []);\r\n    const columns: ColumnsType<DataType> = [\r\n        {\r\n            title: () => {\r\n                return <Text\r\n                    style={{color: blue.primary, fontSize: titleFontSize, maxHeight: 100, overflow: 'hidden'}}>Наименование\r\n                    ответственного подразделения</Text>\r\n            },\r\n            render(text, record) {\r\n                return {\r\n                    props: {\r\n                        style: {color: 'red'}\r\n                    },\r\n                    children: <div style={text?.length > 70 ? {\r\n                        fontSize: tableCellFontSize,\r\n                        color: 'black',\r\n                        height: '50px',\r\n                        overflowY: 'scroll'\r\n                    } : {fontSize: tableCellFontSize, color: 'black', height: '30px'}}>\r\n                        <div>{text}</div>\r\n                    </div>\r\n                };\r\n            },\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            width: '50%',\r\n        },\r\n        {\r\n            title: () => {\r\n                return <Text style={{\r\n                    color: blue.primary,\r\n                    fontSize: titleFontSize,\r\n                    maxHeight: 100,\r\n                    overflow: 'hidden'\r\n                }}>Пользователи</Text>\r\n            },\r\n            render(users, record) {\r\n                return {\r\n                    props: {\r\n                        style: {color: 'red'}\r\n                    },\r\n                    children: <div style={{fontSize: tableCellFontSize, color: 'black', height: '30px'}}>\r\n                        {users.map((user: string) => <Tag color='geekblue' style={{marginBottom: 3}}>{user}</Tag>)}\r\n                    </div>\r\n                };\r\n            },\r\n            dataIndex: 'users',\r\n            key: 'users',\r\n            width: '50%',\r\n        },\r\n    ];\r\n    return (\r\n        <div style={{height: window.innerHeight - 140, paddingTop: '10px'}}>\r\n            {contextHolder}\r\n            <DepartmentModal\r\n                visible={visible}\r\n                setVisible={setVisible}\r\n                emptyFieldsMessage={emptyFieldsMessage}\r\n                getDepartments={refetchUsers}\r\n                successCreatedDepartmentMessage={successCreatedDepartmentMessage}\r\n                errorCreatedDepartmentMessage={errorCreatedDepartmentMessage}\r\n                data={selectedRecordData}\r\n                setData={setSelectedRecordData}\r\n                errorUpdatedDepartmentMessage={errorUpdatedDepartmentMessage}\r\n                successUpdatedDepartmentMessage={successUpdatedDepartmentMessage}\r\n            />\r\n            <GridSettingsModal\r\n                moduleName={'departments'}\r\n                successUpdatedSettings={successUpdatedSettingsMessage}\r\n                visible={visibleSettings}\r\n                setVisible={setVisibleSettings}\r\n                showBorders={showCellBorders}\r\n                showHeader={showHeader}\r\n                setShowHeader={setShowHeader}\r\n                setShowBorders={setShowBorders}\r\n            />\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                marginLeft: '15px',\r\n                marginRight: '15px',\r\n                marginBottom: '10px'\r\n            }}>\r\n                <div style={{display: 'flex'}}>\r\n                    <Button onClick={() => setVisible(true)}>Добавить подразделение</Button>\r\n                </div>\r\n                <Tooltip placement={'leftTop'} title={'Настройки таблицы'}>\r\n                    <Button className='settingsButton' icon={<SettingOutlined/>} shape={'circle'}\r\n                            onClick={() => setVisibleSettings(true)}/>\r\n                </Tooltip>\r\n            </div>\r\n            <Table\r\n                bordered={showCellBorders}\r\n                loading={getUsersIsLoading}\r\n                showHeader={showHeader}\r\n                columns={columns}\r\n                dataSource={data}\r\n                pagination={{position: [\"bottomRight\"], defaultPageSize: 100}}\r\n                onRow={(record: any) => {\r\n                    return {\r\n                        onDoubleClick: () => {\r\n                            setVisible(true);\r\n                            setSelectedRecordData(record);\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}","import {Button, Divider, Modal, Radio, Switch, Typography} from \"antd\";\r\nimport React, {useRef, useState} from \"react\";\r\nimport Dragable, {DraggableData, DraggableEvent} from \"react-draggable\";\r\nimport {GroupedColumnTepsGrid} from \"../ENUMS\";\r\nimport {host, port, secure} from \"../config/config\";\r\nimport {type} from \"os\";\r\n\r\nconst {Title, Text} = Typography;\r\n\r\ntype ModalProps = {\r\n    warningLoadReport: Function,\r\n    selectedDepartment: string,\r\n    selectedYear: string,\r\n    visible: boolean,\r\n    setVisible: Function,\r\n\r\n}\r\n\r\nexport const BeforeReportDownloadModal = (props: ModalProps) => {\r\n    // Draggable settings\r\n    const [disabled, setDisabled] = useState<boolean>(false);\r\n    const [bounds, setBounds] = useState({left: 0, top: 0, bottom: 0, right: 0});\r\n    const draggableRef = useRef<HTMLDivElement>(null);\r\n    const onStart = (_event: DraggableEvent, uiData: DraggableData) => {\r\n        const {clientWidth, clientHeight} = window.document.documentElement;\r\n        const targetRect = draggableRef.current?.getBoundingClientRect();\r\n        if (!targetRect) {\r\n            return;\r\n        }\r\n        setBounds({\r\n            left: -targetRect.left + uiData.x,\r\n            right: clientWidth - (targetRect.right - uiData.x),\r\n            top: -targetRect.top - uiData.y,\r\n            bottom: clientHeight - (targetRect.bottom - uiData.y),\r\n        })\r\n    }\r\n    // End of dnd\r\n    const downloadHandler = () => {\r\n         props.warningLoadReport();\r\n         let tmpButton = document.createElement('a')\r\n         tmpButton.href = `${secure}://${host}:${port}/api/report/consolidatedReport?department=${props.selectedDepartment}&year=${props.selectedYear}`\r\n         tmpButton.click();\r\n         props.setVisible(false);\r\n    }\r\n    const cloudHandler = () => {\r\n        let requestOptions = {\r\n            method: 'GET',\r\n            redirect: 'follow'\r\n        };\r\n\r\n        // @ts-ignore\r\n        fetch(\"https://sco1-vapp-04/nil_arm/api/report/consolidatedReport?department=Администрация&year=2022\", requestOptions)\r\n        //fetch(`http://localhost:8080/nil_arm/api/report/consolidatedReport?department=${props.selectedDepartment}&year=2022`)\r\n            // Retrieve its body as ReadableStream\r\n            .then((response) => response.body)\r\n            .then((body) => {\r\n                // @ts-ignore\r\n                const reader = body.getReader();\r\n\r\n                return new ReadableStream({\r\n                    start(controller) {\r\n                        return pump();\r\n\r\n                        // @ts-ignore\r\n                        function pump() {\r\n                            return reader.read().then(({ done, value }) => {\r\n                                // When no more data needs to be consumed, close the stream\r\n                                if (done) {\r\n                                    controller.close();\r\n                                    return;\r\n                                }\r\n\r\n                                // Enqueue the next data chunk into our target stream\r\n                                controller.enqueue(value);\r\n                                return pump();\r\n                            });\r\n                        }\r\n                    },\r\n                });\r\n            })\r\n            .then((stream) => new Response(stream))\r\n            .then((response) => response.blob())\r\n            .then((blob) => {\r\n                let myHeaders = new Headers();\r\n                myHeaders.append(\"Authorization\", \"Bearer W9GxZVENOgRyUZOrxk+LdaR1M9t1ntI7217KK2hOR+qxi7wdv1IpvUiS3Pgf7I0t0V1xe8D+X1q3MdwFb/v7EcgdTxzSSld9b+c2qjZ6WvfIjHaV+PUkvBPZ/8X3Jy2/Q+xlAtO4qEuZPa2OnMIFUh7shjHBnw1BFhqb0IyX6m0=\");\r\n                let formdata = new FormData();\r\n                formdata.append(\"file\", blob, \"file.xlsx\");\r\n                let requestOptions = {\r\n                    method: 'POST',\r\n                    headers: myHeaders,\r\n                    body: formdata,\r\n                    redirect: 'follow'\r\n                };\r\n                // @ts-ignore\r\n                fetch(\"https://r7.sgp.ru/api/2.0/files/94/upload\", requestOptions)\r\n                    .then(response => response.text())\r\n                    .then(result => {\r\n                        let response = JSON.parse(result);\r\n                        let id = response.response.id;\r\n                        window.open(`https://r7.sgp.ru/Products/Files/DocEditor.aspx?fileid=${id}`, '_blank');\r\n                        props.setVisible(false);\r\n                    })\r\n                    .catch(error => console.log('error', error));\r\n                return URL.createObjectURL(blob)\r\n            })\r\n            //.then((url) => console.log((image.src = url)))\r\n            .catch((err) => console.error(err));\r\n    }\r\n    return (\r\n        <Modal\r\n            title={'Выберите действие'}\r\n            centered={true}\r\n            open={props.visible}\r\n            onCancel={() => props.setVisible(false)}\r\n            footer={[]}\r\n            modalRender={(modal) => (\r\n                // @ts-ignore\r\n                <Dragable\r\n                    disabled={disabled}\r\n                    bounds={bounds}\r\n                    onStart={(event, uiData) => onStart(event, uiData)}\r\n                >\r\n                    <div ref={draggableRef}>{modal}</div>\r\n                </Dragable>\r\n            )}\r\n            width={\"400px\"}\r\n        >\r\n            <div style={{display: 'flex', justifyContent: 'space-between', marginTop: 30}}>\r\n                <Button style={{width: 150}} onClick={downloadHandler}>Скачать</Button>\r\n                <Button style={{width: 150}} onClick={cloudHandler}>Открыть в облаке</Button>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}","import React, {useEffect, useRef, useState} from 'react';\r\nimport {Button, message, Select, Table, Tag, Tooltip, Typography} from 'antd';\r\nimport type {ColumnsType} from 'antd/es/table';\r\nimport {blue} from '@ant-design/colors';\r\nimport {FileExcelOutlined, SettingOutlined, CopyOutlined} from \"@ant-design/icons\";\r\nimport {CellSize, GroupedColumnReport1Grid} from \"../../ENUMS\";\r\n// @ts-ignore\r\nimport Highlighter from \"react-highlight-words\"\r\nimport \"../../App.css\";\r\nimport {IReport1, reportAPI} from \"../../services/ReportService\";\r\nimport {host, port, secure} from \"../../config/config\";\r\nimport {IFilial} from \"../../models/IFilial\";\r\nimport {useAppSelector} from \"../../hooks/redux\";\r\nimport {BaseGrid} from \"../../components/BaseGrid\";\r\nimport {departmentAPI} from \"../../services/DepartmentService\";\r\nimport {IDepartment} from \"../../models/IDepartment\";\r\nimport {GridSettingsModal} from \"../../components/GridSettingsModal\";\r\nimport {BeforeReportDownloadModal} from \"../../components/BeforeReportDownloadModal\";\r\n//import {DocumentEditor} from \"@onlyoffice/document-editor-react\";\r\n\r\nconst {Text, Title} = Typography;\r\n\r\ninterface ListItem {\r\n    text: string;\r\n    value: string;\r\n}\r\n\r\ninterface Grouped {\r\n    isGrouped: boolean;\r\n    column: GroupedColumnReport1Grid;\r\n}\r\n\r\ninterface DataType extends IReport1 {\r\n    key: React.Key;\r\n}\r\n\r\nfunction getUniqDictsList(data: DataType[] | undefined, field: string): ListItem[] {\r\n    if (data) {\r\n        let result: ListItem[] = []\r\n        data.forEach((record: any) => {\r\n            if (!result.find((resRecord: any) => (resRecord.text === record[field]))) {\r\n                result.push({\r\n                    text: record[field],\r\n                    value: record[field]\r\n                })\r\n            }\r\n        })\r\n        return result\r\n    } else return [];\r\n}\r\n\r\nconst getGroupedColumns = (columns: any, col: GroupedColumnReport1Grid) => {\r\n    let first = columns.find((column: any) => column.key == col);\r\n    let other = columns.filter((column: any) => !(column.key === col));\r\n    other.unshift(first);\r\n    return other;\r\n}\r\n\r\nexport const ConsolidatedByStructureReportModule: React.FC = () => {\r\n    // Create Toasts context\r\n    const [messageApi, contextHolder] = message.useMessage();\r\n    const successUpdatedSettings = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: 'Настройки обновлены',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const successLoadReport = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: 'Записи загружены',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const warningLoadReport = () => {\r\n        messageApi.open({\r\n            type: 'warning',\r\n            content: 'Отчёт начал формироваться',\r\n            duration: 4,\r\n        });\r\n    }\r\n    const errorLoadDepartments = () => {\r\n        messageApi.open({\r\n            type: 'error',\r\n            content: 'Ошибка загрузки',\r\n            duration: 1,\r\n        });\r\n    }\r\n    //End of toasts\r\n    // Requests\r\n    const [getRecords, {\r\n        data: records,\r\n        error: getRecordsError,\r\n        isLoading: getRecordsLoading\r\n    }] = reportAPI.useGetReport1Mutation();\r\n    const {\r\n        data: departments,\r\n        error: getDepartmentsError,\r\n        isLoading: getDepartmentsLoading,\r\n        refetch: refetchDepartments\r\n    } = departmentAPI.useGetDepartmentsQuery();\r\n    // End of requests\r\n    const generalStore = useAppSelector(store => store.userReducer);\r\n    const [years, setYears] = useState<{ value: string, label: string }[]>([]);\r\n    const [columns, setColumns] = useState<ColumnsType<DataType>>([]);\r\n    const [gridData, setGridData] = useState<DataType[]>();\r\n    const [visibleBeforeDownloadModal, setVisibleBeforeDownloadModal] = useState<boolean>(false);\r\n    const [visibleSettings, setVisibleSettings] = useState<boolean>(false);\r\n    const [showHeader, setShowHeader] = useState<boolean>(localStorage.getItem('tableHeader-consolidatedReport') ? localStorage.getItem('tableHeader-consolidatedReport') === 'true' : true);\r\n    const [showCellBorders, setShowBorders] = useState<boolean>(localStorage.getItem('tableBorders-consolidatedReport') ? localStorage.getItem('tableBorders-consolidatedReport') === 'true' : true);\r\n    const [showPreviewText, setShowPreviewText] = useState<boolean>(localStorage.getItem('tablePreviewText-consolidatedReport') ? localStorage.getItem('tablePreviewText-consolidatedReport') === 'true' : true);\r\n    const [pinNfNumberColumn, setPinNfNumberColumn] = useState<boolean>(localStorage.getItem('pinNfNumber-consolidatedReport') ? localStorage.getItem('pinNfNumber-consolidatedReport') === 'true' : true);\r\n    const [pinNfColumn, setPinNfColumn] = useState<boolean>(localStorage.getItem('pinNfName-consolidatedReport') ? localStorage.getItem('pinNfName-consolidatedReport') === 'true' : true);\r\n    const [pinDimensionColumn, setPinDimensionColumn] = useState<boolean>(localStorage.getItem('pinDimension-consolidatedReport') ? localStorage.getItem('pinDimension-consolidatedReport') === 'true' : true);\r\n    const [selectedDepartment, setSelectedDepartment] = useState<string>(generalStore?.userInfo?.department ?? '');\r\n    const [selectedYear, setSelectedYear] = useState<string>(generalStore.settings.year);\r\n    const numberColumnHeader = useRef(null);\r\n    const [counter, setCounter] = useState(0);\r\n    useEffect(() => {\r\n        if (numberColumnHeader && gridData && counter < 1)\r\n            if (numberColumnHeader.current) {\r\n                setCounter(prev => prev += 1)\r\n                //@ts-ignore\r\n                numberColumnHeader.current.click()\r\n            }\r\n    }, [columns, gridData])\r\n    useEffect(() => {\r\n        if (records) {\r\n            successLoadReport();\r\n            let gridData = records.map((record: IReport1, key: number) => {\r\n                let result = {...record, key};\r\n                record.filials.map((filial: any) => {\r\n                    // @ts-ignore\r\n                    result[filial.name] = filial.value\r\n                })\r\n                return result;\r\n            });\r\n            setGridData(gridData);\r\n            setColumns([\r\n                {\r\n                    title: () => {\r\n                        return <Text ref={numberColumnHeader} className=\"dragHandler\"\r\n                                     style={{color: blue.primary, fontSize: '11px', overflow: 'hidden'}}>№\r\n                            нормофактора</Text>\r\n                    },\r\n                    render(text, record) {\r\n                        return {\r\n                            children: <div style={{fontSize: 12, color: 'black', height: '77px'}}>\r\n                                <div>{text}</div>\r\n                            </div>\r\n                        };\r\n                    },\r\n                    dataIndex: 'nfNumber',\r\n                    key: 'nfNumber',\r\n                    width: 110,\r\n                    defaultSortOrder: 'ascend',\r\n                    sorter: (a: any, b: any) => a.nfNumber - b.nfNumber,\r\n                    sortDirections: ['descend', 'ascend'],\r\n                    fixed: pinNfNumberColumn ? 'left' : undefined,\r\n                },\r\n                {\r\n                    title: () => {\r\n                        return <Text className=\"dragHandler\"\r\n                                     style={{\r\n                                         color: blue.primary,\r\n                                         fontSize: '11px',\r\n                                         maxHeight: 100,\r\n                                         overflow: 'hidden'\r\n                                     }}>Наименование нормофактора (ТЭП)</Text>\r\n                    },\r\n                    render(text, record) {\r\n                        return {\r\n                            props: {\r\n                                style: {color: 'red'}\r\n                            },\r\n                            children: <div style={text?.length > 70 ? {\r\n                                fontSize: 12,\r\n                                color: 'black',\r\n                                height: '77px',\r\n                                overflowY: 'scroll'\r\n                            } : {fontSize: 12, color: 'black', height: '77px'}}>\r\n                                {(showPreviewText && text?.length > 20) ?\r\n                                    <Tooltip placement={'left'} title={text}>\r\n                                        {text}\r\n                                    </Tooltip> :\r\n                                    <div>{text}</div>\r\n                                }\r\n                            </div>\r\n                        };\r\n                    },\r\n                    fixed: pinNfColumn ? 'left' : undefined,\r\n                    dataIndex: 'nf',\r\n                    key: 'nf',\r\n                    width: 200,\r\n                    filters: getUniqDictsList(gridData, 'nf'),\r\n                    onFilter: (value: any, record: any) => {\r\n                        return record.nf.indexOf(value) === 0\r\n                    },\r\n                    sorter: (a: any, b: any) => a.nf.length - b.nf.length,\r\n                    sortDirections: ['descend', 'ascend'],\r\n                    filterSearch: true,\r\n                },\r\n                // {\r\n                //     title: () => {\r\n                //         return <Text className=\"dragHandler\"\r\n                //                      style={{\r\n                //                          color: blue.primary,\r\n                //                          fontSize: '11px',\r\n                //                          maxHeight: 100,\r\n                //                          overflow: 'hidden'\r\n                //                      }}>Сборник</Text>\r\n                //     },\r\n                //     render(text, record) {\r\n                //         return {\r\n                //             props: {\r\n                //                 style: {color: 'red'}\r\n                //             },\r\n                //             children: <div style={text?.length > 70 ? {\r\n                //                 fontSize: 12,\r\n                //                 color: 'black',\r\n                //                 height: '77px',\r\n                //                 overflowY: 'scroll'\r\n                //             } : {fontSize: 12, color: 'black', height: '77px'}}>\r\n                //                 {(showPreviewText && text?.length > 20) ?\r\n                //                     <Tooltip placement={'left'} title={text}>\r\n                //                         {text}\r\n                //                     </Tooltip> :\r\n                //                     <div>{text}</div>\r\n                //                 }\r\n                //             </div>\r\n                //         };\r\n                //     },\r\n                //     fixed: fixedNfColumn ? 'left' : undefined,\r\n                //     dataIndex: 'dict',\r\n                //     key: 'dict',\r\n                //     width: 200,\r\n                //     //filters: getUniqDictsList(gridData, 'nf'),\r\n                //     //onFilter: (value: any, record: any) => {\r\n                //     //    return record.nf.indexOf(value) === 0\r\n                //     //},\r\n                //     //sorter: (a: any, b: any) => a.nf.length - b.nf.length,\r\n                //     //sortDirections: ['descend', 'ascend'],\r\n                //     filterSearch: true,\r\n                // },\r\n                {\r\n                    title: () => {\r\n                        return <Text className=\"dragHandler\"\r\n                                     style={{\r\n                                         color: blue.primary,\r\n                                         fontSize: '11px',\r\n                                         maxHeight: 100,\r\n                                         overflow: 'hidden'\r\n                                     }}>Ед. изм.</Text>\r\n                    },\r\n                    render(text, record) {\r\n                        return {\r\n                            props: {\r\n                                style: {color: 'red'}\r\n                            },\r\n                            children: <div style={{fontSize: 12, color: 'black', height: '77px'}}>\r\n                                <div>{text}</div>\r\n                            </div>\r\n                        };\r\n                    },\r\n                    dataIndex: 'dimension',\r\n                    key: 'dimension',\r\n                    width: 100,\r\n                    filters: getUniqDictsList(gridData, 'dimension'),\r\n                    onFilter: (value: any, record: any) => {\r\n                        return record.dimension.indexOf(value) === 0\r\n                    },\r\n                    filterSearch: true,\r\n                    fixed: pinDimensionColumn ? 'left' : undefined,\r\n                },\r\n                {\r\n                    title: () => {\r\n                        return <Text\r\n                            style={{color: blue.primary, fontSize: '11px', overflow: 'hidden'}}>Филиалы</Text>\r\n                    },\r\n                    children: generalStore?.filials?.map((filial: IFilial) => {\r\n                        return {\r\n                            title: () => {\r\n                                return <Text style={{\r\n                                    margin: 0,\r\n                                    color: blue.primary,\r\n                                    fontSize: '11px',\r\n                                    width: '100%',\r\n                                    height: 100,\r\n                                    overflow: 'hidden',\r\n                                    writingMode: 'vertical-rl',\r\n                                    transform: 'rotate(-180deg)',\r\n                                    transformOrigin: \"center\"\r\n                                }}>{filial.name}</Text>\r\n                            },\r\n                            render(srcText, record) {\r\n                                const text = srcText.split(\";\")\r\n                                return {\r\n                                    children: <div>\r\n                                        {text.length > 1 ?\r\n                                            <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'center',\r\n                                                alignItems: 'center',\r\n                                                flexDirection: 'column',\r\n                                                fontSize: 12,\r\n                                                color: 'black',\r\n                                                height: '77px',\r\n                                                background: '#ff7875',\r\n                                                boxShadow: '1px 2px 9px #ff7875'\r\n                                            }}>\r\n                                                <p>{text[0]}</p>\r\n                                                <p>{text[1]}</p>\r\n                                                <p>{text[2]}</p>\r\n                                                <p>{text[3]}</p>\r\n                                            </div>\r\n                                            :\r\n                                            <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'center',\r\n                                                alignItems: 'center',\r\n                                                fontSize: 12,\r\n                                                color: 'black',\r\n                                                height: '77px',\r\n                                            }}>\r\n                                                <div>{text}</div>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                };\r\n                            },\r\n                            dataIndex: filial.name,\r\n                            key: filial.name,\r\n                        }\r\n                    }),\r\n                    width: 2000,\r\n                    render(text, record) {\r\n                        return {\r\n                            children: <div style={{fontSize: 12, color: 'black', height: '77px'}}>\r\n                                <div>{text}</div>\r\n                            </div>\r\n                        };\r\n                    },\r\n                },\r\n            ]);\r\n        }\r\n    }, [records]);\r\n    useEffect(() => {\r\n        if (getRecordsError) {\r\n            errorLoadDepartments();\r\n        }\r\n    }, [getRecordsError]);\r\n    useEffect(() => {\r\n        let years: { label: string, value: string }[] = [];\r\n        for (let year = 2018; year <= Number(generalStore.settings.year); year++) {\r\n            years.push({label: String(year), value: String(year)})\r\n        }\r\n        setYears(years);\r\n    }, []);\r\n    useEffect(() => {\r\n        if (records) {\r\n            setColumns([\r\n                {\r\n                    title: () => {\r\n                        return <Text className=\"dragHandler\"\r\n                                     style={{color: blue.primary, fontSize: '11px', overflow: 'hidden'}}>№\r\n                            нормофактора</Text>\r\n                    },\r\n                    render(text, record) {\r\n                        return {\r\n                            props: {\r\n                                style: {color: 'red'}\r\n                            },\r\n                            children: <div style={{fontSize: 12, color: 'black', height: '77px'}}>\r\n                                <div>{text}</div>\r\n                            </div>\r\n                        };\r\n                    },\r\n                    dataIndex: 'nfNumber',\r\n                    key: 'nfNumber',\r\n                    width: 110,\r\n                    defaultSortOrder: 'ascend',\r\n                    sorter: (a: any, b: any) => a.nfNumber - b.nfNumber,\r\n                    sortDirections: ['descend', 'ascend'],\r\n                    fixed: pinNfNumberColumn ? 'left' : undefined,\r\n                },\r\n                {\r\n                    title: () => {\r\n                        return <Text className=\"dragHandler\"\r\n                                     style={{\r\n                                         color: blue.primary,\r\n                                         fontSize: '11px',\r\n                                         maxHeight: 100,\r\n                                         overflow: 'hidden'\r\n                                     }}>Наименование нормофактора (ТЭП)</Text>\r\n                    },\r\n                    render(text, record) {\r\n                        return {\r\n                            props: {\r\n                                style: {color: 'red'}\r\n                            },\r\n                            children: <div style={text?.length > 70 ? {\r\n                                fontSize: 12,\r\n                                color: 'black',\r\n                                height: '77px',\r\n                                overflowY: 'scroll'\r\n                            } : {fontSize: 12, color: 'black', height: '77px'}}>\r\n                                {(showPreviewText && text?.length > 20) ?\r\n                                    <Tooltip placement={'left'} title={text}>\r\n                                        {text}\r\n                                    </Tooltip> :\r\n                                    <div>{text}</div>\r\n                                }\r\n                            </div>\r\n                        };\r\n                    },\r\n                    fixed: pinNfColumn ? 'left' : undefined,\r\n                    dataIndex: 'nf',\r\n                    key: 'nf',\r\n                    width: 200,\r\n                    filters: getUniqDictsList(gridData, 'nf'),\r\n                    onFilter: (value: any, record: any) => {\r\n                        return record.nf.indexOf(value) === 0\r\n                    },\r\n                    sorter: (a: any, b: any) => a.nf.length - b.nf.length,\r\n                    sortDirections: ['descend', 'ascend'],\r\n                    filterSearch: true,\r\n                },\r\n                {\r\n                    title: () => {\r\n                        return <Text className=\"dragHandler\"\r\n                                     style={{\r\n                                         color: blue.primary,\r\n                                         fontSize: '11px',\r\n                                         maxHeight: 100,\r\n                                         overflow: 'hidden'\r\n                                     }}>Ед. изм.</Text>\r\n                    },\r\n                    render(text, record) {\r\n                        return {\r\n                            props: {\r\n                                style: {color: 'red'}\r\n                            },\r\n                            children: <div style={{fontSize: 12, color: 'black', height: '77px'}}>\r\n                                <div>{text}</div>\r\n                            </div>\r\n                        };\r\n                    },\r\n                    dataIndex: 'dimension',\r\n                    key: 'dimension',\r\n                    width: 100,\r\n                    filters: getUniqDictsList(gridData, 'dimension'),\r\n                    onFilter: (value: any, record: any) => {\r\n                        return record.dimension.indexOf(value) === 0\r\n                    },\r\n                    filterSearch: true,\r\n                    fixed: pinDimensionColumn ? 'left' : undefined,\r\n                },\r\n                {\r\n                    title: () => {\r\n                        return <Text\r\n                            style={{color: blue.primary, fontSize: '11px', overflow: 'hidden'}}>Филиалы</Text>\r\n                    },\r\n                    // children: records[0]?.filials?.map((filial:{name:string, value:string})=>({\r\n                    children: generalStore?.filials?.map((filial: IFilial) => {\r\n                        return {\r\n                            title: () => {\r\n                                return <Text style={{\r\n                                    margin: 0,\r\n                                    color: blue.primary,\r\n                                    fontSize: '11px',\r\n                                    width: 40,\r\n                                    height: 100,\r\n                                    overflow: 'hidden',\r\n                                    writingMode: 'vertical-lr',\r\n                                    transform: 'rotate(-180deg)',\r\n                                    transformOrigin: \"center\"\r\n                                }}>{filial.name}</Text>\r\n                            },\r\n                            render(srcText, record) {\r\n                                const text = srcText.split(\";\")\r\n                                return {\r\n                                    children: <div>\r\n                                        {text.length > 1 ?\r\n                                            <Tooltip placement={'left'} title={() => {\r\n                                                let dicts = record.dict.split('&');\r\n                                                return `${dicts[0]}\\n${dicts[1]}`;\r\n                                            }\r\n                                            }>\r\n                                                <div style={{\r\n                                                    display: 'flex',\r\n                                                    justifyContent: 'center',\r\n                                                    alignItems: 'center',\r\n                                                    flexDirection: 'column',\r\n                                                    fontSize: 12,\r\n                                                    color: 'black',\r\n                                                    height: '77px',\r\n                                                    background: '#ff7875',\r\n                                                    boxShadow: '1px 2px 9px #ff7875'\r\n                                                }}>\r\n                                                    <p>{text[0]}</p>\r\n                                                    <p>{text[1]}</p>\r\n                                                    <p>{text[2]}</p>\r\n                                                    <p>{text[3]}</p>\r\n                                                </div>\r\n                                            </Tooltip>\r\n                                            :\r\n                                            <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'center',\r\n                                                alignItems: 'center',\r\n                                                fontSize: 12,\r\n                                                color: 'black',\r\n                                                height: '77px',\r\n                                            }}>\r\n                                                <div>{text}</div>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                };\r\n                            },\r\n                            dataIndex: filial.name,\r\n                            key: filial.name,\r\n                        }\r\n                    }),\r\n                    width: 2000,\r\n                    render(text, record) {\r\n                        return {\r\n                            props: {\r\n                                style: {color: 'red'}\r\n                            },\r\n                            children: <div style={{fontSize: 12, color: 'black', height: '77px'}}>\r\n                                <div>{text}</div>\r\n                            </div>\r\n                        };\r\n                    },\r\n                },\r\n            ]);\r\n        }\r\n    }, [pinDimensionColumn, pinNfNumberColumn, pinNfColumn]);\r\n    const handleUpdateDepartment = (value: string) => {\r\n        setSelectedDepartment(value);\r\n    }\r\n    const handleUpdateYear = (value: string) => {\r\n        setSelectedYear(value);\r\n    }\r\n\r\n    return (\r\n        <div style={{height: window.innerHeight - 140, paddingTop: '10px'}}>\r\n            {contextHolder}\r\n            <BeforeReportDownloadModal\r\n                visible={visibleBeforeDownloadModal}\r\n                setVisible={setVisibleBeforeDownloadModal}\r\n                selectedDepartment={selectedDepartment}\r\n                selectedYear={selectedYear}\r\n                warningLoadReport={warningLoadReport}\r\n            />\r\n            <GridSettingsModal\r\n                moduleName={'consolidatedReport'}\r\n                successUpdatedSettings={successUpdatedSettings}\r\n                visible={visibleSettings}\r\n                setVisible={setVisibleSettings}\r\n                showBorders={showCellBorders}\r\n                setShowBorders={setShowBorders}\r\n                showHeader={showHeader}\r\n                setShowHeader={setShowHeader}\r\n                previewText={showPreviewText}\r\n                setPreviewText={setShowPreviewText}\r\n                fixedNfNumberColumn={pinNfNumberColumn}\r\n                setFixedNfNumberColumn={setPinNfNumberColumn}\r\n                fixedNfColumn={pinNfColumn}\r\n                setFixedNfColumn={setPinNfColumn}\r\n                fixedDimensionColumn={pinDimensionColumn}\r\n                setFixedDimensionColumn={setPinDimensionColumn}\r\n            />\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                marginLeft: '15px',\r\n                marginRight: '15px',\r\n                marginBottom: '10px'\r\n            }}>\r\n                <div style={{display: 'flex'}}>\r\n                    <Select\r\n                        loading={getDepartmentsLoading}\r\n                        disabled={getRecordsLoading}\r\n                        defaultValue={selectedDepartment}\r\n                        style={{width: '450px', marginRight: '5px'}}\r\n                        onChange={handleUpdateDepartment}\r\n                        options={departments !== undefined ?\r\n                            departments.map((department: IDepartment) => ({\r\n                                value: department.name,\r\n                                label: department.name\r\n                            }))\r\n                            :\r\n                            []\r\n                        }\r\n                    />\r\n                    <Select\r\n                        disabled={getRecordsLoading}\r\n                        defaultValue={selectedYear}\r\n                        style={{width: '190px'}}\r\n                        onChange={handleUpdateYear}\r\n                        options={years}\r\n                    />\r\n                    <Button disabled={getRecordsLoading} style={{marginLeft: 15}} onClick={() => {\r\n                        getRecords({department: selectedDepartment, year: selectedYear})\r\n                    }}>Сформировать</Button>\r\n                </div>\r\n                <div>\r\n                    <Tooltip placement={'leftTop'} title={'Скачать отчёт'}>\r\n                        <Button style={{marginRight: 10}} className='settingsButton' icon={<FileExcelOutlined/>}\r\n                                shape={'circle'} onClick={() => {\r\n                            //setVisibleBeforeDownloadModal(true);\r\n                            warningLoadReport();\r\n                            let tmpButton = document.createElement('a')\r\n                            tmpButton.href = `${secure}://${host}:${port}/api/report/consolidatedReportByDepartment?department=${selectedDepartment}&year=${selectedYear}`\r\n                            tmpButton.click();\r\n                        }}/>\r\n                    </Tooltip>\r\n                    <Tooltip placement={'leftTop'} title={'Настройки таблицы'}>\r\n                        <Button className='settingsButton' icon={<SettingOutlined/>} shape={'circle'}\r\n                                onClick={() => setVisibleSettings(true)}/>\r\n                    </Tooltip>\r\n                </div>\r\n            </div>\r\n\r\n            <BaseGrid\r\n                width={2500}\r\n                bordered={showCellBorders}\r\n                loading={getRecordsLoading}\r\n                showHeader={showHeader}\r\n                columns={columns}\r\n                dataSource={gridData}\r\n                pagination={{position: [\"bottomRight\"], defaultPageSize: 9}}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {Button, message, Select, Table, Tooltip, Typography} from 'antd';\r\nimport type {ColumnsType} from 'antd/es/table';\r\nimport {blue} from '@ant-design/colors';\r\nimport {FileExcelOutlined, SettingOutlined} from \"@ant-design/icons\";\r\n// @ts-ignore\r\nimport Highlighter from \"react-highlight-words\"\r\nimport \"../../App.css\";\r\nimport {useTimeout} from \"../../hooks/useTimeout\";\r\nimport {IReport2, reportAPI} from \"../../services/ReportService\";\r\nimport {host, port, secure} from \"../../config/config\";\r\nimport {useAppSelector} from \"../../hooks/redux\";\r\nimport {GridSettingsModal} from \"../../components/GridSettingsModal\";\r\n\r\nconst {Text, Title} = Typography;\r\n\r\ninterface ListItem {\r\n    text: string;\r\n    value: string;\r\n}\r\n\r\ninterface DataType extends IReport2 {\r\n    key: React.Key;\r\n}\r\n\r\nexport const AboutFiilingReportModule: React.FC = () => {\r\n    const generalStore = useAppSelector(store => store.userReducer);\r\n    // Create Toasts context\r\n    const [messageApi, contextHolder] = message.useMessage();\r\n    const successUpdatedSettings = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: 'Настройки обновлены',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const successLoadReport = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: 'Записи загружены',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const warningLoadReport = () => {\r\n        messageApi.open({\r\n            type: 'warning',\r\n            content: 'Отчёт начал формироваться',\r\n            duration: 4,\r\n        });\r\n    }\r\n    const errorLoadReports = () => {\r\n        messageApi.open({\r\n            type: 'error',\r\n            content: 'Ошибка загрузки',\r\n            duration: 1,\r\n        });\r\n    }\r\n    //End of toasts\r\n    // Requests\r\n    const [getRecords, {\r\n        data: records,\r\n        error: getRecordsError,\r\n        isLoading: getRecordsLoading\r\n    }] = reportAPI.useGetReport2Mutation();\r\n    // End of requests\r\n    const [data, setData] = useState<DataType[]>();\r\n    const [visibleSettings, setVisibleSettings] = useState<boolean>(false);\r\n    const [showHeader, setShowHeader] = useState<boolean>(localStorage.getItem('tableHeader-aboutFillingReport') ? localStorage.getItem('tableHeader-aboutFillingReport') === 'true' : true);\r\n    const [showCellBorders, setShowBorders] = useState<boolean>(localStorage.getItem('tableBorders-aboutFillingReport') ? localStorage.getItem('tableBorders-aboutFillingReport') === 'true' : true);\r\n    const [selectedYear, setSelectedYear] = useState<string>(generalStore.settings.year);\r\n    const [years, setYears] = useState<{ value: string, label: string }[]>([]);\r\n    useEffect(() => {\r\n        if (records) {\r\n            successLoadReport();\r\n            setData(records.map((record: IReport2, key: number) => ({...record, key} as DataType)));\r\n        }\r\n    }, [records])\r\n    useEffect(() => {\r\n        if (getRecordsError) {\r\n            errorLoadReports();\r\n        }\r\n    }, [getRecordsError]);\r\n    useEffect(() => {\r\n        let years: { label: string, value: string }[] = [];\r\n        for (let year = 2018; year <= Number(generalStore.settings.year); year++) {\r\n            years.push({label: String(year), value: String(year)})\r\n        }\r\n        setYears(years);\r\n    }, []);\r\n    const columns: ColumnsType<DataType> = [\r\n        {\r\n            title: () => {\r\n                return <Text\r\n                    style={{color: blue.primary, fontSize: '11px', maxHeight: 100, overflow: 'hidden'}}>Филиал</Text>\r\n            },\r\n            render(text, record) {\r\n                return {\r\n                    props: {\r\n                        style: {color: 'red'}\r\n                    },\r\n                    children: <div style={text?.length > 70 ? {\r\n                        fontSize: 12,\r\n                        color: 'black',\r\n                        height: '30px',\r\n                        overflowY: 'scroll'\r\n                    } : {fontSize: 12, color: 'black', height: '30px'}}>\r\n                        <div>{text}</div>\r\n                    </div>\r\n                };\r\n            },\r\n            dataIndex: 'filial',\r\n            key: 'filial',\r\n            width: '55%',\r\n        },\r\n        {\r\n            title: () => {\r\n                return <Text\r\n                    style={{color: blue.primary, fontSize: '11px', maxHeight: 100, overflow: 'hidden'}}>На заполнении</Text>\r\n            },\r\n            render(text, record) {\r\n                return {\r\n                    props: {\r\n                        style: {color: 'red'}\r\n                    },\r\n                    children: <div style={text?.length > 70 ? {\r\n                        fontSize: 12,\r\n                        color: 'black',\r\n                        height: '30px',\r\n                        overflowY: 'scroll'\r\n                    } : {fontSize: 12, color: 'black', height: '30px'}}>\r\n                        <div>{text}</div>\r\n                    </div>\r\n                };\r\n            },\r\n            dataIndex: 'filled',\r\n            key: 'filled',\r\n            width: '15%',\r\n        },\r\n        {\r\n            title: () => {\r\n                return <Text\r\n                    style={{color: blue.primary, fontSize: '11px', maxHeight: 100, overflow: 'hidden'}}>На согласовании</Text>\r\n            },\r\n            render(text, record) {\r\n                return {\r\n                    props: {\r\n                        style: {color: 'red'}\r\n                    },\r\n                    children: <div style={text?.length > 70 ? {\r\n                        fontSize: 12,\r\n                        color: 'black',\r\n                        height: '30px',\r\n                        overflowY: 'scroll'\r\n                    } : {fontSize: 12, color: 'black', height: '30px'}}>\r\n                        <div>{text}</div>\r\n                    </div>\r\n                };\r\n            },\r\n            dataIndex: 'onConfirmed',\r\n            key: 'onConfirmed',\r\n            width: '15%',\r\n        },\r\n        {\r\n            title: () => {\r\n                return <Text\r\n                    style={{color: blue.primary, fontSize: '11px', maxHeight: 100, overflow: 'hidden'}}>Согласовано</Text>\r\n            },\r\n            render(text, record) {\r\n                return {\r\n                    props: {\r\n                        style: {color: 'red'}\r\n                    },\r\n                    children: <div style={text?.length > 70 ? {\r\n                        fontSize: 12,\r\n                        color: 'black',\r\n                        height: '30px',\r\n                        overflowY: 'scroll'\r\n                    } : {fontSize: 12, color: 'black', height: '30px'}}>\r\n                        <div>{text}</div>\r\n                    </div>\r\n                };\r\n            },\r\n            dataIndex: 'confirmed',\r\n            key: 'confirmed',\r\n            width: '15%',\r\n        },\r\n    ];\r\n    const handleUpdateYear = (value: string) => {\r\n        setSelectedYear(value);\r\n    }\r\n    return (\r\n        <div style={{height: window.innerHeight - 140, paddingTop: '10px'}}>\r\n            {contextHolder}\r\n            <GridSettingsModal\r\n                moduleName={'aboutFillingReport'}\r\n                successUpdatedSettings={successUpdatedSettings}\r\n                visible={visibleSettings}\r\n                setVisible={setVisibleSettings}\r\n                showBorders={showCellBorders}\r\n                showHeader={showHeader}\r\n                setShowHeader={setShowHeader}\r\n                setShowBorders={setShowBorders}\r\n            />\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                marginLeft: '15px',\r\n                marginRight: '15px',\r\n                marginBottom: '10px'\r\n            }}>\r\n                <div style={{display: 'flex'}}>\r\n                    <Select\r\n                        disabled={getRecordsLoading}\r\n                        defaultValue={selectedYear}\r\n                        style={{width: '190px'}}\r\n                        onChange={handleUpdateYear}\r\n                        options={years}\r\n                    />\r\n                    <Button disabled={getRecordsLoading} style={{marginLeft: 15}} onClick={() => {\r\n                        getRecords(selectedYear);\r\n                    }}>Сформировать</Button>\r\n                </div>\r\n                <div>\r\n                    <Tooltip placement={'leftTop'} title={'Скачать отчёт'}>\r\n                        <Button style={{marginRight: 10}} className='settingsButton' icon={<FileExcelOutlined/>}\r\n                                shape={'circle'} onClick={() => {\r\n                            warningLoadReport();\r\n                            let tmpButton = document.createElement('a')\r\n                            tmpButton.href = `${secure}://${host}:${port}/api/report/export2?year=${selectedYear}`\r\n                            tmpButton.click()\r\n                        }}/>\r\n                    </Tooltip>\r\n                    <Tooltip placement={'leftTop'} title={'Настройки таблицы'}>\r\n                        <Button className='settingsButton' icon={<SettingOutlined/>} shape={'circle'}\r\n                                onClick={() => setVisibleSettings(true)}/>\r\n                    </Tooltip>\r\n                </div>\r\n            </div>\r\n            <Table\r\n                bordered={showCellBorders}\r\n                loading={getRecordsLoading}\r\n                showHeader={showHeader}\r\n                columns={columns}\r\n                dataSource={data}\r\n                pagination={{position: [\"bottomRight\"], defaultPageSize: 30}}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, {useEffect, useRef, useState} from 'react';\r\nimport {Button, message, Select, Table, Tooltip, Typography} from 'antd';\r\nimport type {ColumnsType} from 'antd/es/table';\r\nimport {blue} from '@ant-design/colors';\r\nimport {FileExcelOutlined, SettingOutlined} from \"@ant-design/icons\";\r\n// @ts-ignore\r\nimport Highlighter from \"react-highlight-words\"\r\nimport \"../../App.css\";\r\nimport {IReport3, reportAPI} from \"../../services/ReportService\";\r\nimport {host, port, secure} from \"../../config/config\";\r\nimport {IFilial} from \"../../models/IFilial\";\r\nimport {useAppSelector} from \"../../hooks/redux\";\r\nimport {GridSettingsModal} from \"../../components/GridSettingsModal\";\r\n\r\nconst {Text} = Typography;\r\n\r\ninterface DataType extends IReport3 {\r\n    key: React.Key;\r\n}\r\n\r\nexport const TEPDynamicReportModule: React.FC = () => {\r\n    const generalStore = useAppSelector(store => store.userReducer);\r\n    // Create Toasts context\r\n    const [messageApi, contextHolder] = message.useMessage();\r\n    const successUpdatedSettings = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: 'Настройки обновлены',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const successLoadReport = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: 'Записи загружены',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const warningLoadReport = () => {\r\n        messageApi.open({\r\n            type: 'warning',\r\n            content: 'Отчёт начал формироваться',\r\n            duration: 4,\r\n        });\r\n    }\r\n    const errorLoadReport = () => {\r\n        messageApi.open({\r\n            type: 'error',\r\n            content: 'Ошибка загрузки',\r\n            duration: 1,\r\n        });\r\n    }\r\n    //End of toasts\r\n    // Requests\r\n    const [getRecords, {\r\n        data: records,\r\n        error: getRecordsError,\r\n        isLoading: getRecordsLoading\r\n    }] = reportAPI.useGetReport3Mutation();\r\n    // End of requests\r\n    const [data, setData] = useState<DataType[]>();\r\n    const [visibleSettings, setVisibleSettings] = useState<boolean>(false);\r\n    const [showHeader, setShowHeader] = useState<boolean>(localStorage.getItem('tableHeader-tepDynamicReport') ? localStorage.getItem('tableHeader-tepDynamicReport') === 'true' : true);\r\n    const [showCellBorders, setShowBorders] = useState<boolean>(localStorage.getItem('tableBorders-tepDynamicReport') ? localStorage.getItem('tableBorders-tepDynamicReport') === 'true' : true);\r\n    const [selectedFilial, setSelectedFilial] = useState<string>(generalStore?.userInfo?.filials[0]?.name ?? '');\r\n    const [columns, setColumns] = useState<ColumnsType<DataType>>([]);\r\n    const [rowHeight, setRowHeight] = useState<number>(30);\r\n    const [counter, setCounter] = useState(0);\r\n    const numberColumnHeader = useRef(null);\r\n    useEffect(()=>{\r\n        if (numberColumnHeader && data && counter<1)\r\n            if (numberColumnHeader.current) {\r\n                setCounter(prev=>prev+=1)\r\n                //@ts-ignore\r\n                numberColumnHeader.current.click()\r\n            }\r\n    }, [columns, data])\r\n    useEffect(() => {\r\n        if (records) {\r\n            successLoadReport();\r\n            setData(records.map((record: IReport3, key: number) => {\r\n                let result = {...record, key};\r\n                record.yearsValue.map((yearValue: { value: string, year: string }) => {\r\n                    // @ts-ignore\r\n                    result[yearValue.year] = yearValue.value\r\n                })\r\n                return result;\r\n            }));\r\n            setColumns([\r\n                {\r\n                    title: () => {\r\n                        return <Text className=\"dragHandler\" ref={numberColumnHeader}\r\n                                     style={{\r\n                                         color: blue.primary,\r\n                                         fontSize: '11px',\r\n                                         height: rowHeight,\r\n                                         overflow: 'hidden'\r\n                                     }}>№ нормофактора</Text>\r\n                    },\r\n                    render(text, record) {\r\n                        return {\r\n                            props: {\r\n                                style: {color: 'red'}\r\n                            },\r\n                            children: <div style={text?.length > 70 ? {\r\n                                fontSize: 12,\r\n                                color: 'black',\r\n                                height: '57px',\r\n                                overflowY: 'scroll'\r\n                            } : {fontSize: 12, color: 'black', height: '57px'}}>\r\n                                <div>{text}</div>\r\n                            </div>\r\n                        };\r\n                    },\r\n                    dataIndex: 'nfNumber',\r\n                    key: 'nfNumber',\r\n                    width: 110,\r\n                    sorter: (a: any, b: any) => a.nfNumber - b.nfNumber,\r\n                    defaultSortOrder: 'ascend',\r\n                    sortDirections: ['descend', 'ascend'],\r\n                },\r\n                {\r\n                    title: () => {\r\n                        return <Text className=\"dragHandler\"\r\n                                     style={{\r\n                                         color: blue.primary,\r\n                                         fontSize: '11px',\r\n                                         height: rowHeight,\r\n                                         overflow: 'hidden'\r\n                                     }}>Наименование\r\n                            нормофактора</Text>\r\n                    },\r\n                    render(text, record) {\r\n                        return {\r\n                            props: {\r\n                                style: {color: 'red'}\r\n                            },\r\n                            children: <div style={text?.length > 70 ? {\r\n                                fontSize: 12,\r\n                                color: 'black',\r\n                                height: '57px',\r\n                                overflowY: 'scroll'\r\n                            } : {fontSize: 12, color: 'black', height: '57px'}}>\r\n                                <div>{text}</div>\r\n                            </div>\r\n                        };\r\n                    },\r\n                    dataIndex: 'nf',\r\n                    key: 'nf',\r\n                    width: 300,\r\n                },\r\n                {\r\n                    title: () => {\r\n                        return <Text className=\"dragHandler\"\r\n                                     style={{\r\n                                         color: blue.primary,\r\n                                         fontSize: '11px',\r\n                                         height: rowHeight,\r\n                                         overflow: 'hidden'\r\n                                     }}>Сборник</Text>\r\n                    },\r\n                    render(text, record) {\r\n                        return {\r\n                            props: {\r\n                                style: {color: 'red'}\r\n                            },\r\n                            children: <div style={text?.length > 70 ? {\r\n                                fontSize: 12,\r\n                                color: 'black',\r\n                                height: '57px',\r\n                                overflowY: 'scroll'\r\n                            } : {fontSize: 12, color: 'black', height: '57px'}}>\r\n                                <div>{text}</div>\r\n                            </div>\r\n                        };\r\n                    },\r\n                    dataIndex: 'dict',\r\n                    key: 'dict',\r\n                    width: 300,\r\n                },\r\n                {\r\n                    title: () => {\r\n                        return <Text className=\"dragHandler\"\r\n                                     style={{\r\n                                         color: blue.primary,\r\n                                         fontSize: '11px',\r\n                                         height: rowHeight,\r\n                                         overflow: 'hidden'\r\n                                     }}>Ед. изм.</Text>\r\n                    },\r\n                    render(text, record) {\r\n                        return {\r\n                            props: {\r\n                                style: {color: 'red'}\r\n                            },\r\n                            children: <div style={text?.length > 70 ? {\r\n                                fontSize: 12,\r\n                                color: 'black',\r\n                                height: '57px',\r\n                                overflowY: 'scroll'\r\n                            } : {fontSize: 12, color: 'black', height: '57px'}}>\r\n                                <div>{text}</div>\r\n                            </div>\r\n                        };\r\n                    },\r\n                    dataIndex: 'dimension',\r\n                    key: 'dimension',\r\n                    width: 100,\r\n                },\r\n                {\r\n                    title: () => {\r\n                        return <Text className=\"dragHandler\"\r\n                                     style={{\r\n                                         color: blue.primary,\r\n                                         fontSize: '11px',\r\n                                         height: rowHeight,\r\n                                         overflow: 'hidden'\r\n                                     }}>Значение нормофакторов (ТЭП)</Text>\r\n                    },\r\n                    children: records[0]?.yearsValue?.map((yearValue: { year: string, value: string }) => ({\r\n                        title: () => {\r\n                            return <Text style={{\r\n                                margin: 0,\r\n                                color: blue.primary,\r\n                                fontSize: '11px',\r\n                                width: 40,\r\n                                height: rowHeight,\r\n                                overflow: 'hidden'\r\n                            }}>{yearValue.year}</Text>\r\n                        },\r\n                        render(text: any, record: any) {\r\n                            return {\r\n                                props: {\r\n                                    style: {color: 'red'}\r\n                                },\r\n                                children: <div style={{fontSize: 12, color: 'black', height: rowHeight}}>\r\n                                    <div>{text !== \"null\" ? text: \"\"}</div>\r\n                                </div>\r\n                            };\r\n                        },\r\n                        dataIndex: yearValue.year,\r\n                        key: yearValue.year,\r\n                    })),\r\n                    width: 100,\r\n\r\n                },\r\n            ])\r\n        }\r\n    }, [records])\r\n    useEffect(() => {\r\n        if (getRecordsError) {\r\n            errorLoadReport();\r\n        }\r\n    }, [getRecordsError]);\r\n    useEffect(() => {\r\n        //getRecords({filial: selectedFilial});\r\n    }, []);\r\n    const handleUpdateFilial = (filial: string) => {\r\n        setSelectedFilial(filial);\r\n    }\r\n    return (\r\n        <div style={{height: window.innerHeight - 140, paddingTop: '10px'}}>\r\n            {contextHolder}\r\n            <GridSettingsModal\r\n                moduleName={'tepDynamicReport'}\r\n                successUpdatedSettings={successUpdatedSettings}\r\n                visible={visibleSettings}\r\n                setVisible={setVisibleSettings}\r\n                showBorders={showCellBorders}\r\n                showHeader={showHeader}\r\n                setShowHeader={setShowHeader}\r\n                setShowBorders={setShowBorders}\r\n            />\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                marginLeft: '15px',\r\n                marginRight: '15px',\r\n                marginBottom: '10px'\r\n            }}>\r\n                <div style={{display: 'flex'}}>\r\n                    <Select\r\n                        disabled={getRecordsLoading}\r\n                        defaultValue={selectedFilial}\r\n                        style={{width: '290px', marginRight: '15px'}}\r\n                        onChange={handleUpdateFilial}\r\n                        options={generalStore?.userInfo?.filials.map((filial: IFilial) => ({\r\n                            value: filial.name,\r\n                            label: filial.name\r\n                        }))}\r\n                    />\r\n                    <Button disabled={getRecordsLoading} style={{marginRight: 10}} onClick={() => {\r\n                        getRecords({filial: selectedFilial});\r\n                    }}>Сформировать</Button>\r\n                </div>\r\n                <div>\r\n                    <Tooltip placement={'leftTop'} title={'Скачать отчёт'}>\r\n                        <Button style={{marginRight: 10}} className='settingsButton' icon={<FileExcelOutlined/>}\r\n                                shape={'circle'} onClick={() => {\r\n                            warningLoadReport();\r\n                            let tmpButton = document.createElement('a')\r\n                            tmpButton.href = `${secure}://${host}:${port}/api/report/dynamicReport?filial=${selectedFilial}`\r\n                            tmpButton.click()\r\n                        }}/>\r\n                    </Tooltip>\r\n                    <Tooltip placement={'leftTop'} title={'Настройки таблицы'}>\r\n                        <Button className='settingsButton' icon={<SettingOutlined/>} shape={'circle'}\r\n                                onClick={() => setVisibleSettings(true)}/>\r\n                    </Tooltip>\r\n                </div>\r\n            </div>\r\n            <Table\r\n                bordered={showCellBorders}\r\n                loading={getRecordsLoading}\r\n                showHeader={showHeader}\r\n                columns={columns}\r\n                dataSource={data}\r\n                pagination={{position: [\"bottomRight\"], defaultPageSize: 11}}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {Button, DatePicker, message, Table, Tag, Tooltip, Typography} from 'antd';\r\nimport type {ColumnsType} from 'antd/es/table';\r\nimport {blue} from '@ant-design/colors';\r\nimport {SettingOutlined} from \"@ant-design/icons\";\r\nimport {CellSize} from \"../../ENUMS\";\r\n// @ts-ignore\r\nimport Highlighter from \"react-highlight-words\"\r\nimport \"../../App.css\";\r\nimport {userAPI} from \"../../services/UserService\";\r\nimport {settingsAPI} from \"../../services/SettingsService\";\r\nimport dayjs from 'dayjs'\r\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux\";\r\nimport {setSettings, setUserInfo} from \"../../store/reducers/GeneralSlice\";\r\nimport {start} from \"repl\";\r\n\r\n\r\nconst {RangePicker} = DatePicker;\r\n\r\nconst {Text} = Typography;\r\n\r\nexport const PlanYearModule: React.FC = () => {\r\n    // Create Toasts context\r\n    const [messageApi, contextHolder] = message.useMessage();\r\n    //End of toasts\r\n    // Requests\r\n    const [updateSettingsRequest, {\r\n        data: response,\r\n        error: updateUserError,\r\n        isSuccess: isSuccess,\r\n        isLoading: updateUserLoading\r\n    }] = settingsAPI.useUpdateSettingsMutation();\r\n    // End of requests\r\n    const dispatch = useAppDispatch();\r\n    const userStore = useAppSelector(store => store.userReducer);\r\n    const [year, setYear] = useState<string>(userStore.settings.year);\r\n    const [startPeriod, setStartPeriod] = useState<string>(userStore.settings.startPeriod);\r\n    const [endPeriod, setEndPeriod] = useState<string>(userStore.settings.endPeriod);\r\n    const updateSettings = (year: string, startPeriod: string, endPeriod: string) => {\r\n        updateSettingsRequest({\r\n            \"year\": year,\r\n            \"startPeriod\": startPeriod,\r\n            \"endPeriod\": endPeriod\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (isSuccess)\r\n            dispatch(setSettings({\r\n                year,\r\n                startPeriod,\r\n                endPeriod\r\n            }))\r\n    }, [isSuccess])\r\n    console.log(startPeriod)\r\n    return (\r\n        <div style={{height: window.innerHeight - 140, paddingTop: '10px'}}>\r\n            {contextHolder}\r\n            <div style={{display: 'flex', alignItems: 'center', marginBottom: 15, marginLeft: 15}}>\r\n                <Text style={{width: 220, marginRight: 10, fontSize: '14px', lineHeight: '22px'}}>Рабочий год</Text>\r\n                <DatePicker allowClear={false} value={dayjs(`01-01-${year}`, 'DD-MM-YYYY')} picker={\"year\"}\r\n                            onChange={(e: any, year: string) => {\r\n                                setYear(year);\r\n                                updateSettings(year, startPeriod, endPeriod);\r\n                            }}/>\r\n            </div>\r\n            <div style={{display: 'flex', alignItems: 'center', marginBottom: 15, marginLeft: 15}}>\r\n                <Text style={{width: 220, marginRight: 10, fontSize: '14px', lineHeight: '22px'}}>Период заполнения\r\n                    показателей</Text>\r\n                <RangePicker\r\n                    format={'DD-MM-YYYY'}\r\n                    allowClear={false} value={[dayjs(`${startPeriod}`, 'DD-MM-YYYY'), dayjs(`${endPeriod}`, 'DD-MM-YYYY'),]}\r\n                             onChange={(e: any, period: string[]) => {\r\n                                 setStartPeriod(period[0]);\r\n                                 setEndPeriod(period[1]);\r\n                                 updateSettings(year, period[0], period[1]);\r\n                             }}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"nil_arm/static/media/chapter0000.9872c657.png\";","export default __webpack_public_path__ + \"nil_arm/static/media/chapter0001-1.f58008ff.png\";","export default __webpack_public_path__ + \"nil_arm/static/media/chapter0001-2.2605902b.png\";","export default __webpack_public_path__ + \"nil_arm/static/media/chapter0002-1.802a37cf.png\";","export default __webpack_public_path__ + \"nil_arm/static/media/chapter0002-2.df867398.png\";","export default __webpack_public_path__ + \"nil_arm/static/media/chapter002.3c6688ef.png\";","export default __webpack_public_path__ + \"nil_arm/static/media/chapter003-1.687400a5.png\";","export default __webpack_public_path__ + \"nil_arm/static/media/chapter003-2.bebadb01.png\";","export default __webpack_public_path__ + \"nil_arm/static/media/chapter0030.06682338.png\";","export default __webpack_public_path__ + \"nil_arm/static/media/chapter0031.7a8d1fb7.png\";","export default __webpack_public_path__ + \"nil_arm/static/media/chapter0032.442c0816.png\";","export default __webpack_public_path__ + \"nil_arm/static/media/chapter0040.2c284f5f.png\";","export default __webpack_public_path__ + \"nil_arm/static/media/chapter0041.c3c26178.png\";","export default __webpack_public_path__ + \"nil_arm/static/media/chapter0042.c3a65350.png\";","import React, {useEffect, useState} from 'react';\r\nimport {Button, DatePicker, message, Table, Tag, Tooltip, Tree, Typography} from 'antd';\r\nimport type {ColumnsType} from 'antd/es/table';\r\nimport {blue} from '@ant-design/colors';\r\nimport {SettingOutlined} from \"@ant-design/icons\";\r\nimport {CellSize} from \"../../ENUMS\";\r\n// @ts-ignore\r\nimport Highlighter from \"react-highlight-words\"\r\nimport \"../../App.css\";\r\nimport type {DataNode} from 'antd/es/tree'\r\nimport {Key} from \"antd/es/table/interface\";\r\nimport { Image } from 'antd';\r\nimport chapter0000 from \"../../assets/chapter0000.png\";\r\nimport chapter0001_1 from \"../../assets/chapter0001-1.png\";\r\nimport chapter0001_2 from \"../../assets/chapter0001-2.png\";\r\nimport chapter0002_1 from \"../../assets/chapter0002-1.png\";\r\nimport chapter0002_2 from \"../../assets/chapter0002-2.png\";\r\nimport chapter002 from \"../../assets/chapter002.png\";\r\nimport chapter003_1 from \"../../assets/chapter003-1.png\";\r\nimport chapter003_2 from \"../../assets/chapter003-2.png\";\r\nimport chapter0030 from \"../../assets/chapter0030.png\";\r\nimport chapter0031 from \"../../assets/chapter0031.png\";\r\nimport chapter0032 from \"../../assets/chapter0032.png\";\r\nimport chapter0040 from \"../../assets/chapter0040.png\";\r\nimport chapter0041 from \"../../assets/chapter0041.png\";\r\nimport chapter0042 from \"../../assets/chapter0042.png\";\r\n\r\nexport const InfoModule: React.FC = () => {\r\n    const [selected, setSelected] = useState<Key[]>(['0-0-0']);\r\n    const treeData: DataNode[] = [\r\n        {\r\n            title: 'Оглавление',\r\n            key: '0-0',\r\n            children: [\r\n                {\r\n                    title: 'Роль «Работник» (Нормативно-исследовательская лаборатория)', key: '0-0-0', children: [\r\n                        {title: 'Добавление нормативно-методические документов', key: '0-0-0-0'},\r\n                        {title: 'Добавление технико-экономических показателей', key: '0-0-0-1'},\r\n                        {\r\n                            title: 'Ежегодный ввод значений технико-экономических показателей (Создание ведомости по филиалу)',\r\n                            key: '0-0-0-2'\r\n                        },\r\n                    ]\r\n                },\r\n                {title: 'Роль «Ответственный за ввод данных в СП (Филиал)»', key: '0-0-1'},\r\n                {\r\n                    title: 'Роль «Ответственный за согласование данных в администрации и подразделении при администрации (Куратор)»',\r\n                    key: '0-0-2'\r\n                },\r\n                {\r\n                    title: 'Роль «Администратор»', key: '0-0-3', children: [\r\n                        {title: 'Добавление пользователей', key: '0-0-3-0'},\r\n                        {title: 'Добавление ответственного подразделения (Куратор)', key: '0-0-3-1'},\r\n                        {title: 'Установление периода заполнения показателей', key: '0-0-3-2'},\r\n                    ]\r\n                },\r\n                {\r\n                    title: 'Формирование сводной отчетности', key: '0-0-4', children: [\r\n                        {title: 'Отчет «Сводный»', key: '0-0-4-0'},\r\n                        {title: 'Отчет «О заполнении»', key: '0-0-4-1'},\r\n                        {title: 'Отчет «Динамика ТЭП»', key: '0-0-4-2'},\r\n                    ]\r\n                },\r\n            ]\r\n        }\r\n    ]\r\n    return (\r\n        <div style={{height: window.innerHeight - 140, paddingTop: '10px'}}>\r\n            <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                <div style={{width: 400}}>\r\n                    <Tree\r\n                        treeData={treeData}\r\n                        defaultExpandAll={true}\r\n                        showIcon={true}\r\n                        showLine={true}\r\n                        onSelect={(e) => {\r\n                            if (e[0] != '0-0-4' && e.length > 0) {\r\n                                setSelected(e)\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div style={{\r\n                    width: 1000,\r\n                    fontSize: 16,\r\n                    marginTop: 15,\r\n                    marginBottom: 15,\r\n                    padding: 15,\r\n                    borderRadius: 10,\r\n                    boxShadow: '4px 4px 15px #f0f0f0'\r\n                }}>\r\n                    {(selected[0] === '0-0-0' || selected[0] === '0-0') && <div>\r\n                            <p>Основной функцией пользователя с ролью «Работник» (Нормативно-исследовательская\r\n                                лаборатория) является:</p>\r\n                            <br/>\r\n                            <ul style={{paddingLeft: 20}}>\r\n                                <li>Формирование используе мых нормативно-методические документов (добавление,\r\n                                    редактирование, удаление);\r\n                                </li>\r\n                                <li>Формирование справочника технико-экономических показателей (добавление,\r\n                                    редактирование, удаление);\r\n                                </li>\r\n                                <li>Формирование технико-экономических показателей на планируемый год/\r\n                                    создание ведомости показателей филиала (добавление, редактирование, удаление).\r\n                                </li>\r\n                            </ul>\r\n                        </div>}\r\n                    {selected[0] === '0-0-0-0' && <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\r\n                        <p style={{marginBottom: 25, alignSelf: 'start'}}>Порядок добавления нормативно-методические документов:</p>\r\n                        <p style={{marginBottom: 15, alignSelf: 'start'}}>1.\tВ меню программы выбрать раздел «Сборники» - нажать кнопку «Добавить сборник».</p>\r\n                        <Image width={850} height={540} src={chapter0000}/>\r\n                        <p style={{marginTop: 15}}>2.\tВ открывшемся разделе добавить сборник в соответствии с действующим Перечнем нормативно-методических документов для нормирования труда работников ООО «Газпром трансгаз Сургут». Выбрать филиалы, разрешенные к использованию по данному НМД</p>\r\n                    </div>}\r\n                    {selected[0] === '0-0-0-1' && <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\r\n                        <p style={{marginBottom: 25, alignSelf: 'start'}}>Порядок добавления технико-экономических показателей:</p>\r\n                        <p style={{marginBottom: 15, alignSelf: 'start'}}>1.\tВ меню программы выбрать раздел «Сборники», в требуемом справочнике нажать кнопку «Открыть показатели».</p>\r\n                        <Image width={850} height={400} src={chapter0001_1}/>\r\n                        <p style={{marginTop: 15, marginBottom: 15, alignSelf: 'start'}}>2.\tВ открывшемся разделе нажать кнопку «Добавить показатель».</p>\r\n                        <Image width={650} height={430} src={chapter0001_2}/>\r\n                        <p style={{marginBottom: 15, marginTop: 15, alignSelf: 'start'}}>При создании/редактировании нормофактора заполняется:</p>\r\n                        <ul style={{paddingLeft: 20}}>\r\n                            <li>Порядковый номер нормофактора, наименование, единица измерения;\r\n                            </li>\r\n                            <li>Формирование справочника технико-экономических показателей (добавление,\r\n                                редактирование, удаление);\r\n                            </li>\r\n                            <li>Формирование технико-экономических показателей на планируемый год/\r\n                                создание ведомости показателей филиала (добавление, редактирование, удаление).\r\n                            </li>\r\n                        </ul>\r\n                    </div>}\r\n                    {selected[0] === '0-0-0-2' && <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\r\n                        <p style={{marginBottom: 25}}>Порядок ежегодного ввода значений технико-экономических показателей (Создание ведомости по филиалу):</p>\r\n                        <p style={{marginBottom: 15, alignSelf: 'start'}}>1.\tВ меню программы выбрать раздел «Записи ТЭП» - выбрать нужный филиал -\r\n                            нажать кнопку «Добавить показатели».\r\n                        </p>\r\n                        <Image width={800} height={290} src={chapter0002_1}/>\r\n                        <p style={{marginTop: 15, marginBottom: 15, alignSelf: 'start'}}>2.\tВ сформированной ведомости нажать кнопку «На заполнение» - далее направляется для заполнения технико-экономических показателей на планируемый год в филиал ответственному за ввод данных в СП (Филиал).</p>\r\n                        <Image width={650} height={430} src={chapter0002_2}/>\r\n                        <p style={{marginBottom: 15, marginTop: 15, alignSelf: 'start'}}>При создании/редактировании нормофактора заполняется:</p>\r\n                        <ul style={{paddingLeft: 20}}>\r\n                            <li>Порядковый номер нормофактора, наименование, единица измерения;\r\n                            </li>\r\n                            <li>Формирование справочника технико-экономических показателей (добавление,\r\n                                редактирование, удаление);\r\n                            </li>\r\n                            <li>Формирование технико-экономических показателей на планируемый год/\r\n                                создание ведомости показателей филиала (добавление, редактирование, удаление).\r\n                            </li>\r\n                        </ul>\r\n                    </div>}\r\n                    {selected[0] === '0-0-1' && <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\r\n                        <p style={{marginBottom: 15, alignSelf: 'start'}}>Основной функцией пользователя с ролью «Ответственный за ввод данных в СП (Филиал)» является заполнение технико-экономических показателей на планируемый год, необходимых для проведения расчетов нормативной численности структурного подразделения..</p>\r\n                        <p style={{marginBottom: 15, alignSelf: 'start'}}>1.\tВ меню программы выбрать раздел «Записи ТЭП».</p>\r\n                        <p style={{marginBottom: 15}}>2.\tВ созданной ведомости заполнить поля значений на планируемый год, при расхождении с фактическими показателями предыдущего года добавить обоснование изменений филиала и нажать кнопку «Сохранить».</p>\r\n                        <Image width={650} height={430} src={chapter002}/>\r\n                        <p style={{marginBottom: 15, marginTop: 15}}>3.\tПосле заполнения всех показателей филиала отправить на согласование ответственному в администрации/подразделении при администрации (Куратор) - нажать кнопку «На согласование».</p>\r\n                    </div>}\r\n                    {selected[0] === '0-0-2' && <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\r\n                        <p style={{marginBottom: 15, alignSelf: 'start'}}>Основной функцией пользователя с ролью «Ответственный за согласование данных в администрации и подразделении при администрации (Куратор)» является проверка правильности заполнения и согласование плановых технико-экономических показателей на планируемый год, необходимых для проведения расчетов нормативной численности структурного подразделения.</p>\r\n                        <p style={{marginBottom: 15, alignSelf: 'start'}}>1.\tВ меню программы выбрать раздел «Записи ТЭП» - выбрать нужный филиал.</p>\r\n                        <p style={{marginBottom: 15}}>2.\tВ открывшемся окне проверить правильность заполнения полей плановых значений и нажать кнопку «Согласовать». Если в отчете присутствуют данные, требующие корректировки, нажать кнопку «Отклонить», тем самым направив отчет на доработку в филиал.</p>\r\n                        <p style={{marginBottom: 15}}>Согласование/отклонение возможно всех показателей по Куратору или при необходимости по каждому в отдельности.</p>\r\n                        <Image width={700} height={410} src={chapter003_1}/>\r\n                        <p style={{marginBottom: 15, marginTop: 15}}>После согласования информации структурным подразделением по показателю присваивается статус «Согласовано»</p>\r\n                        <Image width={700} height={200} src={chapter003_2}/>\r\n                    </div>}\r\n                    {selected[0] === '0-0-3' && <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\r\n                        <p style={{marginBottom: 15, alignSelf: 'start'}}>\r\n                            Основной функцией пользователя с ролью «Администратор» является администрирование пользователей АРМ:\r\n                            <ul style={{paddingLeft: 20}}>\r\n                                <li>Создание/редактирование пользователей;</li>\r\n                                <li>Создание/редактирование ответственного подразделения (Куратор);</li>\r\n                                <li>Установление периода заполнения показателей;</li>\r\n                            </ul>\r\n                        </p>\r\n                    </div>}\r\n                    {selected[0] === '0-0-3-0' && <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\r\n                        <p style={{marginBottom: 15, alignSelf: 'start'}}>Порядок добавления пользователей:</p>\r\n                        <p style={{marginBottom: 15, alignSelf: 'start'}}>1.\tВ меню программы выбрать раздел «Пользователи» - нажать кнопку «Добавить пользователя».</p>\r\n                        <p style={{marginBottom: 15}}>2.\tВ созданной ведомости заполнить поля значений на планируемый год, при расхождении с фактическими показателями предыдущего года добавить обоснование изменений филиала и нажать кнопку «Сохранить».</p>\r\n                        <Image width={650} height={510} src={chapter0030}/>\r\n                        <p style={{marginBottom: 15, marginTop: 15, alignSelf: 'start'}}>3.\tВ открывшемся разделе добавить:</p>\r\n                        <ul style={{paddingLeft: 20}}>\r\n                            <li>Данные пользователя;</li>\r\n                            <li>Филиал – один или несколько филиалов, доступ к которым необходим данному пользователю;</li>\r\n                            <li>Роль - одну или несколько ролей, необходимые данному пользователю;</li>\r\n                            <li>Подразделение присваивается пользователю в разделе «Подразделения»;</li>\r\n                        </ul>\r\n                    </div>}\r\n                    {selected[0] === '0-0-3-1' && <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\r\n                        <p style={{marginBottom: 15, alignSelf: 'start'}}>Порядок добавления ответственного подразделения:</p>\r\n                        <p style={{marginBottom: 15, alignSelf: 'start'}}>1.\tВ меню программы выбрать раздел «Подразделения» - нажать кнопку «Добавить подразделение».</p>\r\n                        <Image width={650} height={410} src={chapter0031}/>\r\n                        <p style={{marginBottom: 15, marginTop: 15, alignSelf: 'start'}}>2.\tВ открывшемся разделе добавить ответственное подразделение администрации/ подразделение при администрации. Выбрать пользователей данного структурного подразделения, назначенного за согласование технико-экономических показателей.</p>\r\n                    </div>}\r\n                    {selected[0] === '0-0-3-2' && <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\r\n                        <p style={{marginBottom: 15, alignSelf: 'start'}}>В меню программы выбрать раздел «Планируемый год» - установить период заполнения показателей</p>\r\n                        <Image width={600} height={200} src={chapter0032}/>\r\n                    </div>}\r\n                    {selected[0] === '0-0-4-0' && <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\r\n                        <p style={{marginBottom: 15, alignSelf: 'start'}}>Данная функция предназначена для формирования сводных данных ответственного подразделения (Куратор) в разрезе по всем филиалам. </p>\r\n                        <p style={{marginBottom: 15, alignSelf: 'start'}}>В меню программы выбрать раздел «Отчеты» - «Сводный», выбрать ответственное подразделение (Куратор) и период формирования отчета. Нажать кнопку «Сформировать».</p>\r\n                        <Image width={750} height={330} src={chapter0040}/>\r\n                    </div>}\r\n                    {selected[0] === '0-0-4-1' && <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\r\n                        <p style={{marginBottom: 15, alignSelf: 'start'}}>Данная функция предназначена для информирования пользователей процесса формирования технико-экономических показателей.</p>\r\n                        <p style={{marginBottom: 15, alignSelf: 'start'}}>В меню программы выбрать раздел «Отчеты» - «О заполнении», выбрать период формирования отчета и нажать кнопку «Сформировать».</p>\r\n                        <Image width={750} height={330} src={chapter0041}/>\r\n                    </div>}\r\n                    {selected[0] === '0-0-4-2' && <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\r\n                        <p style={{marginBottom: 15, alignSelf: 'start'}}>Данная функция предназначена анализа технико-экономических показателей филиала в динамике с 2018 года.</p>\r\n                        <p style={{marginBottom: 15, alignSelf: 'start'}}>В меню программы выбрать раздел «Отчеты» - «Динамика ТЭП» и нажать кнопку «Сформировать».</p>\r\n                        <Image width={750} height={330} src={chapter0042}/>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {useEffect, useRef, useState} from 'react';\r\nimport {Button, message, Select, Table, Tag, Tooltip, Typography} from 'antd';\r\nimport type {ColumnsType} from 'antd/es/table';\r\nimport {blue} from '@ant-design/colors';\r\nimport {FileExcelOutlined, SettingOutlined, CopyOutlined} from \"@ant-design/icons\";\r\nimport {CellSize, GroupedColumnReport1Grid} from \"../../ENUMS\";\r\n// @ts-ignore\r\nimport Highlighter from \"react-highlight-words\"\r\nimport \"../../App.css\";\r\nimport {IReport4, reportAPI} from \"../../services/ReportService\";\r\nimport {IFilial} from \"../../models/IFilial\";\r\nimport {useAppSelector} from \"../../hooks/redux\";\r\nimport {BaseGrid} from \"../../components/BaseGrid\";\r\nimport {departmentAPI} from \"../../services/DepartmentService\";\r\nimport {IDepartment} from \"../../models/IDepartment\";\r\nimport {GridSettingsModal} from \"../../components/GridSettingsModal\";\r\nimport {BeforeReportDownloadModal} from \"../../components/BeforeReportDownloadModal\";\r\nimport {host, port, secure} from \"../../config/config\";\r\n//import {DocumentEditor} from \"@onlyoffice/document-editor-react\";\r\n\r\nconst {Text, Title} = Typography;\r\n\r\ninterface ListItem {\r\n    text: string;\r\n    value: string;\r\n}\r\n\r\ninterface Grouped {\r\n    isGrouped: boolean;\r\n    column: GroupedColumnReport1Grid;\r\n}\r\n\r\ninterface DataType extends IReport4 {\r\n    key: React.Key;\r\n}\r\n\r\nfunction getUniqDictsList(data: DataType[] | undefined, field: string): ListItem[] {\r\n    if (data) {\r\n        let result: ListItem[] = []\r\n        data.forEach((record: any) => {\r\n            if (!result.find((resRecord: any) => (resRecord.text === record[field]))) {\r\n                result.push({\r\n                    text: record[field],\r\n                    value: record[field]\r\n                })\r\n            }\r\n        })\r\n        return result\r\n    } else return [];\r\n}\r\n\r\nconst getGroupedColumns = (columns: any, col: GroupedColumnReport1Grid) => {\r\n    let first = columns.find((column: any) => column.key == col);\r\n    let other = columns.filter((column: any) => !(column.key === col));\r\n    other.unshift(first);\r\n    return other;\r\n}\r\n\r\nexport const ConsolidatedByFilialReportModule: React.FC = () => {\r\n    // Create Toasts context\r\n    const [messageApi, contextHolder] = message.useMessage();\r\n    const successUpdatedSettings = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: 'Настройки обновлены',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const successLoadReport = () => {\r\n        messageApi.open({\r\n            type: 'success',\r\n            content: 'Записи загружены',\r\n            duration: 1,\r\n        });\r\n    }\r\n    const warningLoadReport = () => {\r\n        messageApi.open({\r\n            type: 'warning',\r\n            content: 'Отчёт начал формироваться',\r\n            duration: 4,\r\n        });\r\n    }\r\n    const errorLoadDepartments = () => {\r\n        messageApi.open({\r\n            type: 'error',\r\n            content: 'Ошибка загрузки',\r\n            duration: 1,\r\n        });\r\n    }\r\n    //End of toasts\r\n    // Requests\r\n    const [getRecords, {\r\n        data: records,\r\n        error: getRecordsError,\r\n        isLoading: getRecordsLoading\r\n    }] = reportAPI.useGetReport4Mutation();\r\n    // End of requests\r\n    const generalStore = useAppSelector(store => store.userReducer);\r\n    const [years, setYears] = useState<{ value: string, label: string }[]>([]);\r\n    const [columns, setColumns] = useState<ColumnsType<DataType>>([]);\r\n    const [gridData, setGridData] = useState<DataType[]>();\r\n    const [visibleBeforeDownloadModal, setVisibleBeforeDownloadModal] = useState<boolean>(false);\r\n    const [visibleSettings, setVisibleSettings] = useState<boolean>(false);\r\n    const [showHeader, setShowHeader] = useState<boolean>(localStorage.getItem('tableHeader-consolidatedReport') ? localStorage.getItem('tableHeader-consolidatedReport') === 'true' : true);\r\n    const [showCellBorders, setShowBorders] = useState<boolean>(localStorage.getItem('tableBorders-consolidatedReport') ? localStorage.getItem('tableBorders-consolidatedReport') === 'true' : true);\r\n    const [showPreviewText, setShowPreviewText] = useState<boolean>(localStorage.getItem('tablePreviewText-consolidatedReport') ? localStorage.getItem('tablePreviewText-consolidatedReport') === 'true' : true);\r\n    const [pinNfNumberColumn, setPinNfNumberColumn] = useState<boolean>(localStorage.getItem('pinNfNumber-consolidatedReport') ? localStorage.getItem('pinNfNumber-consolidatedReport') === 'true' : true);\r\n    const [pinNfColumn, setPinNfColumn] = useState<boolean>(localStorage.getItem('pinNfName-consolidatedReport') ? localStorage.getItem('pinNfName-consolidatedReport') === 'true' : true);\r\n    const [pinDimensionColumn, setPinDimensionColumn] = useState<boolean>(localStorage.getItem('pinDimension-consolidatedReport') ? localStorage.getItem('pinDimension-consolidatedReport') === 'true' : true);\r\n    const [selectedFilial, setSelectedFilial] = useState<string>(generalStore?.userInfo?.filials[0]?.name ?? '');\r\n    const [selectedYear, setSelectedYear] = useState<string>(generalStore.settings.year);\r\n    const numberColumnHeader = useRef(null);\r\n    const [counter, setCounter] = useState(0);\r\n    useEffect(() => {\r\n        if (numberColumnHeader && gridData && counter < 1)\r\n            if (numberColumnHeader.current) {\r\n                setCounter(prev => prev += 1)\r\n                //@ts-ignore\r\n                numberColumnHeader.current.click()\r\n            }\r\n    }, [columns, gridData])\r\n    useEffect(() => {\r\n        if (records) {\r\n            successLoadReport();\r\n            let gridData = records.map((record: IReport4, key: number) => {\r\n                let result = {...record, key};\r\n                record.departments.map((department: any) => {\r\n                    // @ts-ignore\r\n                    result[department.name] = department.value\r\n                })\r\n                return result;\r\n            });\r\n            setGridData(gridData);\r\n            setColumns([\r\n                {\r\n                    title: () => {\r\n                        return <Text ref={numberColumnHeader} className=\"dragHandler\"\r\n                                     style={{color: blue.primary, fontSize: '11px', overflow: 'hidden'}}>№\r\n                            нормофактора</Text>\r\n                    },\r\n                    render(text, record) {\r\n                        return {\r\n                            children: <div style={{fontSize: 12, color: 'black', height: '77px'}}>\r\n                                <div>{text}</div>\r\n                            </div>\r\n                        };\r\n                    },\r\n                    dataIndex: 'nfNumber',\r\n                    key: 'nfNumber',\r\n                    width: 110,\r\n                    defaultSortOrder: 'ascend',\r\n                    sorter: (a: any, b: any) => a.nfNumber - b.nfNumber,\r\n                    sortDirections: ['descend', 'ascend'],\r\n                    fixed: pinNfNumberColumn ? 'left' : undefined,\r\n                },\r\n                {\r\n                    title: () => {\r\n                        return <Text className=\"dragHandler\"\r\n                                     style={{\r\n                                         color: blue.primary,\r\n                                         fontSize: '11px',\r\n                                         maxHeight: 100,\r\n                                         overflow: 'hidden'\r\n                                     }}>Наименование нормофактора (ТЭП)</Text>\r\n                    },\r\n                    render(text, record) {\r\n                        return {\r\n                            props: {\r\n                                style: {color: 'red'}\r\n                            },\r\n                            children: <div style={text?.length > 70 ? {\r\n                                fontSize: 12,\r\n                                color: 'black',\r\n                                height: '77px',\r\n                                overflowY: 'scroll'\r\n                            } : {fontSize: 12, color: 'black', height: '77px'}}>\r\n                                {(showPreviewText && text?.length > 20) ?\r\n                                    <Tooltip placement={'left'} title={text}>\r\n                                        {text}\r\n                                    </Tooltip> :\r\n                                    <div>{text}</div>\r\n                                }\r\n                            </div>\r\n                        };\r\n                    },\r\n                    fixed: pinNfColumn ? 'left' : undefined,\r\n                    dataIndex: 'nf',\r\n                    key: 'nf',\r\n                    width: 200,\r\n                    filters: getUniqDictsList(gridData, 'nf'),\r\n                    onFilter: (value: any, record: any) => {\r\n                        return record.nf.indexOf(value) === 0\r\n                    },\r\n                    sorter: (a: any, b: any) => a.nf.length - b.nf.length,\r\n                    sortDirections: ['descend', 'ascend'],\r\n                    filterSearch: true,\r\n                },\r\n                {\r\n                    title: () => {\r\n                        return <Text className=\"dragHandler\"\r\n                                     style={{\r\n                                         color: blue.primary,\r\n                                         fontSize: '11px',\r\n                                         maxHeight: 100,\r\n                                         overflow: 'hidden'\r\n                                     }}>Ед. изм.</Text>\r\n                    },\r\n                    render(text, record) {\r\n                        return {\r\n                            props: {\r\n                                style: {color: 'red'}\r\n                            },\r\n                            children: <div style={{fontSize: 12, color: 'black', height: '77px'}}>\r\n                                <div>{text}</div>\r\n                            </div>\r\n                        };\r\n                    },\r\n                    dataIndex: 'dimension',\r\n                    key: 'dimension',\r\n                    width: 100,\r\n                    filters: getUniqDictsList(gridData, 'dimension'),\r\n                    onFilter: (value: any, record: any) => {\r\n                        return record.dimension.indexOf(value) === 0\r\n                    },\r\n                    filterSearch: true,\r\n                    fixed: pinDimensionColumn ? 'left' : undefined,\r\n                },\r\n                {\r\n                    title: () => {\r\n                        return <Text\r\n                            style={{color: blue.primary, fontSize: '11px', overflow: 'hidden'}}>Подразделения</Text>\r\n                    },\r\n                    children: generalStore?.departments?.map((department: IDepartment) => {\r\n                        return {\r\n                            title: () => {\r\n                                return <Text style={{\r\n                                    margin: 0,\r\n                                    color: blue.primary,\r\n                                    fontSize: '11px',\r\n                                    width: '100%',\r\n                                    height: 100,\r\n                                    overflow: 'hidden',\r\n                                    writingMode: 'vertical-rl',\r\n                                    transform: 'rotate(-180deg)',\r\n                                    transformOrigin: \"center\"\r\n                                }}>{department.name}</Text>\r\n                            },\r\n                            render(srcText: any, record: any) {\r\n                                const text = srcText.split(\";\")\r\n                                return {\r\n                                    children: <div>\r\n                                        {text.length > 1 ?\r\n                                            <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'center',\r\n                                                alignItems: 'center',\r\n                                                flexDirection: 'column',\r\n                                                fontSize: 12,\r\n                                                color: 'black',\r\n                                                height: '77px',\r\n                                                background: '#ff7875',\r\n                                                boxShadow: '1px 2px 9px #ff7875'\r\n                                            }}>\r\n                                                <p>{text[0]}</p>\r\n                                                <p>{text[1]}</p>\r\n                                                <p>{text[2]}</p>\r\n                                                <p>{text[3]}</p>\r\n                                            </div>\r\n                                            :\r\n                                            <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'center',\r\n                                                alignItems: 'center',\r\n                                                fontSize: 12,\r\n                                                color: 'black',\r\n                                                height: '77px',\r\n                                            }}>\r\n                                                <div>{text}</div>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                };\r\n                            },\r\n                            dataIndex: department.name,\r\n                            key: department.name,\r\n                        }\r\n                    }),\r\n                    width: 2000,\r\n                    render(text, record) {\r\n                        return {\r\n                            children: <div style={{fontSize: 12, color: 'black', height: '77px'}}>\r\n                                <div>{text}</div>\r\n                            </div>\r\n                        };\r\n                    },\r\n                },\r\n            ]);\r\n        }\r\n    }, [records]);\r\n    useEffect(() => {\r\n        if (getRecordsError) {\r\n            errorLoadDepartments();\r\n        }\r\n    }, [getRecordsError]);\r\n    useEffect(() => {\r\n        let years: { label: string, value: string }[] = [];\r\n        for (let year = 2018; year <= Number(generalStore.settings.year); year++) {\r\n            years.push({label: String(year), value: String(year)})\r\n        }\r\n        setYears(years);\r\n    }, []);\r\n    useEffect(() => {\r\n        if (records) {\r\n            setColumns([\r\n                {\r\n                    title: () => {\r\n                        return <Text className=\"dragHandler\"\r\n                                     style={{color: blue.primary, fontSize: '11px', overflow: 'hidden'}}>№\r\n                            нормофактора</Text>\r\n                    },\r\n                    render(text, record) {\r\n                        return {\r\n                            props: {\r\n                                style: {color: 'red'}\r\n                            },\r\n                            children: <div style={{fontSize: 12, color: 'black', height: '77px'}}>\r\n                                <div>{text}</div>\r\n                            </div>\r\n                        };\r\n                    },\r\n                    dataIndex: 'nfNumber',\r\n                    key: 'nfNumber',\r\n                    width: 110,\r\n                    defaultSortOrder: 'ascend',\r\n                    sorter: (a: any, b: any) => a.nfNumber - b.nfNumber,\r\n                    sortDirections: ['descend', 'ascend'],\r\n                    fixed: pinNfNumberColumn ? 'left' : undefined,\r\n                },\r\n                {\r\n                    title: () => {\r\n                        return <Text className=\"dragHandler\"\r\n                                     style={{\r\n                                         color: blue.primary,\r\n                                         fontSize: '11px',\r\n                                         maxHeight: 100,\r\n                                         overflow: 'hidden'\r\n                                     }}>Наименование нормофактора (ТЭП)</Text>\r\n                    },\r\n                    render(text, record) {\r\n                        return {\r\n                            props: {\r\n                                style: {color: 'red'}\r\n                            },\r\n                            children: <div style={text?.length > 70 ? {\r\n                                fontSize: 12,\r\n                                color: 'black',\r\n                                height: '77px',\r\n                                overflowY: 'scroll'\r\n                            } : {fontSize: 12, color: 'black', height: '77px'}}>\r\n                                {(showPreviewText && text?.length > 20) ?\r\n                                    <Tooltip placement={'left'} title={text}>\r\n                                        {text}\r\n                                    </Tooltip> :\r\n                                    <div>{text}</div>\r\n                                }\r\n                            </div>\r\n                        };\r\n                    },\r\n                    fixed: pinNfColumn ? 'left' : undefined,\r\n                    dataIndex: 'nf',\r\n                    key: 'nf',\r\n                    width: 200,\r\n                    filters: getUniqDictsList(gridData, 'nf'),\r\n                    onFilter: (value: any, record: any) => {\r\n                        return record.nf.indexOf(value) === 0\r\n                    },\r\n                    sorter: (a: any, b: any) => a.nf.length - b.nf.length,\r\n                    sortDirections: ['descend', 'ascend'],\r\n                    filterSearch: true,\r\n                },\r\n                {\r\n                    title: () => {\r\n                        return <Text className=\"dragHandler\"\r\n                                     style={{\r\n                                         color: blue.primary,\r\n                                         fontSize: '11px',\r\n                                         maxHeight: 100,\r\n                                         overflow: 'hidden'\r\n                                     }}>Ед. изм.</Text>\r\n                    },\r\n                    render(text, record) {\r\n                        return {\r\n                            props: {\r\n                                style: {color: 'red'}\r\n                            },\r\n                            children: <div style={{fontSize: 12, color: 'black', height: '77px'}}>\r\n                                <div>{text}</div>\r\n                            </div>\r\n                        };\r\n                    },\r\n                    dataIndex: 'dimension',\r\n                    key: 'dimension',\r\n                    width: 100,\r\n                    filters: getUniqDictsList(gridData, 'dimension'),\r\n                    onFilter: (value: any, record: any) => {\r\n                        return record.dimension.indexOf(value) === 0\r\n                    },\r\n                    filterSearch: true,\r\n                    fixed: pinDimensionColumn ? 'left' : undefined,\r\n                },\r\n                {\r\n                    title: () => {\r\n                        return <Text\r\n                            style={{color: blue.primary, fontSize: '11px', overflow: 'hidden'}}>Подразделения</Text>\r\n                    },\r\n                    // children: records[0]?.filials?.map((filial:{name:string, value:string})=>({\r\n                    children: generalStore?.filials?.map((filial: IFilial) => {\r\n                        return {\r\n                            title: () => {\r\n                                return <Text style={{\r\n                                    margin: 0,\r\n                                    color: blue.primary,\r\n                                    fontSize: '11px',\r\n                                    width: 40,\r\n                                    height: 100,\r\n                                    overflow: 'hidden',\r\n                                    writingMode: 'vertical-lr',\r\n                                    transform: 'rotate(-180deg)',\r\n                                    transformOrigin: \"center\"\r\n                                }}>{filial.name}</Text>\r\n                            },\r\n                            render(srcText, record) {\r\n                                const text = srcText.split(\";\")\r\n                                return {\r\n                                    children: <div>\r\n                                        {text.length > 1 ?\r\n                                            <Tooltip placement={'left'} title={() => {\r\n                                                let dicts = record.dict.split('&');\r\n                                                return `${dicts[0]}\\n${dicts[1]}`;\r\n                                            }\r\n                                            }>\r\n                                                <div style={{\r\n                                                    display: 'flex',\r\n                                                    justifyContent: 'center',\r\n                                                    alignItems: 'center',\r\n                                                    flexDirection: 'column',\r\n                                                    fontSize: 12,\r\n                                                    color: 'black',\r\n                                                    height: '77px',\r\n                                                    background: '#ff7875',\r\n                                                    boxShadow: '1px 2px 9px #ff7875'\r\n                                                }}>\r\n                                                    <p>{text[0]}</p>\r\n                                                    <p>{text[1]}</p>\r\n                                                    <p>{text[2]}</p>\r\n                                                    <p>{text[3]}</p>\r\n                                                </div>\r\n                                            </Tooltip>\r\n                                            :\r\n                                            <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'center',\r\n                                                alignItems: 'center',\r\n                                                fontSize: 12,\r\n                                                color: 'black',\r\n                                                height: '77px',\r\n                                            }}>\r\n                                                <div>{text}</div>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                };\r\n                            },\r\n                            dataIndex: filial.name,\r\n                            key: filial.name,\r\n                        }\r\n                    }),\r\n                    width: 2000,\r\n                    render(text, record) {\r\n                        return {\r\n                            props: {\r\n                                style: {color: 'red'}\r\n                            },\r\n                            children: <div style={{fontSize: 12, color: 'black', height: '77px'}}>\r\n                                <div>{text}</div>\r\n                            </div>\r\n                        };\r\n                    },\r\n                },\r\n            ]);\r\n        }\r\n    }, [pinDimensionColumn, pinNfNumberColumn, pinNfColumn]);\r\n    const handleUpdateFilial = (filial: string) => {\r\n        setSelectedFilial(filial);\r\n    }\r\n    const handleUpdateYear = (value: string) => {\r\n        setSelectedYear(value);\r\n    }\r\n\r\n    return (\r\n        <div style={{height: window.innerHeight - 140, paddingTop: '10px'}}>\r\n            {contextHolder}\r\n            <GridSettingsModal\r\n                moduleName={'consolidatedReport'}\r\n                successUpdatedSettings={successUpdatedSettings}\r\n                visible={visibleSettings}\r\n                setVisible={setVisibleSettings}\r\n                showBorders={showCellBorders}\r\n                setShowBorders={setShowBorders}\r\n                showHeader={showHeader}\r\n                setShowHeader={setShowHeader}\r\n                previewText={showPreviewText}\r\n                setPreviewText={setShowPreviewText}\r\n                fixedNfNumberColumn={pinNfNumberColumn}\r\n                setFixedNfNumberColumn={setPinNfNumberColumn}\r\n                fixedNfColumn={pinNfColumn}\r\n                setFixedNfColumn={setPinNfColumn}\r\n                fixedDimensionColumn={pinDimensionColumn}\r\n                setFixedDimensionColumn={setPinDimensionColumn}\r\n            />\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                marginLeft: '15px',\r\n                marginRight: '15px',\r\n                marginBottom: '10px'\r\n            }}>\r\n                <div style={{display: 'flex'}}>\r\n                    <Select\r\n                        disabled={getRecordsLoading}\r\n                        defaultValue={selectedFilial}\r\n                        style={{width: '290px', marginRight: '15px'}}\r\n                        onChange={handleUpdateFilial}\r\n                        options={generalStore?.userInfo?.filials.map((filial: IFilial) => ({\r\n                            value: filial.name,\r\n                            label: filial.name\r\n                        }))}\r\n                    />\r\n                    <Select\r\n                        disabled={getRecordsLoading}\r\n                        defaultValue={selectedYear}\r\n                        style={{width: '190px'}}\r\n                        onChange={handleUpdateYear}\r\n                        options={years}\r\n                    />\r\n                    <Button disabled={getRecordsLoading} style={{marginLeft: 15}} onClick={() => {\r\n                        getRecords({filial: selectedFilial, year: selectedYear})\r\n                    }}>Сформировать</Button>\r\n                </div>\r\n                <div>\r\n                    <Tooltip placement={'leftTop'} title={'Скачать отчёт'}>\r\n                        <Button style={{marginRight: 10}} className='settingsButton' icon={<FileExcelOutlined/>}\r\n                                shape={'circle'} onClick={() => {\r\n                            warningLoadReport();\r\n                            let tmpButton = document.createElement('a')\r\n                            tmpButton.href = `${secure}://${host}:${port}/api/report/consolidatedReportByFilial?filial=${selectedFilial}&year=${selectedYear}`\r\n                            tmpButton.click();\r\n                        }}/>\r\n                    </Tooltip>\r\n                    <Tooltip placement={'leftTop'} title={'Настройки таблицы'}>\r\n                        <Button className='settingsButton' icon={<SettingOutlined/>} shape={'circle'}\r\n                                onClick={() => setVisibleSettings(true)}/>\r\n                    </Tooltip>\r\n                </div>\r\n            </div>\r\n\r\n            <BaseGrid\r\n                width={2500}\r\n                bordered={showCellBorders}\r\n                loading={getRecordsLoading}\r\n                showHeader={showHeader}\r\n                columns={columns}\r\n                dataSource={gridData}\r\n                pagination={{position: [\"bottomRight\"], defaultPageSize: 9}}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, {useState} from \"react\";\r\nimport {\r\n    DesktopOutlined,\r\n    TeamOutlined,\r\n    DatabaseOutlined,\r\n    BarsOutlined,\r\n    FileExcelOutlined,\r\n    InfoCircleOutlined\r\n} from \"@ant-design/icons/\";\r\nimport {MenuProps, Space, Spin, Typography} from \"antd\";\r\nimport {Breadcrumb, Layout, Menu, theme} from \"antd\";\r\nimport {userAPI} from \"../services/UserService\";\r\nimport {grey} from \"@ant-design/colors\";\r\nimport {useEffect} from \"react\";\r\nimport {useTimeout} from \"../hooks/useTimeout\";\r\nimport {TepModule} from \"../modules/teps/TepModule\";\r\nimport \"../App.css\";\r\nimport {useAppDispatch, useAppSelector} from \"../hooks/redux\";\r\nimport {setFilials, setDepartments, setRoles, setSettings, setStatuses, setUserInfo} from \"../store/reducers/GeneralSlice\";\r\nimport {DictModule} from \"../modules/dicts/DictModule\";\r\nimport {UserModule} from \"../modules/administration/UserModule\";\r\nimport {DepartmentModule} from \"../modules/administration/DepartmentModule\";\r\nimport {ConsolidatedByStructureReportModule} from \"../modules/reports/ConsolidatedByStructureReportModule\";\r\nimport {AboutFiilingReportModule} from \"../modules/reports/AboutFiilingReportModule\";\r\nimport {TEPDynamicReportModule} from \"../modules/reports/TEPDynamicReportModule\";\r\nimport {filialAPI} from \"../services/FilialService\";\r\nimport {PlanYearModule} from \"../modules/administration/PlanYearModule\";\r\nimport {InfoModule} from \"../modules/info/InfoModule\";\r\nimport {statusAPI} from \"../services/StatusService\";\r\nimport {roleAPI} from \"../services/RoleService\";\r\nimport {ConsolidatedByFilialReportModule} from \"../modules/reports/ConsolidatedByFilialReportModule\";\r\nimport {departmentAPI} from \"../services/DepartmentService\";\r\n\r\nconst {Title} = Typography;\r\nconst {Content, Sider} = Layout;\r\n\r\ntype MenuItem = Required<MenuProps>[\"items\"][number];\r\n\r\nconst getItem = (\r\n    label: React.ReactNode,\r\n    key: React.Key,\r\n    icon?: React.ReactNode,\r\n    children?: MenuItem[]\r\n): MenuItem => {\r\n    return {\r\n        key,\r\n        icon,\r\n        children,\r\n        label,\r\n    } as MenuItem;\r\n}\r\n\r\nexport const MainScreen: React.FC = () => {\r\n    const generalStore = useAppSelector(store => store.userReducer);\r\n    const dispatch = useAppDispatch();\r\n    const {data: user, error: errorUser, isLoading: isLoadingUser, refetch: refetchUser} = userAPI.useGetUserQuery();\r\n    const {\r\n        data: filials,\r\n    } = filialAPI.useGetFilialsQuery();\r\n    const {\r\n        data: departments,\r\n    } = departmentAPI.useGetDepartmentsQuery();\r\n    const [getStatusesRequest, {\r\n        data: statuses,\r\n    }] = statusAPI.useGetStatusesMutation();\r\n    const [getRolesRequest, {\r\n        data: roles,\r\n    }] = roleAPI.useGetRolesMutation();\r\n    const [menuItems, setMenuItems] = useState<MenuItem[]>();\r\n    const [selectedModule, setSelectedModule] = useState<string[]>([]);\r\n    useEffect(() => {\r\n        if (user) {\r\n            dispatch(setSettings({year: user.year, startPeriod: user.startPeriod, endPeriod: user.endPeriod}))\r\n            let availableModules: MenuItem[] = [];\r\n            user.roles.forEach(role => {\r\n                if (role.code === 0) {\r\n                    availableModules.push(getItem(\"Управление\", \"adm\", <TeamOutlined/>, [\r\n                        getItem(\"Пользователи\", \"users\"),\r\n                        getItem(\"Подразделения\", \"departments\"),\r\n                        getItem(\"Планируемый год\", \"planYear\"),\r\n                    ]));\r\n                    setSelectedModule(['users'])\r\n                }\r\n                if (role.code === 1) {\r\n                    availableModules.push(getItem(\"Сборники\", \"dicts\", <DatabaseOutlined/>));\r\n                    if (!availableModules.find((module: MenuItem) => {\r\n                        if (module)\r\n                            return module.key === 'teps';\r\n                        else return false\r\n                    }))\r\n                        availableModules.push(getItem(\"Записи ТЭП\", \"teps\", <BarsOutlined/>));\r\n                    setSelectedModule(['dicts'])\r\n                }\r\n                if (role.code === 2) {\r\n                    if (!availableModules.find((module: MenuItem) => {\r\n                        if (module)\r\n                            return module.key === 'teps';\r\n                        else return false\r\n                    }))\r\n                        availableModules.push(getItem(\"Записи ТЭП\", \"teps\", <BarsOutlined/>));\r\n\r\n                    setSelectedModule(['teps'])\r\n                }\r\n                if (role.code === 3) {\r\n                    if (!availableModules.find((module: MenuItem) => {\r\n                        if (module) return module.key === 'teps';\r\n                        else return false\r\n                    })) {\r\n                        availableModules.push(getItem(\"Записи ТЭП\", \"teps\", <DesktopOutlined/>));\r\n                    }\r\n                    availableModules.push(getItem(\"Отчёты\", \"reports\", <FileExcelOutlined/>, [\r\n                        getItem(\"Сводный по отделу\", \"reportOne\"),\r\n                        getItem(\"Сводный по филиалу\", \"reportFour\"),\r\n                        getItem(\"О заполнении\", \"reportTwo\"),\r\n                        getItem(\"Динамика ТЭП\", \"reportThree\"),\r\n                    ]));\r\n                    setSelectedModule(['teps'])\r\n                }\r\n                if (role.code === 4) {\r\n                    if (!availableModules.find((module: MenuItem) => {\r\n                        if (module)\r\n                            return module.key === 'teps';\r\n                        else return false\r\n                    }))\r\n                        availableModules.push(getItem(\"Записи ТЭП\", \"teps\", <BarsOutlined/>));\r\n\r\n                    setSelectedModule(['teps'])\r\n                }\r\n            });\r\n            availableModules.push(getItem(\"Справка\", \"info\", <InfoCircleOutlined/>));\r\n            setMenuItems(availableModules)\r\n        }\r\n    }, [user]);\r\n    useEffect(() => {\r\n        if (filials)\r\n            dispatch(setFilials(filials));\r\n    }, [filials])\r\n    useEffect(() => {\r\n        if (departments)\r\n            dispatch(setDepartments(departments));\r\n    }, [departments])\r\n    useEffect(() => {\r\n        getStatusesRequest();\r\n        getRolesRequest();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (statuses) dispatch(setStatuses(statuses))\r\n    }, [statuses])\r\n    useEffect(() => {\r\n        if (roles) dispatch(setRoles(roles))\r\n    }, [roles])\r\n    const [collapsed, setCollapsed] = useState(false);\r\n    const {startRequestTimer, endRequestTimer, tick} = useTimeout();\r\n    const {token: {colorBgContainer}} = theme.useToken();\r\n    useEffect(() => {\r\n        if (errorUser) {\r\n            startRequestTimer();\r\n        }\r\n    }, [errorUser])\r\n    useEffect(() => {\r\n        if (tick > 10) {\r\n            //refetchUser();\r\n            endRequestTimer();\r\n        }\r\n    }, [tick])\r\n    if (isLoadingUser)\r\n        return (\r\n            <div style={{\r\n                width: '100vw',\r\n                height: '100vh',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center'\r\n            }}>\r\n                <Spin size=\"large\"/>\r\n            </div>\r\n        )\r\n    else if (errorUser) {\r\n        return (<Layout style={{minHeight: \"100vh\"}}>\r\n            <Sider\r\n                collapsible\r\n                collapsed={collapsed}\r\n                onCollapse={(value) => setCollapsed(value)}\r\n                style={{position: 'fixed', overflow: 'auto', height: '100vh', left: 0, top: 0, bottom: 0}}\r\n            >\r\n                {!collapsed && <Title level={5} style={{\r\n                    color: grey[0],\r\n                    marginLeft: 15,\r\n                    marginRight: 15,\r\n                    marginTop: 15,\r\n                    textAlign: 'center'\r\n                }}>Ограниченный доступ к системе. Необходимо запросить права.</Title>}\r\n                <Menu\r\n                    theme=\"dark\"\r\n                    defaultSelectedKeys={selectedModule}\r\n                    mode=\"inline\"\r\n                    items={[{\r\n                        key: 'info',\r\n                        icon: <InfoCircleOutlined/>,\r\n                        label: 'Справка',\r\n                    } as MenuItem] as MenuItem[]}\r\n                    onClick={({key, keyPath}) => {\r\n                        setSelectedModule([key])\r\n                    }}\r\n                />\r\n            </Sider>\r\n            <Layout className={collapsed ? 'closeSideMenu site-layout' : 'openSideMenu site-layout'}>\r\n                <Content style={{margin: \"0 6px\"}}>\r\n                    <div\r\n                        style={{\r\n                            padding: 5,\r\n                            height: '100vh',\r\n                            background: colorBgContainer,\r\n                        }}\r\n                    >\r\n                        <InfoModule/>\r\n                    </div>\r\n                </Content>\r\n            </Layout>\r\n        </Layout>)\r\n    } else if (user && selectedModule.length > 0) {\r\n        dispatch(setUserInfo(user));\r\n        return (\r\n            <Layout style={{minHeight: \"100vh\"}}>\r\n                <Sider\r\n                    collapsible\r\n                    collapsed={collapsed}\r\n                    onCollapse={(value) => setCollapsed(value)}\r\n                    style={{position: 'fixed', overflow: 'auto', height: '100vh', left: 0, top: 0, bottom: 0}}\r\n                >\r\n                    {!collapsed && <Title level={5} style={{\r\n                        color: grey[0],\r\n                        marginLeft: 15,\r\n                        marginTop: 15\r\n                    }}>{user?.surname} {`${user?.name ? user?.name[0] : ''}. ${user?.secondName ? user?.secondName[0] : ''}.`}</Title>}\r\n                    <Menu\r\n                        theme=\"dark\"\r\n                        defaultSelectedKeys={selectedModule}\r\n                        mode=\"inline\"\r\n                        items={menuItems}\r\n                        onClick={({key, keyPath}) => {\r\n                            setSelectedModule([key])\r\n                        }}\r\n                    />\r\n                </Sider>\r\n                <Layout className={collapsed ? 'closeSideMenu site-layout' : 'openSideMenu site-layout'}>\r\n                    <Content style={{margin: \"0 6px\"}}>\r\n                        <div\r\n                            style={{\r\n                                padding: 5,\r\n                                height: '100vh',\r\n                                background: colorBgContainer,\r\n                            }}\r\n                        >\r\n                            {selectedModule[0] == 'teps' && <TepModule/>}\r\n                            {selectedModule[0] == 'dicts' && <DictModule/>}\r\n                            {selectedModule[0] == 'users' && <UserModule/>}\r\n                            {selectedModule[0] == 'departments' && <DepartmentModule/>}\r\n                            {selectedModule[0] == 'planYear' && <PlanYearModule/>}\r\n                            {selectedModule[0] == 'reportOne' && <ConsolidatedByStructureReportModule/>}\r\n                            {selectedModule[0] == 'reportTwo' && <AboutFiilingReportModule/>}\r\n                            {selectedModule[0] == 'reportThree' && <TEPDynamicReportModule/>}\r\n                            {selectedModule[0] == 'reportFour' && <ConsolidatedByFilialReportModule/>}\r\n                            {selectedModule[0] == 'info' && <InfoModule/>}\r\n                        </div>\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    } else {\r\n        return (\r\n            <div style={{\r\n                width: '100vw',\r\n                height: '100vh',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center'\r\n            }}>\r\n                <Title level={5}>Произошла ошибка при загрузке</Title>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n","import {BrowserRouter, Route, Routes} from 'react-router-dom'\r\nimport React from \"react\";\r\nimport {MainScreen} from '../Pages/MainScreen';\r\n\r\nexport const Router: React.FC = () => {\r\n    return (<BrowserRouter>\r\n        <Routes>\r\n            <Route\r\n                path='/nil_arm'\r\n                element={<MainScreen/>}\r\n            />\r\n        </Routes>\r\n    </BrowserRouter>)\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {setupStore} from \"./store/store\";\nimport ru from 'antd/locale/ru_RU';\nimport {ConfigProvider} from \"antd\";\nimport {Router} from \"./config/Router\";\nimport {Provider} from \"react-redux\";\nimport \"dayjs/locale/ru\"\nimport dayjs from \"dayjs\"\n\n\ndayjs.locale(\"ru\")\n\nconst store = setupStore();\n\n// @ts-ignore\nReactDOM.render(<Provider store={store}>\n        <ConfigProvider locale={ru}>\n            <Router/>\n        </ConfigProvider>\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}