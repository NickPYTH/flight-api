{"version":3,"sources":["store/reducers/UserSlice.ts","configs/url.config.ts","services/RequestFilialService.ts","services/FilialsService.ts","services/WorkTypesService.ts","services/AirportsService.ts","services/EmployeeResponsibleService.ts","services/FlightFilialService.ts","services/RequestService.ts","services/AircraftModelService.ts","services/FlightTargetService.ts","services/EmpCustomerService.ts","services/FlightPlanService.ts","services/FileStorageService.ts","services/RequestHelicopterService.ts","services/AirlineService.ts","store/store.ts","components/Layout/Header/Navbar.tsx","configs/constants.ts","components/RequestsByFilials/EditRequestByFilials/CreateFlightModal.tsx","components/RequestsByFilials/EditRequestByFilials/UpdateFlightModal.tsx","screens/RequestsByFilials/EditRequestByFilialsScreen.tsx","components/RequestsByFilials/CreateRequestByFilials/CreateFlightModal.tsx","components/RequestsByFilials/CreateRequestByFilials/UpdateFlightModal.tsx","screens/RequestsByFilials/CreateRequestByFilialsScreen.tsx","screens/Requests/AllRequestsScreen.tsx","screens/RequestsByFilials/AllRequestsByFilialsScreen.tsx","components/Requests/FileUploadDnd/FileUploadDND.tsx","components/Requests/EditRequest/UpdateFlightModal.tsx","components/Requests/EditRequest/CreateFlightModal.tsx","components/Requests/EditRequest/HistoryModal.tsx","components/Requests/EditRequest/CreateCostModal.tsx","components/Requests/EditRequest/EditCostModal.tsx","screens/Requests/EditRequestScreen.tsx","components/Requests/CreateRequest/UpdateFlightModal.tsx","components/Requests/CreateRequest/CreateFlightModal.tsx","screens/Requests/CreateRequestScreen.tsx","components/Layout/NotFound.tsx","screens/RequestsByHelicopter/AllRequestsByHelicopterScreen.tsx","screens/RequestsByHelicopter/EditRequestByHelicopterScreen.tsx","configs/Router.tsx","index.tsx"],"names":["userSlice","createSlice","name","initialState","filials","reducers","host","port","secure","requestsByFilialsAPI","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","concat","tagTypes","endpoints","build","getAllByYear","mutation","query","year","url","method","invalidatesTags","getById","id","sendOnConfirm","confirm","decline","create","body","filialsAPI","getAll","get","workTypesAPI","airportsAPI","employeeResponsibleAPI","flightFilialAPI","update","requestAPI","updateDate","getHistory","createCost","updateCost","getCosts","aircraftModelAPI","flightTargetAPI","empCustomerAPI","flightPlanAPI","delete","fileStorageAPI","requestHelicopterAPI","airlinesAPI","rootReducer","combineReducers","_combineReducers","userReducer","_defineProperty","reducer","items","label","key","children","Navbar","props","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","current","setCurrent","_jsx","Menu","onClick","e","selectedKeys","mode","justifyOptions","alignOptions","YEARS","CreateFlightModal","window","location","pathname","split","requestId","_useState3","_useState4","empRespOptions","setEmpRespOptions","_useState5","_useState6","workTypeOptions","setWorkTypeOptions","_useState7","_useState8","airportsOptions","setAirportsOptions","_useState9","_useState10","workTypeModal","setWorkTypeModal","_useState11","_useState12","empRespModal","setEmpRespModal","_useState13","_useState14","flightDateModal","setFlightDateModal","_useState15","_useState16","airportDepartureModal","setAirportDepartureModal","_useState17","_useState18","airportArrivalModal","setAirportArrivalModal","_useState19","_useState20","passengerCountModal","setPassengerCountModal","_useState21","_useState22","cargoWeightMount","setCargoWeightMount","_useState23","_useState24","cargoWeighIn","setCargoWeighIn","_useState25","_useState26","cargoWeightOut","setCargoWeightOut","_flightFilialAPI$useC","useCreateMutation","_flightFilialAPI$useC2","createFlightFilial","_flightFilialAPI$useC3","createdFlightFilialData","data","_filialsAPI$useGetAll","isLoading","isError","useGetAllMutation","_filialsAPI$useGetAll2","getAllFilialsRequest","_filialsAPI$useGetAll3","_workTypesAPI$useGetA","_workTypesAPI$useGetA2","getAllWorkTypesRequest","_workTypesAPI$useGetA3","workTypes","_airportsAPI$useGetAl","_airportsAPI$useGetAl2","getAllAirportsRequest","_airportsAPI$useGetAl3","airports","_employeeResponsibleA","_employeeResponsibleA2","getAllEmployeeResponsibleRequest","_employeeResponsibleA3","employeeResponsible","useEffect","map","emp","value","fio","airport","refresh","closeCreateRouteModalHandler","setVisible","getAirportsValue","searchText","filter","includes","Modal","title","okText","centered","open","visible","onOk","workType","find","respEmp","airportArrival","airportDeparture","undefined","console","log","idRequestFilial","idWorkType","flyDate","format","idAirportArrival","idAirportDeparture","idEmpResp","passengerCount","cargoWeightIn","createRouteHandler","onCancel","width","_jsxs","Flex","gap","style","vertical","AutoComplete","size","options","onSearch","text","placeholder","notFoundContent","onSelect","option","DatePicker","showTime","onChange","InputNumber","min","UpdateFlightModal","rowData","employee","_flightFilialAPI$useU","useUpdateMutation","_flightFilialAPI$useU2","updateFlightFilial","_flightFilialAPI$useU3","updateFlightFilialData","dateTime","closeUpdateRouteModalHandler","setRowData","_airports$find","_airports$find2","_workTypes$find","idRoute","routeId","updateFlightHandler","defaultValue","dayjs","Text","Typography","EditRequestByFilialsScreen","setRequestId","setStatusId","filialId","setFilialId","fileId","setFileId","fileList","setFileList","fileUploading","setFileUploading","gridData","setGridData","selectedRecord","setSelectedRecord","createFlightModalVisible","setCreateFlightModalVisible","updateFlightModalVisible","setUpdateFlightModalVisible","gridRef","useRef","store","Ext","groupers","fields","type","useLocation","propsFile","maxCount","customRequest","formData","FormData","append","file","fetch","then","res","m","uid","JSON","parse","status","percent","message","success","catch","error","finally","beforeUpload","onRemove","redirect","response","result","_requestsByFilialsAPI","useGetByIdMutation","_requestsByFilialsAPI2","getRequestById","_requestsByFilialsAPI3","requestData","_requestsByFilialsAPI4","useSendOnConfirmMutation","_requestsByFilialsAPI5","_requestsByFilialsAPI6","sendOnConfirmData","_requestsByFilialsAPI7","useConfirmMutation","_requestsByFilialsAPI8","_requestsByFilialsAPI9","confirmData","_requestsByFilialsAPI10","useDeclineMutation","_requestsByFilialsAPI11","_requestsByFilialsAPI12","declineData","isFilialsLoading","idRequestFile","nameRequestFile","idFilial","idState","routes","route","_document","_document$body","_document$body$queryS","_document$body$queryS2","length","document","querySelectorAll","cmp","expandAll","_document2","_document2$body","_document2$body$query","_document2$body$query2","sendOnConfirmHandler","confirmHandler","declineHandler","_Fragment","height","innerHeight","justify","center","align","Spin","flexStart","margin","Button","icon","RollbackOutlined","LogoutOutlined","RedoOutlined","nameState","content","footer","_","_ref","OkBtn","CancelBtn","_ref2","_ref3","Divider","Select","disabled","loading","toString","filial","Upload","_objectSpread","UploadOutlined","Empty","image","PRESENTED_IMAGE_SIMPLE","description","Collapse","defaultActiveKey","wrap","isDomReady","ExtTreegroupedgrid","collapse","ref","columnLines","grouped","shadow","groupSummaryPosition","summaryPosition","onChilddoubletap","event","record","columns","dataIndex","groupable","filterType","flex","hidden","xtype","platformConfig","desktop","plugins","groupingpanel","gridfilterbar","prev","workTypeId","employeeId","airportDepartureId","airportArrivalId","stringify","CreateRequestByFilialsScreen","_message$useMessage","useMessage","_message$useMessage2","messageApi","messageContextHolder","selectedFilial","setSelectedFilial","setFile","createRequestByFilial","requestResponse","isCreateRequestByFilialLoading","Tooltip","placement","ghost","request","warning","PlusOutlined","AllRequestsScreen","setData","_requestAPI$useGetAll","useGetAllByYearMutation","_requestAPI$useGetAll2","getAllRequests","_requestAPI$useGetAll3","dataGetAllRequests","isLoadingGetAllRequests","setYear","dateFormat","fontSize","fontWeight","spaceBetween","groupHeaderTpl","AllRequestsByFilialsScreen","getAllRequestsByFilials","dataGetAllRequestByFilials","isLoadingGetAllRequestByFilials","summary","Dragger","FileUploadDND","f","_fileStorageAPI$useGe","_fileStorageAPI$useGe2","getFilesRequest","_fileStorageAPI$useGe3","getFilesData","padding","className","_flightPlanAPI$useUpd","_flightPlanAPI$useUpd2","updateFlightPlan","updateFlightPlanData","_flightPlanAPI$useDel","useDeleteMutation","_flightPlanAPI$useDel2","deleteFlightPlan","_flightPlanAPI$useDel3","deleteFlightPlanData","idFuelPoint","idRequest","deleteFlightHandler","flexEnd","danger","Form","maxWidth","layout","Item","_flightPlanAPI$useCre","_flightPlanAPI$useCre2","createFlightPlan","createdFlightPlanData","HistoryModal","_requestAPI$useGetHis","useGetHistoryMutation","_requestAPI$useGetHis2","getHistoryRequest","_requestAPI$useGetHis3","getRequestHistoryData","isGetHistoryRequestLoading","handleCancel","Table","bordered","pagination","pageSizeOptions","dataSource","CreateCostModal","selectedWorkType","setSelectedWorkType","flightDuration","setFlightDuration","flightCost","setFlightCost","isWorkTypesLoading","_requestAPI$useCreate","useCreateCostMutation","_requestAPI$useCreate2","_requestAPI$useCreate3","createCostData","labelCol","span","wrapperCol","EditCostModal","selectedFilialId","_requestAPI$useUpdate","useUpdateCostMutation","_requestAPI$useUpdate2","updateCostRequest","_requestAPI$useUpdate3","updateCostData","costId","duration","cost","RangePicker","EditRequestScreen","gridFactData","setGridFactData","selectedCostRecord","setSelectedCostRecord","flyDateStart","setFlyDateStart","flyDateFinish","setFlyDateFinish","aircraftModel","setAircraftModel","flightTarget","setFlightTarget","empCustomer","setEmpCustomer","visibleHistoryModal","setVisibleHistoryModal","_useState27","_useState28","_useState29","_useState30","flightDurationOut","setFlightDurationOut","_useState31","_useState32","setCost","_useState33","_useState34","costOut","setCostOut","_useState35","_useState36","roundDigit","setRoundDigit","_useState37","_useState38","visibleAddCostModal","setVisibleAddCostModal","_useState39","_useState40","visibleEditCostModal","setVisibleEditCostModal","factStore","_requestAPI$useGetByI","_requestAPI$useGetByI2","_requestAPI$useGetByI3","_aircraftModelAPI$use","_aircraftModelAPI$use2","getAllAircraftModelRequest","_aircraftModelAPI$use3","aircraftModelData","isAircraftModelLoading","_flightTargetAPI$useG","_flightTargetAPI$useG2","getAllFlightTargetRequest","_flightTargetAPI$useG3","flightTargetData","isFlightTargetLoading","_empCustomerAPI$useGe","_empCustomerAPI$useGe2","getAllEmpCustomerRequest","_empCustomerAPI$useGe3","empCustomerData","useUpdateDateMutation","updateFieldRequest","_objectDestructuringEmpty","_requestAPI$useGetCos","useGetCostsMutation","_requestAPI$useGetCos2","getAllCosts","_requestAPI$useGetCos3","costs","_requestData$cost","_requestData$cost2","_requestData$duration","_requestData$duration2","durationOut","factRoutes","slice","aircraftModelName","airlineName","flightTargetName","empCustomerLastName","empCustomerName","empCustomerSecondName","HistoryOutlined","marginTop","field","dateStart","dateFinish","idContractData","contractName","flightTargetModel","idTarget","empCustomerModel","empLastName","empName","empSecondName","idEmpCustomer","marginLeft","marginBottom","stateName","idFlightFilial","CreateRequestScreen","missingField","msg","createRequest","trim","aircraftModelId","contractDataId","flightTargetId","empCustomerId","NotFound","PRESENTED_IMAGE_DEFAULT","AllRequestsByHelicopterScreen","_requestHelicopterAPI","_requestHelicopterAPI2","_requestHelicopterAPI3","EditRequestsByHelicopterScreen","airline","setAirline","setWorkType","setFlightDate","_airlinesAPI$useGetAl","_airlinesAPI$useGetAl2","getAllAirlinesRequest","_airlinesAPI$useGetAl3","airlines","isAirlinesLoading","airlineId","date","Router","BrowserRouter","Routes","Route","path","element","configureStore","middleware","getDefaultMiddleware","ReactDOM","render","Provider","ConfigProvider","locale","ruRU","getElementById"],"mappings":"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","file":"static/js/main.091dfc46.chunk.js","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\ninterface UserState {\n    filials: any[]\n}\n\nconst initialState: UserState = {\n    filials: []\n}\n\nexport const userSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n\n    }\n})\n\nexport default userSlice.reducer;\n","export const host = 'localhost'\r\n//export const host = 'request-desk.ru/api'\r\nexport const port = '8080'\r\n//export const port = ''\r\nexport const secure = 'http'\r\n//export const secure = 'https'","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\nimport {host, port, secure} from \"../configs/url.config\";\nimport {\n    CreateRequestFilialType,\n    RequestData,\n    RequestRoutesGridType,\n    RequestsByFilialsGridType\n} from \"../screens/RequestsByFilials/RequestsFilials.types\";\n\nexport const requestsByFilialsAPI = createApi({\n    reducerPath: 'requestsByFilials',\n    baseQuery: fetchBaseQuery({\n        baseUrl: `${secure}://${host}:${port}/flight/api/requestFilial`,\n    }),\n    tagTypes: ['RequestsByFilials'],\n    endpoints: (build) => ({\n        getAllByYear: build.mutation<RequestsByFilialsGridType[], number>({\n            query: (year) => ({\n                url: `/getAllByYear?year=${year}`,\n                method: 'GET',\n            }),\n            invalidatesTags: ['RequestsByFilials']\n        }),\n        getById: build.mutation<RequestData, string>({\n            query: (id) => ({\n                url: `/get?id=${id}`,\n                method: 'GET',\n            }),\n            invalidatesTags: ['RequestsByFilials']\n        }),\n        sendOnConfirm: build.mutation<string, string>({\n            query: (id) => ({\n                url: `/sendOnConfirm?flightRequestId=${id}`,\n                method: 'POST',\n            }),\n            invalidatesTags: ['RequestsByFilials']\n        }),\n        confirm: build.mutation<string, string>({\n            query: (id) => ({\n                url: `/confirm?flightRequestId=${id}`,\n                method: 'POST',\n            }),\n            invalidatesTags: ['RequestsByFilials']\n        }),\n        decline: build.mutation<string, string>({\n            query: (id) => ({\n                url: `/decline?flightRequestId=${id}`,\n                method: 'POST',\n            }),\n            invalidatesTags: ['RequestsByFilials']\n        }),\n        create: build.mutation<{id: string}, CreateRequestFilialType>({\n            query: (body) => ({\n                url: `/create`,\n                method: 'POST',\n                body\n            }),\n            invalidatesTags: ['RequestsByFilials']\n        }),\n    })\n});\n","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\r\nimport {host, port, secure} from \"../configs/url.config\";\r\nimport {FilialModel} from \"../models/FilialModel\";\r\n\r\nexport const filialsAPI = createApi({\r\n    reducerPath: 'filialsAPI',\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: `${secure}://${host}:${port}/flight/api/filial`,\r\n    }),\r\n    tagTypes: ['filials'],\r\n    endpoints: (build) => ({\r\n        getAll: build.mutation<FilialModel[], void>({\r\n            query: () => ({\r\n                url: `/getAll`,\r\n                method: 'GET',\r\n            }),\r\n            invalidatesTags: ['filials']\r\n        }),\r\n        get: build.mutation<FilialModel, number>({\r\n            query: (id) => ({\r\n                url: `/get?id=${id}`,\r\n                method: 'GET',\r\n            }),\r\n            invalidatesTags: ['filials']\r\n        }),\r\n    })\r\n});\r\n","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\r\nimport {host, port, secure} from \"../configs/url.config\";\r\nimport {WorkTypeModel} from \"../models/WorkTypeModel\";\r\n\r\nexport const workTypesAPI = createApi({\r\n    reducerPath: 'workTypesAPI',\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: `${secure}://${host}:${port}/flight/api/worktype`,\r\n    }),\r\n    tagTypes: ['workTypes'],\r\n    endpoints: (build) => ({\r\n        getAll: build.mutation<WorkTypeModel[], void>({\r\n            query: () => ({\r\n                url: `/getAll`,\r\n                method: 'GET',\r\n            }),\r\n            invalidatesTags: ['workTypes']\r\n        }),\r\n        get: build.mutation<WorkTypeModel, number>({\r\n            query: (id) => ({\r\n                url: `/get?id=${id}`,\r\n                method: 'GET',\r\n            }),\r\n            invalidatesTags: ['workTypes']\r\n        }),\r\n    })\r\n});\r\n","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\r\nimport {host, port, secure} from \"../configs/url.config\";\r\nimport {WorkTypeModel} from \"../models/WorkTypeModel\";\r\nimport {AirportModel} from \"../models/AirportModel\";\r\n\r\nexport const airportsAPI = createApi({\r\n    reducerPath: 'airportsAPI',\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: `${secure}://${host}:${port}/flight/api/airport`,\r\n    }),\r\n    tagTypes: ['airports'],\r\n    endpoints: (build) => ({\r\n        getAll: build.mutation<AirportModel[], void>({\r\n            query: () => ({\r\n                url: `/getAll`,\r\n                method: 'GET',\r\n            }),\r\n            invalidatesTags: ['airports']\r\n        }),\r\n        get: build.mutation<AirportModel, number>({\r\n            query: (id) => ({\r\n                url: `/get?id=${id}`,\r\n                method: 'GET',\r\n            }),\r\n            invalidatesTags: ['airports']\r\n        }),\r\n    })\r\n});\r\n","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\r\nimport {host, port, secure} from \"../configs/url.config\";\r\nimport {EmployeeResponsibleModel} from \"../models/EmployeeResponsibleModel\";\r\n\r\nexport const employeeResponsibleAPI = createApi({\r\n    reducerPath: 'employeeResponsibleAPI',\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: `${secure}://${host}:${port}/flight/api/employeeResponsible`,\r\n    }),\r\n    tagTypes: ['employeeResponsible'],\r\n    endpoints: (build) => ({\r\n        getAll: build.mutation<EmployeeResponsibleModel[], void>({\r\n            query: () => ({\r\n                url: `/getAll`,\r\n                method: 'GET',\r\n            }),\r\n            invalidatesTags: ['employeeResponsible']\r\n        }),\r\n        get: build.mutation<EmployeeResponsibleModel, number>({\r\n            query: (id) => ({\r\n                url: `/get?id=${id}`,\r\n                method: 'GET',\r\n            }),\r\n            invalidatesTags: ['employeeResponsible']\r\n        }),\r\n    })\r\n});\r\n","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\r\nimport {host, port, secure} from \"../configs/url.config\";\r\nimport {WorkTypeModel} from \"../models/WorkTypeModel\";\r\nimport {AirportModel} from \"../models/AirportModel\";\r\nimport {FlightFilialModel} from \"../models/FlightFilialModel\";\r\n\r\n\r\nexport const flightFilialAPI = createApi({\r\n    reducerPath: 'flightFilialAPI',\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: `${secure}://${host}:${port}/flight/api/flightFilial`,\r\n    }),\r\n    tagTypes: ['flightFilial'],\r\n    endpoints: (build) => ({\r\n        update: build.mutation<FlightFilialModel, FlightFilialModel>({\r\n            query: (body) => ({\r\n                url: `/update`,\r\n                method: 'PATCH',\r\n                body\r\n            }),\r\n            invalidatesTags: ['flightFilial']\r\n        }),\r\n        create: build.mutation<FlightFilialModel, FlightFilialModel>({\r\n            query: (body) => ({\r\n                url: `/create`,\r\n                method: 'POST',\r\n                body\r\n            }),\r\n            invalidatesTags: ['flightFilial']\r\n        }),\r\n    })\r\n});\r\n","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\nimport {host, port, secure} from \"../configs/url.config\";\nimport {\n    CostGridType,\n    CostRequest,\n    RequestData,\n    RequestHistoryGridType,\n    RequestsGridType,\n    UpdateRequest\n} from \"../screens/Requests/Requests.types\";\n\nexport const requestAPI = createApi({\n    reducerPath: 'request',\n    baseQuery: fetchBaseQuery({\n        baseUrl: `${secure}://${host}:${port}/flight/api/request`,\n    }),\n    tagTypes: ['Request'],\n    endpoints: (build) => ({\n        getAllByYear: build.mutation<RequestsGridType[], number>({\n            query: (year) => ({\n                url: `/getAllByYear?year=${year}`,\n                method: 'GET',\n            }),\n            invalidatesTags: ['Request']\n        }),\n        getById: build.mutation<RequestData, string>({\n            query: (id) => ({\n                url: `/get?id=${id}`,\n                method: 'GET',\n            }),\n            invalidatesTags: ['Request']\n        }),\n        updateDate: build.mutation<UpdateRequest, any>({\n            query: (body) => ({\n                url: `/update`,\n                method: 'PUT',\n                body\n            }),\n            invalidatesTags: ['Request']\n        }),\n        getHistory: build.mutation<RequestHistoryGridType[], string>({\n            query: (id) => ({\n                url: `/getHistory?id=${id}`,\n                method: 'GET',\n            }),\n            invalidatesTags: ['Request']\n        }),\n        createCost: build.mutation<string, CostRequest>({\n            query: (body) => ({\n                url: `/createCost`,\n                method: 'POST',\n                body\n            }),\n            invalidatesTags: ['Request']\n        }),\n        updateCost: build.mutation<string, CostRequest>({\n            query: (body) => ({\n                url: `/updateCost`,\n                method: 'POST',\n                body\n            }),\n            invalidatesTags: ['Request']\n        }),\n        getCosts: build.mutation<CostGridType[], string>({\n            query: (id) => ({\n                url: `/getCosts?id=${id}`,\n                method: 'GET',\n            }),\n            invalidatesTags: ['Request']\n        }),\n        create: build.mutation<any, any>({\n            query: (body) => ({\n                url: `/create`,\n                method: 'POST',\n                body\n            }),\n            invalidatesTags: ['Request']\n        }),\n    })\n});\n","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\r\nimport {host, port, secure} from \"../configs/url.config\";\r\nimport {AircraftModel} from \"../models/AircraftModel\";\r\n\r\nexport const aircraftModelAPI = createApi({\r\n    reducerPath: 'aircraftModelAPI',\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: `${secure}://${host}:${port}/flight/api/aircraftModel`,\r\n    }),\r\n    tagTypes: ['aircraftModel'],\r\n    endpoints: (build) => ({\r\n        getAll: build.mutation<AircraftModel[], void>({\r\n            query: () => ({\r\n                url: `/getAll`,\r\n                method: 'GET',\r\n            }),\r\n            invalidatesTags: ['aircraftModel']\r\n        }),\r\n    })\r\n});\r\n","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\r\nimport {host, port, secure} from \"../configs/url.config\";\r\nimport {FlightTargetModel} from \"../models/FlightTargetModel\";\r\n\r\nexport const flightTargetAPI = createApi({\r\n    reducerPath: 'flightTargetAPI',\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: `${secure}://${host}:${port}/flight/api/flightTarget`,\r\n    }),\r\n    tagTypes: ['flightTarget'],\r\n    endpoints: (build) => ({\r\n        getAll: build.mutation<FlightTargetModel[], void>({\r\n            query: () => ({\r\n                url: `/getAll`,\r\n                method: 'GET',\r\n            }),\r\n            invalidatesTags: ['flightTarget']\r\n        }),\r\n    })\r\n});\r\n","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\r\nimport {host, port, secure} from \"../configs/url.config\";\r\nimport {AircraftModel} from \"../models/AircraftModel\";\r\nimport {EmpCustomerModel} from \"../models/EmpCustomerModel\";\r\n\r\nexport const empCustomerAPI = createApi({\r\n    reducerPath: 'empCustomerAPI',\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: `${secure}://${host}:${port}/flight/api/empCustomer`,\r\n    }),\r\n    tagTypes: ['empCustomer'],\r\n    endpoints: (build) => ({\r\n        getAll: build.mutation<EmpCustomerModel[], void>({\r\n            query: () => ({\r\n                url: `/getAll`,\r\n                method: 'GET',\r\n            }),\r\n            invalidatesTags: ['empCustomer']\r\n        }),\r\n    })\r\n});\r\n","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\r\nimport {host, port, secure} from \"../configs/url.config\";\r\nimport {FlightPlanModel} from \"../models/FlightPlanModel\";\r\n\r\n\r\nexport const flightPlanAPI = createApi({\r\n    reducerPath: 'flightPlanAPI',\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: `${secure}://${host}:${port}/flight/api/flightPlan`,\r\n    }),\r\n    tagTypes: ['flightPlan'],\r\n    endpoints: (build) => ({\r\n        update: build.mutation<FlightPlanModel, FlightPlanModel>({\r\n            query: (body) => ({\r\n                url: `/update`,\r\n                method: 'PATCH',\r\n                body\r\n            }),\r\n            invalidatesTags: ['flightPlan']\r\n        }),\r\n        create: build.mutation<FlightPlanModel, FlightPlanModel>({\r\n            query: (body) => ({\r\n                url: `/create`,\r\n                method: 'POST',\r\n                body\r\n            }),\r\n            invalidatesTags: ['flightPlan']\r\n        }),\r\n        delete: build.mutation<number, number>({\r\n            query: (id) => ({\r\n                url: `/delete?id=${id}`,\r\n                method: 'DELETE',\r\n            }),\r\n            invalidatesTags: ['flightPlan']\r\n        }),\r\n    })\r\n});\r\n","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\r\nimport {host, port, secure} from \"../configs/url.config\";\r\nimport {WorkTypeModel} from \"../models/WorkTypeModel\";\r\n\r\nexport const fileStorageAPI = createApi({\r\n    reducerPath: 'fileStorageAPI',\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: `${secure}://${host}:${port}/flight/api/file`,\r\n    }),\r\n    tagTypes: ['fileStorage'],\r\n    endpoints: (build) => ({\r\n        getAll: build.mutation<any, string>({\r\n            query: (id) => ({\r\n                url: `/getFilesByRequest?id=${id}`,\r\n                method: 'GET',\r\n            }),\r\n            invalidatesTags: ['fileStorage']\r\n        }),\r\n    })\r\n});\r\n","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\nimport {host, port, secure} from \"../configs/url.config\";\nimport {RequestsGridType} from \"../screens/RequestsByHelicopter/Requests.types\";\n\nexport const requestHelicopterAPI = createApi({\n    reducerPath: 'requestHelicopter',\n    baseQuery: fetchBaseQuery({\n        baseUrl: `${secure}://${host}:${port}/flight/api/requestHelicopter`,\n    }),\n    tagTypes: ['RequestHelicopter'],\n    endpoints: (build) => ({\n        getAllByYear: build.mutation<RequestsGridType[], number>({\n            query: (year) => ({\n                url: `/getAllByYear?year=${year}`,\n                method: 'GET',\n            }),\n            invalidatesTags: ['RequestHelicopter']\n        }),\n        getById: build.mutation<any, string>({\n            query: (year) => ({\n                url: `/get?id=${year}`,\n                method: 'GET',\n            }),\n            invalidatesTags: ['RequestHelicopter']\n        }),\n    })\n});\n","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\r\nimport {host, port, secure} from \"../configs/url.config\";\r\nimport {AirlineModel} from \"../models/AirlineModel\";\r\n\r\nexport const airlinesAPI = createApi({\r\n    reducerPath: 'airlinesAPI',\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: `${secure}://${host}:${port}/flight/api/airline`,\r\n    }),\r\n    tagTypes: ['airlines'],\r\n    endpoints: (build) => ({\r\n        getAll: build.mutation<AirlineModel[], void>({\r\n            query: () => ({\r\n                url: `/getAll`,\r\n                method: 'GET',\r\n            }),\r\n            invalidatesTags: ['airlines']\r\n        }),\r\n    })\r\n});\r\n","import {combineReducers, configureStore} from \"@reduxjs/toolkit\";\nimport userReducer from './reducers/UserSlice'\nimport {requestsByFilialsAPI} from \"../services/RequestFilialService\";\nimport {filialsAPI} from \"../services/FilialsService\";\nimport {workTypesAPI} from \"../services/WorkTypesService\";\nimport {airportsAPI} from \"../services/AirportsService\";\nimport {employeeResponsibleAPI} from \"../services/EmployeeResponsibleService\";\nimport {flightFilialAPI} from \"../services/FlightFilialService\";\nimport {requestAPI} from \"../services/RequestService\";\nimport {aircraftModelAPI} from \"../services/AircraftModelService\";\nimport {flightTargetAPI} from \"../services/FlightTargetService\";\nimport {empCustomerAPI} from \"../services/EmpCustomerService\";\nimport {flightPlanAPI} from \"../services/FlightPlanService\";\nimport {fileStorageAPI} from \"../services/FileStorageService\";\nimport {requestHelicopterAPI} from \"../services/RequestHelicopterService\";\nimport {airlinesAPI} from \"../services/AirlineService\";\n\nconst rootReducer = combineReducers({\n    userReducer,\n    [requestsByFilialsAPI.reducerPath]: requestsByFilialsAPI.reducer,\n    [filialsAPI.reducerPath]: filialsAPI.reducer,\n    [workTypesAPI.reducerPath]: workTypesAPI.reducer,\n    [airportsAPI.reducerPath]: airportsAPI.reducer,\n    [employeeResponsibleAPI.reducerPath]: employeeResponsibleAPI.reducer,\n    [flightFilialAPI.reducerPath]: flightFilialAPI.reducer,\n    [requestAPI.reducerPath]: requestAPI.reducer,\n    [aircraftModelAPI.reducerPath]: aircraftModelAPI.reducer,\n    [flightTargetAPI.reducerPath]: flightTargetAPI.reducer,\n    [empCustomerAPI.reducerPath]: empCustomerAPI.reducer,\n    [flightPlanAPI.reducerPath]: flightPlanAPI.reducer,\n    [fileStorageAPI.reducerPath]: fileStorageAPI.reducer,\n    [requestHelicopterAPI.reducerPath]: requestHelicopterAPI.reducer,\n    [airlinesAPI.reducerPath]: airlinesAPI.reducer,\n})\n\nexport const setupStore = () => {\n    return configureStore({\n        reducer: rootReducer,\n        middleware: (getDefaultMiddleware) =>\n            getDefaultMiddleware()\n                .concat(requestsByFilialsAPI.middleware)\n                .concat(filialsAPI.middleware)\n                .concat(workTypesAPI.middleware)\n                .concat(airportsAPI.middleware)\n                .concat(employeeResponsibleAPI.middleware)\n                .concat(flightFilialAPI.middleware)\n                .concat(requestAPI.middleware)\n                .concat(aircraftModelAPI.middleware)\n                .concat(flightTargetAPI.middleware)\n                .concat(empCustomerAPI.middleware)\n                .concat(flightPlanAPI.middleware)\n                .concat(fileStorageAPI.middleware)\n                .concat(requestHelicopterAPI.middleware)\n                .concat(airlinesAPI.middleware)\n    })\n}\n\nexport type RootState = ReturnType<typeof rootReducer>\nexport type AppStore = ReturnType<typeof setupStore>\nexport type AppDispatch = AppStore['dispatch']\n","import React, {useState} from 'react';\nimport type {MenuProps} from 'antd';\nimport {Menu} from 'antd';\nimport {useNavigate} from \"react-router-dom\";\n\ntype propsType = {}\n\nconst items: MenuProps['items'] = [\n    {\n        label: 'Заявки',\n        key: 'requests',\n        children: [\n            {\n                label: 'Заявки на выполнение полетов',\n                key: 'requestTypeOne',\n            },\n            {\n                label: 'Заявки на выполнение полетов филиалы',\n                key: 'requestTypeTwo',\n            },\n            {\n                label: 'Заявки на выполнение полетов вертолетами',\n                key: 'requestTypeThree',\n            },\n        ],\n    },\n    {\n        label: 'Планирование',\n        key: 'plans',\n    },\n    {\n        label: 'Документы',\n        key: 'docs',\n    },\n    {\n        label: 'Справочники',\n        key: 'dicts',\n    },\n    {\n        label: 'Отчеты',\n        key: 'reports',\n    },\n    {\n        label: 'Администрирование',\n        key: 'administration',\n    },\n    {\n        label: 'Справка',\n        key: 'help',\n    },\n];\n\nexport const Navbar = (props: propsType) => {\n    let navigate = useNavigate();\n    const [current, setCurrent] = useState('requestTypeOne');\n\n    const onClick: MenuProps['onClick'] = (e) => {\n        setCurrent(e.key);\n        if (e.key === \"requestTypeOne\") {\n            return navigate(`/requestsFilials`);\n        } else if (e.key === \"requestTypeTwo\") {\n            return navigate(`/requests`);\n        }\n        else if (e.key === \"requestTypeThree\") {\n            return navigate(`/requestsByHelicopter`);\n        }\n        else{\n            return navigate('/cosmos')\n        }\n    };\n\n    return (\n        <Menu onClick={onClick} selectedKeys={[current]} mode=\"horizontal\" items={items}/>\n    );\n};\n","export enum justifyOptions {\r\n    flexStart = 'flex-start',\r\n    center = 'center',\r\n    flexEnd = 'flex-end',\r\n    spaceBetween = 'space-between',\r\n    spaceAround = 'space-around',\r\n    spaceEvenly = 'space-evenly',\r\n};\r\n\r\nexport enum alignOptions {\r\n    flexStart = 'flex-start',\r\n    center = 'center',\r\n    flexEnd = 'flex-end'\r\n};\r\n\r\nexport const YEARS = [2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025];\r\n\r\n","import {AutoComplete, DatePicker, Flex, InputNumber, Modal} from \"antd\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {WorkTypeModel} from \"../../../models/WorkTypeModel\";\r\nimport {EmployeeResponsibleModel} from \"../../../models/EmployeeResponsibleModel\";\r\nimport {AirportModel} from \"../../../models/AirportModel\";\r\nimport {flightFilialAPI} from \"../../../services/FlightFilialService\";\r\nimport {filialsAPI} from \"../../../services/FilialsService\";\r\nimport {workTypesAPI} from \"../../../services/WorkTypesService\";\r\nimport {airportsAPI} from \"../../../services/AirportsService\";\r\nimport {employeeResponsibleAPI} from \"../../../services/EmployeeResponsibleService\";\r\n\r\ntype ModalProps = {\r\n    visible: boolean,\r\n    setVisible: Function,\r\n    refresh: Function,\r\n}\r\nexport const CreateFlightModal = (props: ModalProps) => {\r\n    // States\r\n    const [requestId] = useState<string>(() => {\r\n        return window.location.pathname.split(\"/\")[2]\r\n    });\r\n    const [empRespOptions, setEmpRespOptions] = useState<{ value: string }[]>([]);\r\n    const [workTypeOptions, setWorkTypeOptions] = useState<{ value: string }[]>([]);\r\n    const [airportsOptions, setAirportsOptions] = useState<{ value: string }[]>([]);\r\n    const [workTypeModal, setWorkTypeModal] = useState<string>(\"\");\r\n    const [empRespModal, setEmpRespModal] = useState<string>(\"\");\r\n    const [flightDateModal, setFlightDateModal] = useState<any>(\"\"); // Date.js format\r\n    const [airportDepartureModal, setAirportDepartureModal] = useState<string>(\"\");\r\n    const [airportArrivalModal, setAirportArrivalModal] = useState<string>(\"\");\r\n    const [passengerCountModal, setPassengerCountModal] = useState<number>(0);\r\n    const [cargoWeightMount, setCargoWeightMount] = useState<number>(0);\r\n    const [cargoWeighIn, setCargoWeighIn] = useState<number>(0);\r\n    const [cargoWeightOut, setCargoWeightOut] = useState<number>(0);\r\n    // -----\r\n\r\n    // Web requests\r\n    const [createFlightFilial, {\r\n        data: createdFlightFilialData,\r\n        isLoading: isLoadingCreateFlightFilial,\r\n        isError: isErrorCreateFlightFilial,\r\n    }] = flightFilialAPI.useCreateMutation();\r\n    const [getAllFilialsRequest, {\r\n        data: filials,\r\n        isLoading: isFilialsLoading,\r\n    }] = filialsAPI.useGetAllMutation();\r\n    const [getAllWorkTypesRequest, {\r\n        data: workTypes,\r\n        isLoading: isWorkTypesLoading,\r\n    }] = workTypesAPI.useGetAllMutation();\r\n    const [getAllAirportsRequest, {\r\n        data: airports,\r\n        isLoading: isAirportsLoading,\r\n    }] = airportsAPI.useGetAllMutation();\r\n    const [getAllEmployeeResponsibleRequest, {\r\n        data: employeeResponsible,\r\n        isLoading: isEmployeeResponsibleLoading,\r\n    }] = employeeResponsibleAPI.useGetAllMutation();\r\n    // -----\r\n\r\n    // Effects\r\n    useEffect(() => {\r\n        getAllFilialsRequest();\r\n        getAllWorkTypesRequest();\r\n        getAllAirportsRequest();\r\n        getAllEmployeeResponsibleRequest();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (employeeResponsible)\r\n            setEmpRespOptions(employeeResponsible.map((emp: EmployeeResponsibleModel) => ({value: emp.fio})));\r\n    }, [employeeResponsible]);\r\n    useEffect(() => {\r\n        if (workTypes)\r\n            setWorkTypeOptions(workTypes.map((workTypes: WorkTypeModel) => ({value: workTypes.name})));\r\n    }, [workTypes]);\r\n    useEffect(() => {\r\n        if (airports)\r\n            setAirportsOptions(airports.map((airport: AirportModel) => ({value: airport.name})));\r\n    }, [airports]);\r\n    useEffect(() => {\r\n        if (createdFlightFilialData)\r\n            props.refresh(requestId);\r\n    }, [createdFlightFilialData]);\r\n    // -----\r\n\r\n    // Handlers\r\n    const createRouteHandler = () => {\r\n        if (workTypes && employeeResponsible && airports) {\r\n            const workType = workTypes.find((workType: WorkTypeModel) => workType.name === workTypeModal);\r\n            const respEmp = employeeResponsible.find((emp: EmployeeResponsibleModel) => emp.fio === empRespModal);\r\n            const airportArrival = airports.find((airport: AirportModel) => airport.name === airportArrivalModal);\r\n            const airportDeparture = airports.find((airport: AirportModel) => airport.name === airportDepartureModal);\r\n            if (workType === undefined) {\r\n                console.log('Not Finded')\r\n            }\r\n            if (respEmp === undefined) {\r\n                console.log('Not Finded')\r\n            }\r\n            if (airportDeparture === undefined) {\r\n                console.log('Not Finded')\r\n            }\r\n            if (airportArrival === undefined) {\r\n                console.log('Not Finded')\r\n            }\r\n            if (passengerCountModal !== null) {\r\n                console.log('Pasc count ')\r\n            }\r\n            if (cargoWeightMount !== null) {\r\n                console.log('Pasc count ')\r\n            }\r\n            if (cargoWeightOut !== null) {\r\n                console.log('Pasc count ')\r\n            }\r\n            if (cargoWeighIn !== null) {\r\n                console.log('Pasc count ')\r\n            }\r\n            if (workType && airportArrival && airportDeparture && respEmp) {\r\n                closeCreateRouteModalHandler();\r\n                createFlightFilial({\r\n                    idRequestFilial: requestId,\r\n                    idWorkType: workType.id,\r\n                    flyDate: flightDateModal?.format('YYYY-MM-DD'),\r\n                    idAirportArrival: airportArrival.id,\r\n                    idAirportDeparture: airportDeparture.id,\r\n                    idEmpResp: respEmp.id,\r\n                    passengerCount: passengerCountModal,\r\n                    cargoWeightIn: cargoWeighIn,\r\n                    cargoWeightOut: cargoWeightOut,\r\n                    cargoWeightMount: cargoWeightMount\r\n                });\r\n            }\r\n        }\r\n    }\r\n    const closeCreateRouteModalHandler = () => {\r\n        props.setVisible(false);\r\n        setWorkTypeModal(\"\");\r\n        setEmpRespModal(\"\");\r\n        setFlightDateModal(\"\");\r\n        setAirportDepartureModal(\"\");\r\n        setAirportArrivalModal(\"\");\r\n        setPassengerCountModal(0);\r\n        setCargoWeightMount(0);\r\n        setCargoWeightOut(0);\r\n        setCargoWeighIn(0);\r\n    }\r\n    const getEmpRespValue = (searchText: string) => {\r\n        if (employeeResponsible) {\r\n            return employeeResponsible.filter((emp: EmployeeResponsibleModel) => emp.fio.includes(searchText)).map((emp: EmployeeResponsibleModel) => ({value: emp.fio}));\r\n        }\r\n        return [];\r\n    }\r\n    const getWorkTypesValue = (searchText: string) => {\r\n        if (workTypes) {\r\n            return workTypes.filter((workType: WorkTypeModel) => workType.name.includes(searchText)).map((workType: WorkTypeModel) => ({value: workType.name}));\r\n        }\r\n        return [];\r\n    }\r\n    const getAirportsValue = (searchText: string) => {\r\n        if (airports) {\r\n            return airports.filter((airport: AirportModel) => airport.name.includes(searchText)).map((airport: AirportModel) => ({value: airport.name}));\r\n        }\r\n        return [];\r\n    }\r\n    // -----\r\n    return (\r\n        <Modal\r\n            title=\"Новый маршрут\"\r\n            okText={\"Добавить\"}\r\n            centered\r\n            open={props.visible}\r\n            onOk={() => createRouteHandler()}\r\n            onCancel={closeCreateRouteModalHandler}\r\n            width={740}\r\n        >\r\n            <Flex gap={'small'} style={{width: '100%'}}>\r\n                <Flex vertical gap={\"small\"} style={{width: '100%'}}>\r\n                    <AutoComplete\r\n                        value={workTypeModal}\r\n                        size={'large'}\r\n                        options={workTypeOptions}\r\n                        style={{width: '100%'}}\r\n                        onSearch={(text) => setWorkTypeOptions(getWorkTypesValue(text))}\r\n                        placeholder={'Выберите вид работ'}\r\n                        notFoundContent={'Виды работ не найдены'}\r\n                        onSelect={(value, option) => setWorkTypeModal(value)}\r\n                    />\r\n                    <AutoComplete\r\n                        value={empRespModal}\r\n                        size={'large'}\r\n                        options={empRespOptions}\r\n                        style={{width: '100%'}}\r\n                        onSearch={(text) => setEmpRespOptions(getEmpRespValue(text))}\r\n                        placeholder={'Выберите ответственного'}\r\n                        notFoundContent={'Ответственные не найдены'}\r\n                        onSelect={(value, option) => setEmpRespModal(value)}\r\n                    />\r\n                    <DatePicker value={flightDateModal} style={{width: '100%'}} size={'large'} showTime onChange={(value) => {\r\n                        if (value)\r\n                            setFlightDateModal(value)\r\n                    }} onOk={(value) => setFlightDateModal(value)}/>\r\n                    <AutoComplete\r\n                        value={airportDepartureModal}\r\n                        size={'large'}\r\n                        options={airportsOptions}\r\n                        style={{width: '100%'}}\r\n                        onSearch={(text) => setAirportsOptions(getAirportsValue(text))}\r\n                        placeholder={'Выберите аэропорт вылета'}\r\n                        notFoundContent={'Ответственные не найдены'}\r\n                        onSelect={(value, option) => setAirportDepartureModal(value)}\r\n                    />\r\n                    <AutoComplete\r\n                        value={airportArrivalModal}\r\n                        size={'large'}\r\n                        options={airportsOptions}\r\n                        style={{width: '100%'}}\r\n                        onSearch={(text) => setAirportsOptions(getAirportsValue(text))}\r\n                        placeholder={'Выберите аэропорт назанчения'}\r\n                        notFoundContent={'Ответственные не найдены'}\r\n                        onSelect={(value, option) => setAirportArrivalModal(value)}\r\n                    />\r\n                </Flex>\r\n                <Flex vertical gap={\"small\"} style={{width: '100%'}}>\r\n                    <InputNumber\r\n                        value={passengerCountModal}\r\n                        style={{width: '100%'}}\r\n                        size={'large'}\r\n                        min={0}\r\n                        onChange={(value) => {\r\n                            if (value)\r\n                                setPassengerCountModal(value);\r\n                        }}\r\n                        placeholder={'Введите колличество пассажиров'}\r\n                    />\r\n                    <InputNumber\r\n                        value={cargoWeightMount}\r\n                        style={{width: '100%'}}\r\n                        size={'large'}\r\n                        min={0}\r\n                        onChange={(value) => {\r\n                            if (value)\r\n                                setCargoWeightMount(value);\r\n                        }}\r\n                        placeholder={'Введите общий вес груза'}\r\n                    />\r\n                    <InputNumber\r\n                        value={cargoWeightOut}\r\n                        style={{width: '100%'}}\r\n                        size={'large'}\r\n                        min={0}\r\n                        onChange={(value) => {\r\n                            if (value)\r\n                                setCargoWeightOut(value);\r\n                        }}\r\n                        placeholder={'Введите вес груза на внешней подвеске'}\r\n                    />\r\n                    <InputNumber\r\n                        value={cargoWeighIn}\r\n                        style={{width: '100%'}}\r\n                        size={'large'}\r\n                        min={0}\r\n                        onChange={(value) => {\r\n                            if (value)\r\n                                setCargoWeighIn(value);\r\n                        }}\r\n                        placeholder={'Введите вес груза внутри физюляжа'}\r\n                    />\r\n                </Flex>\r\n            </Flex>\r\n        </Modal>\r\n    )\r\n}","import {AutoComplete, DatePicker, Flex, InputNumber, Modal} from \"antd\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {WorkTypeModel} from \"../../../models/WorkTypeModel\";\r\nimport {EmployeeResponsibleModel} from \"../../../models/EmployeeResponsibleModel\";\r\nimport {AirportModel} from \"../../../models/AirportModel\";\r\nimport {flightFilialAPI} from \"../../../services/FlightFilialService\";\r\nimport {filialsAPI} from \"../../../services/FilialsService\";\r\nimport {workTypesAPI} from \"../../../services/WorkTypesService\";\r\nimport {airportsAPI} from \"../../../services/AirportsService\";\r\nimport {employeeResponsibleAPI} from \"../../../services/EmployeeResponsibleService\";\r\nimport dayjs from 'dayjs';\r\n\r\ntype ModalProps = {\r\n    visible: boolean,\r\n    setVisible: Function,\r\n    refresh: Function,\r\n    rowData: any,\r\n    setRowData: Function,\r\n}\r\nexport const UpdateFlightModal = (props: ModalProps) => {\r\n    console.log(props.rowData)\r\n    // States\r\n    const [requestId] = useState<string>(() => {\r\n        return window.location.pathname.split(\"/\")[2]\r\n    });\r\n    const [empRespOptions, setEmpRespOptions] = useState<{ value: string }[]>([]);\r\n    const [workTypeOptions, setWorkTypeOptions] = useState<{ value: string }[]>([]);\r\n    const [airportsOptions, setAirportsOptions] = useState<{ value: string }[]>([]);\r\n    const [workTypeModal, setWorkTypeModal] = useState<string>(props.rowData.workType);\r\n    const [empRespModal, setEmpRespModal] = useState<string>(props.rowData.employee);\r\n    const [flightDateModal, setFlightDateModal] = useState<any>(\"\");\r\n    const [airportDepartureModal, setAirportDepartureModal] = useState<string>(\"\");\r\n    const [airportArrivalModal, setAirportArrivalModal] = useState<string>(\"\");\r\n    const [passengerCountModal, setPassengerCountModal] = useState<number>(-1);\r\n    const [cargoWeightMount, setCargoWeightMount] = useState<number>(-1);\r\n    const [cargoWeighIn, setCargoWeighIn] = useState<number>(-1);\r\n    const [cargoWeightOut, setCargoWeightOut] = useState<number>(-1);\r\n    // -----\r\n\r\n    // Web requests\r\n    const [updateFlightFilial, {\r\n        data: updateFlightFilialData,\r\n        isLoading: isLoadingUpdateFilial,\r\n        isError: isErrorUpdateFilial,\r\n    }] = flightFilialAPI.useUpdateMutation();\r\n    const [getAllFilialsRequest, {\r\n        data: filials,\r\n        isLoading: isFilialsLoading,\r\n    }] = filialsAPI.useGetAllMutation();\r\n    const [getAllWorkTypesRequest, {\r\n        data: workTypes,\r\n        isLoading: isWorkTypesLoading,\r\n    }] = workTypesAPI.useGetAllMutation();\r\n    const [getAllAirportsRequest, {\r\n        data: airports,\r\n        isLoading: isAirportsLoading,\r\n    }] = airportsAPI.useGetAllMutation();\r\n    const [getAllEmployeeResponsibleRequest, {\r\n        data: employeeResponsible,\r\n        isLoading: isEmployeeResponsibleLoading,\r\n    }] = employeeResponsibleAPI.useGetAllMutation();\r\n    // -----\r\n\r\n    // Effects\r\n    useEffect(() => {\r\n        setAirportDepartureModal(props.rowData.airportDeparture);\r\n        setAirportArrivalModal(props.rowData.airportArrival);\r\n        setPassengerCountModal(props.rowData.passengerCount);\r\n        setCargoWeightMount(props.rowData.cargoWeightMount);\r\n        setCargoWeighIn(props.rowData.cargoWeightIn);\r\n        setCargoWeightOut(props.rowData.cargoWeightOut);\r\n        setFlightDateModal(props.rowData.dateTime);\r\n        getAllFilialsRequest();\r\n        getAllWorkTypesRequest();\r\n        getAllAirportsRequest();\r\n        getAllEmployeeResponsibleRequest();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (employeeResponsible)\r\n            setEmpRespOptions(employeeResponsible.map((emp: EmployeeResponsibleModel) => ({value: emp.fio})));\r\n    }, [employeeResponsible]);\r\n    useEffect(() => {\r\n        if (workTypes)\r\n            setWorkTypeOptions(workTypes.map((workTypes: WorkTypeModel) => ({value: workTypes.name})));\r\n    }, [workTypes]);\r\n    useEffect(() => {\r\n        if (airports)\r\n            setAirportsOptions(airports.map((airport: AirportModel) => ({value: airport.name})));\r\n    }, [airports]);\r\n    useEffect(() => {\r\n        if (updateFlightFilialData) {\r\n            props.refresh(requestId);\r\n            closeUpdateRouteModalHandler();\r\n        }\r\n    }, [updateFlightFilialData]);\r\n    // -----\r\n\r\n    // Handlers\r\n    const updateFlightHandler = () => {\r\n        const idAirportArrival = airports?.find((airport: AirportModel) => airport.name === airportArrivalModal)?.id;\r\n        const idAirportDeparture = airports?.find((airport: AirportModel) => airport.name === airportDepartureModal)?.id;\r\n        const idWorkType = workTypes?.find((workType: WorkTypeModel) => workType.name === workTypeModal)?.id;\r\n        const respEmp = employeeResponsible?.find((emp: EmployeeResponsibleModel) => emp.fio === empRespModal);\r\n        if (respEmp === undefined) {\r\n            console.log('Not Finded')\r\n        }\r\n        if (idAirportArrival && idAirportDeparture && idWorkType) {\r\n            updateFlightFilial({\r\n                id: props.rowData.id,\r\n                idWorkType,\r\n                idEmpResp: respEmp?.id,\r\n                idRoute: props.rowData.routeId,\r\n                flyDate: flightDateModal,\r\n                idAirportArrival,\r\n                idAirportDeparture,\r\n                passengerCount: passengerCountModal,\r\n                cargoWeightIn: cargoWeighIn,\r\n                cargoWeightOut: cargoWeightOut,\r\n                cargoWeightMount: cargoWeightMount\r\n            });\r\n        }\r\n    }\r\n    // -----\r\n    const closeUpdateRouteModalHandler = () => {\r\n        props.setVisible(false);\r\n        props.setRowData(null);\r\n        setWorkTypeModal(\"\");\r\n        setEmpRespModal(\"\");\r\n        setFlightDateModal(\"\");\r\n        setAirportDepartureModal(\"\");\r\n        setAirportArrivalModal(\"\");\r\n        setPassengerCountModal(-1);\r\n        setCargoWeightMount(-1);\r\n        setCargoWeightOut(-1);\r\n        setCargoWeighIn(-1);\r\n    }\r\n    const getEmpRespValue = (searchText: string) => {\r\n        if (employeeResponsible) {\r\n            return employeeResponsible.filter((emp: EmployeeResponsibleModel) => emp.fio.includes(searchText)).map((emp: EmployeeResponsibleModel) => ({value: emp.fio}));\r\n        }\r\n        return [];\r\n    }\r\n    const getWorkTypesValue = (searchText: string) => {\r\n        if (workTypes) {\r\n            return workTypes.filter((workType: WorkTypeModel) => workType.name.includes(searchText)).map((workType: WorkTypeModel) => ({value: workType.name}));\r\n        }\r\n        return [];\r\n    }\r\n    const getAirportsValue = (searchText: string) => {\r\n        if (airports) {\r\n            return airports.filter((airport: AirportModel) => airport.name.includes(searchText)).map((airport: AirportModel) => ({value: airport.name}));\r\n        }\r\n        return [];\r\n    }\r\n    // -----\r\n    return (\r\n        <Modal\r\n            title=\"Редактирование маршрута\"\r\n            okText={\"Сохранить\"}\r\n            centered\r\n            open={props.visible}\r\n            onOk={() => updateFlightHandler()}\r\n            onCancel={closeUpdateRouteModalHandler}\r\n            width={740}\r\n        >\r\n            <Flex gap={'small'} style={{width: '100%'}}>\r\n                <Flex vertical gap={\"small\"} style={{width: '100%'}}>\r\n                    <AutoComplete\r\n                        value={workTypeModal}\r\n                        size={'large'}\r\n                        options={workTypeOptions}\r\n                        style={{width: '100%'}}\r\n                        onSearch={(text) => setWorkTypeOptions(getWorkTypesValue(text))}\r\n                        placeholder={'Выберите вид работ'}\r\n                        notFoundContent={'Виды работ не найдены'}\r\n                        onSelect={(value, option) => setWorkTypeModal(value)}\r\n                    />\r\n                    <AutoComplete\r\n                        value={empRespModal}\r\n                        size={'large'}\r\n                        options={empRespOptions}\r\n                        style={{width: '100%'}}\r\n                        onSearch={(text) => setEmpRespOptions(getEmpRespValue(text))}\r\n                        placeholder={'Выберите ответственного'}\r\n                        notFoundContent={'Ответственные не найдены'}\r\n                        onSelect={(value, option) => setEmpRespModal(value)}\r\n                    />\r\n                    <DatePicker defaultValue={dayjs('2015/01/01', flightDateModal)} style={{width: '100%'}}\r\n                                size={'large'} showTime onChange={(value) => {\r\n                        if (value)\r\n                            setFlightDateModal(value)\r\n                    }} onOk={(value) => setFlightDateModal(value)}/>\r\n                    <AutoComplete\r\n                        value={airportDepartureModal}\r\n                        size={'large'}\r\n                        options={airportsOptions}\r\n                        style={{width: '100%'}}\r\n                        onSearch={(text) => setAirportsOptions(getAirportsValue(text))}\r\n                        placeholder={'Выберите аэропорт вылета'}\r\n                        notFoundContent={'Ответственные не найдены'}\r\n                        onSelect={(value, option) => setAirportDepartureModal(value)}\r\n                    />\r\n                    <AutoComplete\r\n                        value={airportArrivalModal}\r\n                        size={'large'}\r\n                        options={airportsOptions}\r\n                        style={{width: '100%'}}\r\n                        onSearch={(text) => setAirportsOptions(getAirportsValue(text))}\r\n                        placeholder={'Выберите аэропорт назанчения'}\r\n                        notFoundContent={'Ответственные не найдены'}\r\n                        onSelect={(value, option) => setAirportArrivalModal(value)}\r\n                    />\r\n                </Flex>\r\n                <Flex vertical gap={\"small\"} style={{width: '100%'}}>\r\n                    <InputNumber\r\n                        value={passengerCountModal}\r\n                        style={{width: '100%'}}\r\n                        size={'large'}\r\n                        min={0}\r\n                        onChange={(value) => {\r\n                            if (value)\r\n                                setPassengerCountModal(value);\r\n                        }}\r\n                        placeholder={'Введите колличество пассажиров'}\r\n                    />\r\n                    <InputNumber\r\n                        value={cargoWeightMount}\r\n                        style={{width: '100%'}}\r\n                        size={'large'}\r\n                        min={0}\r\n                        onChange={(value) => {\r\n                            if (value)\r\n                                setCargoWeightMount(value);\r\n                        }}\r\n                        placeholder={'Введите общий вес груза'}\r\n                    />\r\n                    <InputNumber\r\n                        value={cargoWeightOut}\r\n                        style={{width: '100%'}}\r\n                        size={'large'}\r\n                        min={0}\r\n                        onChange={(value) => {\r\n                            if (value)\r\n                                setCargoWeightOut(value);\r\n                        }}\r\n                        placeholder={'Введите вес груза на внешней подвеске'}\r\n                    />\r\n                    <InputNumber\r\n                        value={cargoWeighIn}\r\n                        style={{width: '100%'}}\r\n                        size={'large'}\r\n                        min={0}\r\n                        onChange={(value) => {\r\n                            if (value)\r\n                                setCargoWeighIn(value);\r\n                        }}\r\n                        placeholder={'Введите вес груза внутри физюляжа'}\r\n                    />\r\n                </Flex>\r\n            </Flex>\r\n        </Modal>\r\n    )\r\n}","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {\r\n    Button,\r\n    Collapse,\r\n    Divider,\r\n    Empty,\r\n    Flex,\r\n    message,\r\n    Modal,\r\n    Select,\r\n    Spin,\r\n    Typography,\r\n    Upload,\r\n    UploadProps\r\n} from \"antd\";\r\nimport {FilialModel} from \"../../models/FilialModel\";\r\nimport {LogoutOutlined, RedoOutlined, RollbackOutlined, UploadOutlined} from \"@ant-design/icons\";\r\nimport {filialsAPI} from \"../../services/FilialsService\";\r\nimport {Navbar} from \"../../components/Layout/Header/Navbar\";\r\nimport {alignOptions, justifyOptions} from \"../../configs/constants\";\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\nimport {requestsByFilialsAPI} from \"../../services/RequestFilialService\";\r\nimport {RequestRoutesGridType} from \"./RequestsFilials.types\";\r\n//@ts-ignore\r\nimport {Column, DateColumn, ExtTreegroupedgrid, Grid} from '@sencha/ext-react-modern';\r\nimport {Ext} from \"../../index\";\r\nimport {CreateFlightModal} from \"../../components/RequestsByFilials/EditRequestByFilials/CreateFlightModal\";\r\nimport {UpdateFlightModal} from \"../../components/RequestsByFilials/EditRequestByFilials/UpdateFlightModal\";\r\n\r\nconst {Text} = Typography;\r\n\r\nexport const EditRequestByFilialsScreen = () => {\r\n    // States\r\n    const [requestId, setRequestId] = useState<string>(\"\");\r\n    const [statusId, setStatusId] = useState<string>(\"\");\r\n    const [filialId, setFilialId] = useState<string>(\"\");\r\n    const [fileId, setFileId] = useState<number | null>(null);\r\n    const [fileList, setFileList] = useState<any | null>(null);\r\n    const [fileUploading, setFileUploading] = useState<boolean>(false);\r\n    const [gridData, setGridData] = useState<RequestRoutesGridType[]>([]);\r\n    const [selectedRecord, setSelectedRecord] = useState<RequestRoutesGridType | null>(null);\r\n    const [createFlightModalVisible, setCreateFlightModalVisible] = useState<boolean>(false);\r\n    const [updateFlightModalVisible, setUpdateFlightModalVisible] = useState<boolean>(false);\r\n    const gridRef = useRef(null);\r\n    // -----\r\n\r\n    // Useful utils\r\n    let store = Ext.create('Ext.data.Store', {\r\n        data: gridData,\r\n        groupers: ['workType', 'employee'],\r\n        fields: [\r\n            {name: 'workType', type: 'string'},\r\n            {name: 'employee', type: 'string'},\r\n        ]\r\n    })\r\n    let navigate = useNavigate();\r\n    const location = useLocation();\r\n    const propsFile: UploadProps = {\r\n        maxCount: 1,\r\n        customRequest: (e: any) => {\r\n            const formData = new FormData();\r\n            formData.append(\"fileName\", e.file.name);\r\n            formData.append(\"idRequestFilial\", requestId);\r\n            formData.append(\"fileBody\", e.file);\r\n            setFileUploading(true);\r\n            fetch('http://localhost:8080/flight/api/file/create', {\r\n                method: 'POST',\r\n                body: formData,\r\n            })\r\n                .then((res) => {\r\n                    return res.text()\r\n                })\r\n                .then((m) => {\r\n                    setFileList([{\r\n                        uid: e.file.uid,\r\n                        id: JSON.parse(m).id,\r\n                        name: e.file.name,\r\n                        status: \"done\",\r\n                        url: `http://localhost:8080/flight/api/file/get?id=${JSON.parse(m).id}`,\r\n                        percent: 100\r\n                    }]);\r\n                    message.success('Файл обновлен');\r\n                })\r\n                .catch((error) => {\r\n                    message.error('Ошибка загрузки файла');\r\n                })\r\n                .finally(() => {\r\n                    setFileUploading(false);\r\n                });\r\n        },\r\n        beforeUpload: (file) => {\r\n            return true;\r\n        },\r\n        onRemove: (file) => {\r\n            let requestOptions = {\r\n                method: 'DELETE',\r\n                redirect: 'follow'\r\n            };\r\n            //@ts-ignore\r\n            fetch(`http://localhost:8080/flight/api/file/delete?id=${fileId}`, requestOptions)\r\n                .then(response => {\r\n                })\r\n                .then(result => {\r\n                    message.error('Файл удален');\r\n                    setFileList([]);\r\n                })\r\n                .catch(error => {\r\n                    message.error('Ошибка удаления файла');\r\n                    console.log('error', error);\r\n                });\r\n        },\r\n        fileList,\r\n    }\r\n    //\r\n\r\n    // Web requests\r\n    const [getRequestById, {\r\n        data: requestData,\r\n        isLoading: isLoadingGetRequestById,\r\n    }] = requestsByFilialsAPI.useGetByIdMutation();\r\n    const [sendOnConfirm, {\r\n        data: sendOnConfirmData,\r\n        isLoading: isLoadingSendOnConfirm,\r\n    }] = requestsByFilialsAPI.useSendOnConfirmMutation();\r\n    const [confirm, {\r\n        data: confirmData,\r\n        isLoading: isLoadingConfirm,\r\n    }] = requestsByFilialsAPI.useConfirmMutation();\r\n    const [decline, {\r\n        data: declineData,\r\n        isLoading: isLoadingDecline,\r\n    }] = requestsByFilialsAPI.useDeclineMutation();\r\n    const [getAllFilialsRequest, {\r\n        data: filials,\r\n        isLoading: isFilialsLoading,\r\n    }] = filialsAPI.useGetAllMutation();\r\n    // -----\r\n\r\n    // Effects\r\n    useEffect(() => {\r\n        getAllFilialsRequest();\r\n        getRequestById(location.pathname.split(\"/\")[2]); // get ID from path location\r\n    }, []);\r\n    useEffect(() => {\r\n        if (requestData) {\r\n            if (requestData.idRequestFile)\r\n                setFileList([{\r\n                    uid: `${requestData.idRequestFile}`,\r\n                    name: `${requestData.nameRequestFile}`,\r\n                    status: 'done',\r\n                    url: `http://localhost:8080/flight/api/file/get?id=${requestData.idRequestFile}`,\r\n                    percent: 100,\r\n                }])\r\n            setRequestId(requestData.id);\r\n            setFilialId(requestData.idFilial);\r\n            setStatusId(requestData.idState);\r\n            setFileId(requestData.idRequestFile);\r\n            setGridData(requestData?.routes.map((route) => (\r\n                {\r\n                    dateTime: route.dateTime,\r\n                    cargoWeightOut: route.cargoWeightOut,\r\n                    cargoWeightMount: route.cargoWeightMount,\r\n                    routeId: route.routeId,\r\n                    passengerCount: route.passengerCount,\r\n                    workType: route.workType,\r\n                    airportDeparture: route.airportDeparture,\r\n                    cargoWeightIn: route.cargoWeightIn,\r\n                    id: route.id,\r\n                    employee: route.employee,\r\n                    airportArrival: route.airportArrival\r\n                }\r\n            )));\r\n        }\r\n    }, [requestData]);\r\n    useEffect(() => {\r\n        if (selectedRecord !== null)\r\n            setUpdateFlightModalVisible(true);\r\n    }, [selectedRecord])\r\n    useEffect(() => {\r\n        if (sendOnConfirmData || confirmData || declineData) {\r\n            getRequestById(requestId);\r\n        }\r\n    }, [sendOnConfirmData, confirmData, declineData]);\r\n    useEffect(() => {\r\n        if (gridData.length > 0) {\r\n            //@ts-ignore\r\n            document?.body?.querySelectorAll(\"ext-treegroupedgrid\")[0]?.cmp?.expandAll();\r\n        }\r\n    }, [gridData]);\r\n    useEffect(() => {\r\n        //@ts-ignore\r\n        document?.body?.querySelectorAll(\"ext-treegroupedgrid\")[0]?.cmp?.expandAll();\r\n    }, [createFlightModalVisible, updateFlightModalVisible]);\r\n    // Handlers\r\n    const backBtnHandler = () => {\r\n        return navigate(`/requestsFilials`);\r\n    }\r\n    const sendOnConfirmHandler = () => {\r\n        sendOnConfirm(requestId);\r\n    }\r\n    const confirmHandler = () => {\r\n        confirm(requestId);\r\n    }\r\n    const declineHandler = () => {\r\n        decline(requestId);\r\n    }\r\n    const refresh = () => {\r\n        getRequestById(requestId);\r\n    }\r\n    // -----\r\n    return (\r\n        <>\r\n            <CreateFlightModal visible={createFlightModalVisible} setVisible={setCreateFlightModalVisible}\r\n                               refresh={getRequestById}/>\r\n            {selectedRecord &&\r\n                <UpdateFlightModal visible={updateFlightModalVisible} setVisible={setUpdateFlightModalVisible}\r\n                                   refresh={getRequestById} rowData={selectedRecord} setRowData={setSelectedRecord}/>\r\n            }\r\n            <Flex gap=\"small\" vertical>\r\n                <Navbar/>\r\n                {(filials === undefined || requestData === undefined) ?\r\n                    <Flex style={{height: window.innerHeight}} justify={justifyOptions.center}\r\n                          align={alignOptions.center}>\r\n                        <Spin size={'large'}/>\r\n                    </Flex> :\r\n                    <>\r\n                        <Flex justify={justifyOptions.flexStart}>\r\n                            <Flex gap=\"small\" vertical style={{margin: \"5px 10px 0 17px\"}}>\r\n                                <Flex gap=\"middle\" style={{margin: \"0 0 7px 0\"}}>\r\n                                    <Button size={'large'} onClick={backBtnHandler} icon={<RollbackOutlined/>}/>\r\n                                    <Button size={'large'} icon={<LogoutOutlined/>}/>\r\n                                    <Button size={'large'} onClick={refresh} icon={<RedoOutlined/>}/>\r\n                                </Flex>\r\n                                <Text>Код заявки <strong>{requestId}</strong></Text>\r\n                                <Text><strong>{requestData.nameState}</strong></Text>\r\n                                {requestData.nameState === 'Создано' &&\r\n                                    <Button size={'middle'} onClick={() => {\r\n                                        Modal.confirm({\r\n                                            title: 'Отправка на согласование',\r\n                                            okText: \"Да, отправить\",\r\n                                            onOk: sendOnConfirmHandler,\r\n                                            content: 'Сформировать заявку на согласование в СОП?',\r\n                                            footer: (_, {OkBtn, CancelBtn}) => (\r\n                                                <>\r\n                                                    <CancelBtn/>\r\n                                                    <OkBtn/>\r\n                                                </>\r\n                                            ),\r\n                                        });\r\n                                    }}>На согласование</Button>\r\n                                }\r\n                                {requestData.nameState === 'На согласовании' &&\r\n                                    <>\r\n                                        <Button size={'middle'} onClick={() => {\r\n                                            Modal.confirm({\r\n                                                title: 'Внимание',\r\n                                                okText: \"Да, утвердить\",\r\n                                                onOk: confirmHandler,\r\n                                                content: 'Вы точно хотите утвердить заявку?',\r\n                                                footer: (_, {OkBtn, CancelBtn}) => (\r\n                                                    <>\r\n                                                        <CancelBtn/>\r\n                                                        <OkBtn/>\r\n                                                    </>\r\n                                                ),\r\n                                            });\r\n                                        }}>Утвердить</Button>\r\n                                        <Button size={'middle'} onClick={() => {\r\n                                            Modal.confirm({\r\n                                                title: 'Внимание',\r\n                                                okText: \"Да, отклонить\",\r\n                                                onOk: declineHandler,\r\n                                                content: 'Вы точно хотите отклонить заявку?',\r\n                                                footer: (_, {OkBtn, CancelBtn}) => (\r\n                                                    <>\r\n                                                        <CancelBtn/>\r\n                                                        <OkBtn/>\r\n                                                    </>\r\n                                                ),\r\n                                            });\r\n                                        }}>Отклонить</Button>\r\n                                    </>\r\n                                }\r\n                            </Flex>\r\n                            <Divider type={'vertical'}\r\n                                     style={{height: requestData.nameState === 'Создано' ? 160 : requestData.nameState === 'Утверждено' || requestData.nameState === 'Отклонено' ? 120 : 200}}/>\r\n                            <Flex gap=\"small\" vertical>\r\n                                <Select\r\n                                    disabled={requestData.nameState === 'Утверждено'}\r\n                                    size={'middle'}\r\n                                    placeholder=\"Филиал\"\r\n                                    loading={isFilialsLoading}\r\n                                    value={filialId.toString()}\r\n                                    style={{width: 330}}\r\n                                    options={filials.map((filial: FilialModel): {\r\n                                        value: string,\r\n                                        label: string\r\n                                    } => ({value: filial.id.toString(), label: filial.name}))}\r\n                                    onSelect={(value) => setFilialId(value)}\r\n                                />\r\n                                <Upload  {...propsFile} >\r\n                                    <Button disabled={fileUploading || requestData.nameState === 'Утверждено'}\r\n                                            size={'middle'} style={{width: 330}}\r\n                                            icon={<UploadOutlined/>}>Обновить файл\r\n                                        полетной\r\n                                        заявки</Button>\r\n                                </Upload>\r\n                                {(!requestData?.idRequestFile && fileList === null) &&\r\n                                    <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description={false}\r\n                                           style={{height: 25}}/>\r\n                                }\r\n                            </Flex>\r\n                        </Flex>\r\n                        <Collapse defaultActiveKey={['0']} items={[\r\n                            {\r\n                                key: '0',\r\n                                label: 'Плановые полеты',\r\n                                children:\r\n                                    <>\r\n                                        <Flex wrap=\"wrap\" gap=\"small\" justify={justifyOptions.flexStart}\r\n                                              style={{margin: \"0 0 15px 0\"}}>\r\n                                            <Button disabled={requestData.nameState === 'Утверждено'} size={'middle'}\r\n                                                    style={{width: 152}}\r\n                                                    onClick={() => setCreateFlightModalVisible(true)}>Добавить\r\n                                                маршрут</Button>\r\n                                        </Flex>\r\n\r\n                                        {Ext.isDomReady &&\r\n                                            <ExtTreegroupedgrid\r\n                                                collapse={false}\r\n                                                ref={gridRef}\r\n                                                style={{height: window.innerHeight - 325}}\r\n                                                store={store}\r\n                                                columnLines\r\n                                                grouped\r\n                                                shadow={false}\r\n\r\n                                                groupSummaryPosition={'docked'}\r\n                                                summaryPosition={'docked'}\r\n                                                onChilddoubletap={(event: any) => {\r\n                                                    if (requestData.nameState !== 'Утверждено')\r\n                                                        setSelectedRecord(event.location.record.data);\r\n                                                }}\r\n                                                columns={[\r\n                                                    {\r\n                                                        text: 'Вид работ',\r\n                                                        dataIndex: 'workType',\r\n                                                        groupable: true,\r\n                                                        filterType: 'string',\r\n                                                        flex: 1,\r\n                                                        hidden: true\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Ответсвенный',\r\n                                                        dataIndex: 'employee',\r\n                                                        groupable: true,\r\n                                                        filterType: 'string',\r\n                                                        width: 200,\r\n                                                        hidden: true\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Дата и время вылета',\r\n                                                        dataIndex: 'dateTime',\r\n                                                        groupable: true,\r\n                                                        filterType: 'date',\r\n                                                        flex: 1\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Аэропорт вылета',\r\n                                                        dataIndex: 'airportDeparture',\r\n                                                        groupable: true,\r\n                                                        filterType: 'string',\r\n                                                        flex: 1\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Аэропорт назначения',\r\n                                                        dataIndex: 'airportArrival',\r\n                                                        groupable: true,\r\n                                                        filterType: 'string',\r\n                                                        flex: 1\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Аэропорт назначения',\r\n                                                        dataIndex: 'airportArrival',\r\n                                                        groupable: true,\r\n                                                        filterType: 'string',\r\n                                                        flex: 1\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Кол-во пассажиров',\r\n                                                        dataIndex: 'passengerCount',\r\n                                                        xtype: 'numbercolumn',\r\n                                                        align: 'center',\r\n                                                        filterType: 'number',\r\n                                                        flex: 1\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Груз всего, тонн',\r\n                                                        dataIndex: 'cargoWeightMount',\r\n                                                        xtype: 'numbercolumn',\r\n                                                        align: 'center',\r\n                                                        filterType: 'number',\r\n                                                        flex: 1\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Груз на внешней подвеске, тонн',\r\n                                                        dataIndex: 'cargoWeightOut',\r\n                                                        xtype: 'numbercolumn',\r\n                                                        align: 'center',\r\n                                                        filterType: 'number',\r\n                                                        flex: 1\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Груз внутри фюзеляжа, тонн',\r\n                                                        dataIndex: 'cargoWeightIn',\r\n                                                        xtype: 'numbercolumn',\r\n                                                        align: 'center',\r\n                                                        filterType: 'number',\r\n                                                        flex: 1\r\n                                                    },\r\n                                                ]}\r\n                                                platformConfig={{\r\n                                                    desktop: {\r\n                                                        plugins: {\r\n                                                            groupingpanel: true,\r\n                                                            gridfilterbar: true\r\n                                                        }\r\n                                                    },\r\n                                                }}\r\n                                            >\r\n                                            </ExtTreegroupedgrid>\r\n                                        }\r\n                                    </>\r\n                            }]}/>\r\n                    </>\r\n                }\r\n            </Flex>\r\n        </>\r\n    )\r\n\r\n}","import {AutoComplete, DatePicker, Flex, InputNumber, Modal} from \"antd\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {WorkTypeModel} from \"../../../models/WorkTypeModel\";\r\nimport {EmployeeResponsibleModel} from \"../../../models/EmployeeResponsibleModel\";\r\nimport {AirportModel} from \"../../../models/AirportModel\";\r\nimport {workTypesAPI} from \"../../../services/WorkTypesService\";\r\nimport {airportsAPI} from \"../../../services/AirportsService\";\r\nimport {employeeResponsibleAPI} from \"../../../services/EmployeeResponsibleService\";\r\nimport {RequestRoutesGridType} from \"../../../screens/RequestsByFilials/RequestsFilials.types\";\r\n\r\ntype ModalProps = {\r\n    visible: boolean,\r\n    setVisible: Function,\r\n    setGridData: Function,\r\n}\r\nexport const CreateFlightModal = (props: ModalProps) => {\r\n    // States\r\n    const [empRespOptions, setEmpRespOptions] = useState<{ value: string }[]>([]);\r\n    const [workTypeOptions, setWorkTypeOptions] = useState<{ value: string }[]>([]);\r\n    const [airportsOptions, setAirportsOptions] = useState<{ value: string }[]>([]);\r\n    const [workTypeModal, setWorkTypeModal] = useState<string>(\"\");\r\n    const [empRespModal, setEmpRespModal] = useState<string>(\"\");\r\n    const [flightDateModal, setFlightDateModal] = useState<any>(\"\"); // Date.js format\r\n    const [airportDepartureModal, setAirportDepartureModal] = useState<string>(\"\");\r\n    const [airportArrivalModal, setAirportArrivalModal] = useState<string>(\"\");\r\n    const [passengerCountModal, setPassengerCountModal] = useState<number>(-1);\r\n    const [cargoWeightMount, setCargoWeightMount] = useState<number>(-1);\r\n    const [cargoWeighIn, setCargoWeighIn] = useState<number>(-1);\r\n    const [cargoWeightOut, setCargoWeightOut] = useState<number>(-1);\r\n    // -----\r\n\r\n    // Web requests\r\n    const [getAllWorkTypesRequest, {\r\n        data: workTypes,\r\n        isLoading: isWorkTypesLoading,\r\n    }] = workTypesAPI.useGetAllMutation();\r\n    const [getAllAirportsRequest, {\r\n        data: airports,\r\n        isLoading: isAirportsLoading,\r\n    }] = airportsAPI.useGetAllMutation();\r\n    const [getAllEmployeeResponsibleRequest, {\r\n        data: employeeResponsible,\r\n        isLoading: isEmployeeResponsibleLoading,\r\n    }] = employeeResponsibleAPI.useGetAllMutation();\r\n    // -----\r\n\r\n    // Effects\r\n    useEffect(() => {\r\n        getAllWorkTypesRequest();\r\n        getAllAirportsRequest();\r\n        getAllEmployeeResponsibleRequest();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (employeeResponsible)\r\n            setEmpRespOptions(employeeResponsible.map((emp: EmployeeResponsibleModel) => ({value: emp.fio})));\r\n    }, [employeeResponsible]);\r\n    useEffect(() => {\r\n        if (workTypes)\r\n            setWorkTypeOptions(workTypes.map((workTypes: WorkTypeModel) => ({value: workTypes.name})));\r\n    }, [workTypes]);\r\n    useEffect(() => {\r\n        if (airports)\r\n            setAirportsOptions(airports.map((airport: AirportModel) => ({value: airport.name})));\r\n    }, [airports]);\r\n    // -----\r\n\r\n    // Handlers\r\n    const createRouteHandler = () => {\r\n        if (workTypes && employeeResponsible && airports) {\r\n            const workType = workTypes.find((workType: WorkTypeModel) => workType.name === workTypeModal);\r\n            const respEmp = employeeResponsible.find((emp: EmployeeResponsibleModel) => emp.fio === empRespModal);\r\n            const airportArrival = airports.find((airport: AirportModel) => airport.name === airportArrivalModal);\r\n            const airportDeparture = airports.find((airport: AirportModel) => airport.name === airportDepartureModal);\r\n            if (workType === undefined) {\r\n                console.log('Not Finded')\r\n            }\r\n            if (respEmp === undefined) {\r\n                console.log('Not Finded')\r\n            }\r\n            if (airportDeparture === undefined) {\r\n                console.log('Not Finded')\r\n            }\r\n            if (airportArrival === undefined) {\r\n                console.log('Not Finded')\r\n            }\r\n            if (passengerCountModal !== null) {\r\n                console.log('Pasc count ')\r\n            }\r\n            if (cargoWeightMount !== null) {\r\n                console.log('Pasc count ')\r\n            }\r\n            if (cargoWeightOut !== null) {\r\n                console.log('Pasc count ')\r\n            }\r\n            if (cargoWeighIn !== null) {\r\n                console.log('Pasc count ')\r\n            }\r\n            if (workType && airportArrival && airportDeparture && respEmp) {\r\n                props.setGridData((prev: RequestRoutesGridType[]) => {\r\n                    let record: RequestRoutesGridType = {\r\n                        id: \"\",\r\n                        routeId: \"\",\r\n                        workType: workTypeModal,\r\n                        workTypeId: workType?.id,\r\n                        employee: empRespModal,\r\n                        employeeId: respEmp?.id,\r\n                        dateTime: flightDateModal?.format('YYYY-MM-DD'),\r\n                        airportDeparture: airportDepartureModal,\r\n                        airportDepartureId: airportDeparture?.id,\r\n                        airportArrival: airportArrivalModal,\r\n                        airportArrivalId: airportArrival?.id,\r\n                        passengerCount: passengerCountModal.toString(),\r\n                        cargoWeightMount: cargoWeightMount.toString(),\r\n                        cargoWeightIn: cargoWeighIn.toString(),\r\n                        cargoWeightOut: cargoWeightOut.toString(),\r\n                    }\r\n                    return prev.concat(record);\r\n                })\r\n                closeCreateRouteModalHandler();\r\n            }\r\n        }\r\n    }\r\n    const closeCreateRouteModalHandler = () => {\r\n        props.setVisible(false);\r\n        setWorkTypeModal(\"\");\r\n        setEmpRespModal(\"\");\r\n        setFlightDateModal(\"\");\r\n        setAirportDepartureModal(\"\");\r\n        setAirportArrivalModal(\"\");\r\n        setPassengerCountModal(-1);\r\n        setCargoWeightMount(-1);\r\n        setCargoWeightOut(-1);\r\n        setCargoWeighIn(-1);\r\n    }\r\n    const getEmpRespValue = (searchText: string) => {\r\n        if (employeeResponsible) {\r\n            return employeeResponsible.filter((emp: EmployeeResponsibleModel) => emp.fio.includes(searchText)).map((emp: EmployeeResponsibleModel) => ({value: emp.fio}));\r\n        }\r\n        return [];\r\n    }\r\n    const getWorkTypesValue = (searchText: string) => {\r\n        if (workTypes) {\r\n            return workTypes.filter((workType: WorkTypeModel) => workType.name.includes(searchText)).map((workType: WorkTypeModel) => ({value: workType.name}));\r\n        }\r\n        return [];\r\n    }\r\n    const getAirportsValue = (searchText: string) => {\r\n        if (airports) {\r\n            return airports.filter((airport: AirportModel) => airport.name.includes(searchText)).map((airport: AirportModel) => ({value: airport.name}));\r\n        }\r\n        return [];\r\n    }\r\n    // -----\r\n    return (\r\n        <Modal\r\n            title=\"Новый маршрут\"\r\n            okText={\"Добавить\"}\r\n            centered\r\n            open={props.visible}\r\n            onOk={() => createRouteHandler()}\r\n            onCancel={closeCreateRouteModalHandler}\r\n            width={740}\r\n        >\r\n            <Flex gap={'small'} style={{width: '100%'}}>\r\n                <Flex vertical gap={\"small\"} style={{width: '100%'}}>\r\n                    <AutoComplete\r\n                        size={'large'}\r\n                        options={workTypeOptions}\r\n                        style={{width: '100%'}}\r\n                        onSearch={(text) => setWorkTypeOptions(getWorkTypesValue(text))}\r\n                        placeholder={'Выберите вид работ'}\r\n                        notFoundContent={'Виды работ не найдены'}\r\n                        onSelect={(value, option) => setWorkTypeModal(value)}\r\n                    />\r\n                    <AutoComplete\r\n                        size={'large'}\r\n                        options={empRespOptions}\r\n                        style={{width: '100%'}}\r\n                        onSearch={(text) => setEmpRespOptions(getEmpRespValue(text))}\r\n                        placeholder={'Выберите ответственного'}\r\n                        notFoundContent={'Ответственные не найдены'}\r\n                        onSelect={(value, option) => setEmpRespModal(value)}\r\n                    />\r\n                    <DatePicker style={{width: '100%'}} size={'large'} showTime onChange={(value) => {\r\n                        if (value)\r\n                            setFlightDateModal(value)\r\n                    }} onOk={(value) => setFlightDateModal(value)}/>\r\n                    <AutoComplete\r\n                        size={'large'}\r\n                        options={airportsOptions}\r\n                        style={{width: '100%'}}\r\n                        onSearch={(text) => setAirportsOptions(getAirportsValue(text))}\r\n                        placeholder={'Выберите аэропорт вылета'}\r\n                        notFoundContent={'Ответственные не найдены'}\r\n                        onSelect={(value, option) => setAirportDepartureModal(value)}\r\n                    />\r\n                    <AutoComplete\r\n                        size={'large'}\r\n                        options={airportsOptions}\r\n                        style={{width: '100%'}}\r\n                        onSearch={(text) => setAirportsOptions(getAirportsValue(text))}\r\n                        placeholder={'Выберите аэропорт назанчения'}\r\n                        notFoundContent={'Ответственные не найдены'}\r\n                        onSelect={(value, option) => setAirportArrivalModal(value)}\r\n                    />\r\n                </Flex>\r\n                <Flex vertical gap={\"small\"} style={{width: '100%'}}>\r\n                    <InputNumber\r\n                        style={{width: '100%'}}\r\n                        size={'large'}\r\n                        min={0}\r\n                        onChange={(value) => {\r\n                            if (value)\r\n                                setPassengerCountModal(value);\r\n                        }}\r\n                        placeholder={'Введите колличество пассажиров'}\r\n                    />\r\n                    <InputNumber\r\n                        style={{width: '100%'}}\r\n                        size={'large'}\r\n                        min={0}\r\n                        onChange={(value) => {\r\n                            if (value)\r\n                                setCargoWeightMount(value);\r\n                        }}\r\n                        placeholder={'Введите общий вес груза'}\r\n                    />\r\n                    <InputNumber\r\n                        style={{width: '100%'}}\r\n                        size={'large'}\r\n                        min={0}\r\n                        onChange={(value) => {\r\n                            if (value)\r\n                                setCargoWeightOut(value);\r\n                        }}\r\n                        placeholder={'Введите вес груза на внешней подвеске'}\r\n                    />\r\n                    <InputNumber\r\n                        style={{width: '100%'}}\r\n                        size={'large'}\r\n                        min={0}\r\n                        onChange={(value) => {\r\n                            if (value)\r\n                                setCargoWeighIn(value);\r\n                        }}\r\n                        placeholder={'Введите вес груза внутри физюляжа'}\r\n                    />\r\n                </Flex>\r\n            </Flex>\r\n        </Modal>\r\n    )\r\n}","import {AutoComplete, DatePicker, Flex, InputNumber, Modal} from \"antd\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {WorkTypeModel} from \"../../../models/WorkTypeModel\";\r\nimport {EmployeeResponsibleModel} from \"../../../models/EmployeeResponsibleModel\";\r\nimport {AirportModel} from \"../../../models/AirportModel\";\r\nimport {workTypesAPI} from \"../../../services/WorkTypesService\";\r\nimport {airportsAPI} from \"../../../services/AirportsService\";\r\nimport {employeeResponsibleAPI} from \"../../../services/EmployeeResponsibleService\";\r\nimport dayjs from 'dayjs';\r\nimport {RequestRoutesGridType} from \"../../../screens/RequestsByFilials/RequestsFilials.types\";\r\n\r\ntype ModalProps = {\r\n    visible: boolean,\r\n    setVisible: Function,\r\n    rowData: any,\r\n    setRowData: Function,\r\n    setGridData: Function\r\n}\r\nexport const UpdateFlightModal = (props: ModalProps) => {\r\n    // States\r\n    const [empRespOptions, setEmpRespOptions] = useState<{ value: string }[]>([]);\r\n    const [workTypeOptions, setWorkTypeOptions] = useState<{ value: string }[]>([]);\r\n    const [airportsOptions, setAirportsOptions] = useState<{ value: string }[]>([]);\r\n    const [workTypeModal, setWorkTypeModal] = useState<string>(props.rowData.workType);\r\n    const [empRespModal, setEmpRespModal] = useState<string>(props.rowData.employee);\r\n    const [flightDateModal, setFlightDateModal] = useState<any>(\"\");\r\n    const [airportDepartureModal, setAirportDepartureModal] = useState<string>(\"\");\r\n    const [airportArrivalModal, setAirportArrivalModal] = useState<string>(\"\");\r\n    const [passengerCountModal, setPassengerCountModal] = useState<number>(-1);\r\n    const [cargoWeightMount, setCargoWeightMount] = useState<number>(-1);\r\n    const [cargoWeighIn, setCargoWeighIn] = useState<number>(-1);\r\n    const [cargoWeightOut, setCargoWeightOut] = useState<number>(-1);\r\n    // -----\r\n\r\n    // Web requests\r\n    const [getAllWorkTypesRequest, {\r\n        data: workTypes,\r\n        isLoading: isWorkTypesLoading,\r\n    }] = workTypesAPI.useGetAllMutation();\r\n    const [getAllAirportsRequest, {\r\n        data: airports,\r\n        isLoading: isAirportsLoading,\r\n    }] = airportsAPI.useGetAllMutation();\r\n    const [getAllEmployeeResponsibleRequest, {\r\n        data: employeeResponsible,\r\n        isLoading: isEmployeeResponsibleLoading,\r\n    }] = employeeResponsibleAPI.useGetAllMutation();\r\n    // -----\r\n\r\n    // Effects\r\n    useEffect(() => {\r\n        setAirportDepartureModal(props.rowData.airportDeparture);\r\n        setAirportArrivalModal(props.rowData.airportArrival);\r\n        setPassengerCountModal(props.rowData.passengerCount);\r\n        setCargoWeightMount(props.rowData.cargoWeightMount);\r\n        setCargoWeighIn(props.rowData.cargoWeightIn);\r\n        setCargoWeightOut(props.rowData.cargoWeightOut);\r\n        setFlightDateModal(props.rowData.dateTime);\r\n        getAllWorkTypesRequest();\r\n        getAllAirportsRequest();\r\n        getAllEmployeeResponsibleRequest();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (employeeResponsible)\r\n            setEmpRespOptions(employeeResponsible.map((emp: EmployeeResponsibleModel) => ({value: emp.fio})));\r\n    }, [employeeResponsible]);\r\n    useEffect(() => {\r\n        if (workTypes)\r\n            setWorkTypeOptions(workTypes.map((workTypes: WorkTypeModel) => ({value: workTypes.name})));\r\n    }, [workTypes]);\r\n    useEffect(() => {\r\n        if (airports)\r\n            setAirportsOptions(airports.map((airport: AirportModel) => ({value: airport.name})));\r\n    }, [airports]);\r\n    // -----\r\n\r\n    // Handlers\r\n    const updateFlightHandler = () => {\r\n        const idAirportArrival = airports?.find((airport: AirportModel) => airport.name === airportArrivalModal)?.id;\r\n        const idAirportDeparture = airports?.find((airport: AirportModel) => airport.name === airportDepartureModal)?.id;\r\n        const idWorkType = workTypes?.find((workType: WorkTypeModel) => workType.name === workTypeModal)?.id;\r\n        if (idAirportArrival && idAirportDeparture && idWorkType) {\r\n            props.setGridData((prev: RequestRoutesGridType[]) => {\r\n                let prevCopy = JSON.parse(JSON.stringify(prev));\r\n                return prevCopy.map((record: RequestRoutesGridType) => {\r\n                    if (record.id === props.rowData.id) {\r\n                        record.workType = workTypeModal\r\n                        record.employee = empRespModal\r\n                        record.dateTime = flightDateModal\r\n                        record.airportDeparture = airportDepartureModal\r\n                        record.airportArrival = airportArrivalModal\r\n                        record.passengerCount = passengerCountModal.toString()\r\n                        record.cargoWeightMount = cargoWeightMount.toString()\r\n                        record.cargoWeightIn = cargoWeighIn.toString()\r\n                        record.cargoWeightOut = cargoWeightOut.toString()\r\n                    }\r\n                    return record;\r\n                })\r\n            })\r\n        }\r\n        closeUpdateRouteModalHandler();\r\n    }\r\n    // -----\r\n    const closeUpdateRouteModalHandler = () => {\r\n        props.setVisible(false);\r\n        props.setRowData(null);\r\n        setWorkTypeModal(\"\");\r\n        setEmpRespModal(\"\");\r\n        setFlightDateModal(\"\");\r\n        setAirportDepartureModal(\"\");\r\n        setAirportArrivalModal(\"\");\r\n        setPassengerCountModal(0);\r\n        setCargoWeightMount(0);\r\n        setCargoWeightOut(0);\r\n        setCargoWeighIn(0);\r\n    }\r\n    const getEmpRespValue = (searchText: string) => {\r\n        if (employeeResponsible) {\r\n            return employeeResponsible.filter((emp: EmployeeResponsibleModel) => emp.fio.includes(searchText)).map((emp: EmployeeResponsibleModel) => ({value: emp.fio}));\r\n        }\r\n        return [];\r\n    }\r\n    const getWorkTypesValue = (searchText: string) => {\r\n        if (workTypes) {\r\n            return workTypes.filter((workType: WorkTypeModel) => workType.name.includes(searchText)).map((workType: WorkTypeModel) => ({value: workType.name}));\r\n        }\r\n        return [];\r\n    }\r\n    const getAirportsValue = (searchText: string) => {\r\n        if (airports) {\r\n            return airports.filter((airport: AirportModel) => airport.name.includes(searchText)).map((airport: AirportModel) => ({value: airport.name}));\r\n        }\r\n        return [];\r\n    }\r\n    // -----\r\n    return (\r\n        <Modal\r\n            title=\"Редактирование маршрута\"\r\n            okText={\"Сохранить\"}\r\n            centered\r\n            open={props.visible}\r\n            onOk={() => updateFlightHandler()}\r\n            onCancel={closeUpdateRouteModalHandler}\r\n            width={740}\r\n        >\r\n            <Flex gap={'small'} style={{width: '100%'}}>\r\n                <Flex vertical gap={\"small\"} style={{width: '100%'}}>\r\n                    <AutoComplete\r\n                        value={workTypeModal}\r\n                        size={'large'}\r\n                        options={workTypeOptions}\r\n                        style={{width: '100%'}}\r\n                        onSearch={(text) => setWorkTypeOptions(getWorkTypesValue(text))}\r\n                        placeholder={'Выберите вид работ'}\r\n                        notFoundContent={'Виды работ не найдены'}\r\n                        onSelect={(value, option) => setWorkTypeModal(value)}\r\n                    />\r\n                    <AutoComplete\r\n                        value={empRespModal}\r\n                        size={'large'}\r\n                        options={empRespOptions}\r\n                        style={{width: '100%'}}\r\n                        onSearch={(text) => setEmpRespOptions(getEmpRespValue(text))}\r\n                        placeholder={'Выберите ответственного'}\r\n                        notFoundContent={'Ответственные не найдены'}\r\n                        onSelect={(value, option) => setEmpRespModal(value)}\r\n                    />\r\n                    <DatePicker value={dayjs('2015/01/01', flightDateModal)} style={{width: '100%'}}\r\n                                size={'large'} showTime onChange={(value) => {\r\n                        if (value)\r\n                            setFlightDateModal(value)\r\n                    }} onOk={(value) => setFlightDateModal(value)}/>\r\n                    <AutoComplete\r\n                        value={airportDepartureModal}\r\n                        size={'large'}\r\n                        options={airportsOptions}\r\n                        style={{width: '100%'}}\r\n                        onSearch={(text) => setAirportsOptions(getAirportsValue(text))}\r\n                        placeholder={'Выберите аэропорт вылета'}\r\n                        notFoundContent={'Ответственные не найдены'}\r\n                        onSelect={(value, option) => setAirportDepartureModal(value)}\r\n                    />\r\n                    <AutoComplete\r\n                        value={airportArrivalModal}\r\n                        size={'large'}\r\n                        options={airportsOptions}\r\n                        style={{width: '100%'}}\r\n                        onSearch={(text) => setAirportsOptions(getAirportsValue(text))}\r\n                        placeholder={'Выберите аэропорт назанчения'}\r\n                        notFoundContent={'Ответственные не найдены'}\r\n                        onSelect={(value, option) => setAirportArrivalModal(value)}\r\n                    />\r\n                </Flex>\r\n                <Flex vertical gap={\"small\"} style={{width: '100%'}}>\r\n                    <InputNumber\r\n                        value={passengerCountModal}\r\n                        style={{width: '100%'}}\r\n                        size={'large'}\r\n                        min={0}\r\n                        onChange={(value) => {\r\n                            if (value)\r\n                                setPassengerCountModal(value);\r\n                        }}\r\n                        placeholder={'Введите колличество пассажиров'}\r\n                    />\r\n                    <InputNumber\r\n                        value={cargoWeightMount}\r\n                        style={{width: '100%'}}\r\n                        size={'large'}\r\n                        min={0}\r\n                        onChange={(value) => {\r\n                            if (value)\r\n                                setCargoWeightMount(value);\r\n                        }}\r\n                        placeholder={'Введите общий вес груза'}\r\n                    />\r\n                    <InputNumber\r\n                        value={cargoWeightOut}\r\n                        style={{width: '100%'}}\r\n                        size={'large'}\r\n                        min={0}\r\n                        onChange={(value) => {\r\n                            if (value)\r\n                                setCargoWeightOut(value);\r\n                        }}\r\n                        placeholder={'Введите вес груза на внешней подвеске'}\r\n                    />\r\n                    <InputNumber\r\n                        value={cargoWeighIn}\r\n                        style={{width: '100%'}}\r\n                        size={'large'}\r\n                        min={0}\r\n                        onChange={(value) => {\r\n                            if (value)\r\n                                setCargoWeighIn(value);\r\n                        }}\r\n                        placeholder={'Введите вес груза внутри физюляжа'}\r\n                    />\r\n                </Flex>\r\n            </Flex>\r\n        </Modal>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {\r\n    Button,\r\n    Collapse,\r\n    Divider,\r\n    Flex,\r\n    message,\r\n    Modal,\r\n    Select,\r\n    Spin,\r\n    Tooltip,\r\n    Typography,\r\n    Upload,\r\n    UploadProps\r\n} from \"antd\";\r\nimport {FilialModel} from \"../../models/FilialModel\";\r\nimport {PlusOutlined, RollbackOutlined, UploadOutlined} from \"@ant-design/icons\";\r\nimport {filialsAPI} from \"../../services/FilialsService\";\r\nimport {Navbar} from \"../../components/Layout/Header/Navbar\";\r\nimport {alignOptions, justifyOptions} from \"../../configs/constants\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {CreateRequestFilialType, RequestRoutesGridType} from \"./RequestsFilials.types\";\r\n//@ts-ignore\r\nimport {Column, DateColumn, ExtTreegroupedgrid, Grid} from '@sencha/ext-react-modern';\r\nimport {Ext} from \"../../index\";\r\nimport {CreateFlightModal} from \"../../components/RequestsByFilials/CreateRequestByFilials/CreateFlightModal\";\r\nimport {UpdateFlightModal} from \"../../components/RequestsByFilials/CreateRequestByFilials/UpdateFlightModal\";\r\nimport {requestsByFilialsAPI} from \"../../services/RequestFilialService\";\r\n\r\nconst {Text} = Typography;\r\n\r\nexport const CreateRequestByFilialsScreen = () => {\r\n    // States\r\n    const [messageApi, messageContextHolder] = message.useMessage();\r\n    const [selectedFilial, setSelectedFilial] = useState<string>(\"\");\r\n    const [file, setFile] = useState<any | null>(null);\r\n    const [gridData, setGridData] = useState<RequestRoutesGridType[]>([]);\r\n    const [selectedRecord, setSelectedRecord] = useState<RequestRoutesGridType | null>(null);\r\n    const [createFlightModalVisible, setCreateFlightModalVisible] = useState<boolean>(false);\r\n    const [updateFlightModalVisible, setUpdateFlightModalVisible] = useState<boolean>(false);\r\n    // -----\r\n\r\n    // Useful utils\r\n    let store = Ext.create('Ext.data.Store', {\r\n        data: gridData,\r\n        groupers: ['workType', 'employee'],\r\n        fields: [\r\n            {name: 'workType', type: 'string'},\r\n            {name: 'employee', type: 'string'},\r\n        ]\r\n    })\r\n    let navigate = useNavigate();\r\n    const propsFile: UploadProps = {\r\n        maxCount: 1,\r\n        customRequest: (e: any) => {\r\n            setFile([e.file])\r\n        },\r\n        onRemove: () => {\r\n            setFile([]);\r\n        },\r\n        fileList: file,\r\n    }\r\n    const missingFilialMessage = () => {\r\n        messageApi.warning('Вы не выбрали филиал');\r\n    };\r\n    // -----\r\n\r\n    // Web requests\r\n    const [getAllFilialsRequest, {\r\n        data: filials,\r\n        isLoading: isFilialsLoading,\r\n    }] = filialsAPI.useGetAllMutation();\r\n    const [createRequestByFilial, {\r\n        data: requestResponse,\r\n        isLoading: isCreateRequestByFilialLoading,\r\n    }] = requestsByFilialsAPI.useCreateMutation();\r\n    // -----\r\n\r\n    // Effects\r\n    useEffect(() => {\r\n        getAllFilialsRequest();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (selectedRecord !== null)\r\n            setUpdateFlightModalVisible(true);\r\n    }, [selectedRecord])\r\n    useEffect(() => {\r\n        if (gridData.length > 0) {\r\n            //@ts-ignore\r\n            document?.body?.querySelectorAll(\"ext-treegroupedgrid\")[0]?.cmp?.expandAll();\r\n        }\r\n    }, [gridData]);\r\n    useEffect(() => {\r\n        //@ts-ignore\r\n        document?.body?.querySelectorAll(\"ext-treegroupedgrid\")[0]?.cmp?.expandAll();\r\n    }, [createFlightModalVisible, updateFlightModalVisible]);\r\n    useEffect(() => {\r\n        if (requestResponse) {\r\n            if (file) {\r\n                const formData = new FormData();\r\n                formData.append(\"fileName\", file[0].name);\r\n                formData.append(\"idRequestFilial\", requestResponse.id);\r\n                formData.append(\"fileBody\", file[0]);\r\n                fetch('http://localhost:8080/flight/api/file/create', {\r\n                    method: 'POST',\r\n                    body: formData,\r\n                })\r\n                    .then((res) => {\r\n                        return res.text()\r\n                    })\r\n                    .then((m) => {\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log('Ошибка загрузки файла');\r\n                    })\r\n            }\r\n            return navigate(`/requestsFilials/${requestResponse.id}`);\r\n        }\r\n    }, [requestResponse])\r\n    // Handlers\r\n    const backBtnHandler = () => {\r\n        return navigate(`/requestsFilials`);\r\n    }\r\n    const createRequestHandler = () => {\r\n        if (selectedFilial) {\r\n            let request: CreateRequestFilialType = {\r\n                idRequestFilial: requestResponse?.id,\r\n                idFilial: selectedFilial,\r\n                routes: gridData\r\n            }\r\n            createRequestByFilial(request);\r\n        } else {\r\n            missingFilialMessage();\r\n        }\r\n    }\r\n    // -----\r\n    return (\r\n        <>\r\n            {messageContextHolder}\r\n            <CreateFlightModal visible={createFlightModalVisible} setVisible={setCreateFlightModalVisible}\r\n                               setGridData={setGridData}/>\r\n            {selectedRecord &&\r\n                <UpdateFlightModal visible={updateFlightModalVisible} setVisible={setUpdateFlightModalVisible}\r\n                                   setGridData={setGridData} rowData={selectedRecord} setRowData={setSelectedRecord}/>\r\n            }\r\n            <Flex gap=\"small\" vertical>\r\n                <Navbar/>\r\n                {(filials === undefined || isCreateRequestByFilialLoading) ?\r\n                    <Flex style={{height: window.innerHeight}} justify={justifyOptions.center}\r\n                          align={alignOptions.center}>\r\n                        <Spin size={'large'}/>\r\n                    </Flex> :\r\n                    <>\r\n                        <Flex justify={justifyOptions.flexStart}>\r\n                            <Flex gap=\"small\" vertical style={{margin: \"5px 10px 0 17px\"}}>\r\n                                <Flex gap=\"middle\" style={{margin: \"0 0 7px 0\"}}>\r\n                                    <Tooltip placement=\"bottomRight\" title={\"Вернуться в меню\"}>\r\n                                        <Button size={'large'} onClick={() => {\r\n                                            Modal.confirm({\r\n                                                onOk: () => backBtnHandler(),\r\n                                                okText: 'Да',\r\n                                                title: 'Вернуться в меню?',\r\n                                                content: 'На этой странице есть изменения, которые будут потеряны, если вы решите закрыть ее.',\r\n                                                footer: (_, {OkBtn, CancelBtn}) => (\r\n                                                    <>\r\n                                                        <CancelBtn/>\r\n                                                        <OkBtn/>\r\n                                                    </>\r\n                                                ),\r\n                                            });\r\n                                        }} icon={<RollbackOutlined/>}/>\r\n                                    </Tooltip>\r\n                                    <Tooltip title={\"Создать заявку\"} placement=\"right\">\r\n                                        <Button type={'primary'} ghost size={'large'} onClick={createRequestHandler}\r\n                                                icon={<PlusOutlined/>}/>\r\n                                    </Tooltip>\r\n                                </Flex>\r\n                                <Text>Код заявки <strong>N/A</strong></Text>\r\n                                <Text><strong>Заявка создается</strong></Text>\r\n                            </Flex>\r\n                            <Divider type={'vertical'}\r\n                                     style={{height: 120}}/>\r\n                            <Flex style={{margin: \"0 0 0 10px\"}} gap=\"small\" vertical>\r\n                                <Select\r\n                                    size={'middle'}\r\n                                    placeholder=\"Выберите филиал\"\r\n                                    loading={isFilialsLoading}\r\n                                    style={{width: 330}}\r\n                                    options={filials.map((filial: FilialModel): {\r\n                                        value: string,\r\n                                        label: string\r\n                                    } => ({value: filial.id.toString(), label: filial.name}))}\r\n                                    onSelect={(value) => setSelectedFilial(value)}\r\n                                />\r\n                                <Upload  {...propsFile} >\r\n                                    <Button\r\n                                        size={'middle'} style={{width: 330}}\r\n                                        icon={<UploadOutlined/>}>Добавить файл\r\n                                        полетной\r\n                                        заявки</Button>\r\n                                </Upload>\r\n                            </Flex>\r\n                        </Flex>\r\n                        <Collapse defaultActiveKey={['0']} items={[\r\n                            {\r\n                                key: '0',\r\n                                label: 'Плановые полеты',\r\n                                children:\r\n                                    <>\r\n                                        <Flex wrap=\"wrap\" gap=\"small\" justify={justifyOptions.flexStart}\r\n                                              style={{margin: \"0 0 15px 0\"}}>\r\n                                            <Button size={'middle'}\r\n                                                    style={{width: 152}}\r\n                                                    onClick={() => setCreateFlightModalVisible(true)}>Добавить\r\n                                                маршрут</Button>\r\n                                        </Flex>\r\n\r\n                                        {Ext.isDomReady &&\r\n                                            <ExtTreegroupedgrid\r\n                                                collapse={false}\r\n                                                style={{height: window.innerHeight - 325}}\r\n                                                store={store}\r\n                                                columnLines\r\n                                                grouped\r\n                                                shadow={false}\r\n\r\n                                                groupSummaryPosition={'docked'}\r\n                                                summaryPosition={'docked'}\r\n                                                onChilddoubletap={(event: any) => {\r\n                                                    setSelectedRecord(event.location.record.data);\r\n                                                }}\r\n                                                columns={[\r\n                                                    {\r\n                                                        text: 'Вид работ',\r\n                                                        dataIndex: 'workType',\r\n                                                        groupable: true,\r\n                                                        filterType: 'string',\r\n                                                        flex: 1,\r\n                                                        hidden: true\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Ответсвенный',\r\n                                                        dataIndex: 'employee',\r\n                                                        groupable: true,\r\n                                                        filterType: 'string',\r\n                                                        width: 200,\r\n                                                        hidden: true\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Дата и время вылета',\r\n                                                        dataIndex: 'dateTime',\r\n                                                        groupable: true,\r\n                                                        filterType: 'date',\r\n                                                        flex: 1\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Аэропорт вылета',\r\n                                                        dataIndex: 'airportDeparture',\r\n                                                        groupable: true,\r\n                                                        filterType: 'string',\r\n                                                        flex: 1\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Аэропорт назначения',\r\n                                                        dataIndex: 'airportArrival',\r\n                                                        groupable: true,\r\n                                                        filterType: 'string',\r\n                                                        flex: 1\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Кол-во пассажиров',\r\n                                                        dataIndex: 'passengerCount',\r\n                                                        xtype: 'numbercolumn',\r\n                                                        align: 'center',\r\n                                                        filterType: 'number',\r\n                                                        flex: 1\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Груз всего, тонн',\r\n                                                        dataIndex: 'cargoWeightMount',\r\n                                                        xtype: 'numbercolumn',\r\n                                                        align: 'center',\r\n                                                        filterType: 'number',\r\n                                                        flex: 1\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Груз на внешней подвеске, тонн',\r\n                                                        dataIndex: 'cargoWeightOut',\r\n                                                        xtype: 'numbercolumn',\r\n                                                        align: 'center',\r\n                                                        filterType: 'number',\r\n                                                        flex: 1\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Груз внутри фюзеляжа, тонн',\r\n                                                        dataIndex: 'cargoWeightIn',\r\n                                                        xtype: 'numbercolumn',\r\n                                                        align: 'center',\r\n                                                        filterType: 'number',\r\n                                                        flex: 1\r\n                                                    },\r\n                                                ]}\r\n                                                platformConfig={{\r\n                                                    desktop: {\r\n                                                        plugins: {\r\n                                                            groupingpanel: true,\r\n                                                            gridfilterbar: true\r\n                                                        }\r\n                                                    },\r\n                                                }}\r\n                                            >\r\n                                            </ExtTreegroupedgrid>\r\n                                        }\r\n                                    </>\r\n                            }]}/>\r\n                    </>\r\n                }\r\n            </Flex>\r\n        </>\r\n    )\r\n\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {Navbar} from \"../../components/Layout/Header/Navbar\";\r\nimport \"@sencha/best-react-grid/dist/themes/grui.css\";\r\nimport {Button, Flex, Select, Typography} from \"antd\";\r\nimport {justifyOptions, YEARS} from \"../../configs/constants\";\r\nimport {RequestsGridType} from \"./Requests.types\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n//@ts-ignore\r\nimport {ExtTreegroupedgrid} from '@sencha/ext-react-modern';\r\nimport {Ext} from \"../../index\";\r\nimport {requestAPI} from \"../../services/RequestService\";\r\n\r\nconst {Text} = Typography;\r\nexport const AllRequestsScreen = () => {\r\n    let navigate = useNavigate();\r\n    const [data, setData] = useState<RequestsGridType[]>([]);\r\n    const [getAllRequests, {\r\n        data: dataGetAllRequests,\r\n        isLoading: isLoadingGetAllRequests,\r\n    }] = requestAPI.useGetAllByYearMutation();\r\n    const [year, setYear] = useState<number>(2023);\r\n    const addBtnHandler = () => {\r\n        return navigate(`create`);\r\n    };\r\n    const selectYearHandler = (value: number) => {\r\n        setYear(value);\r\n        getAllRequests(value);\r\n    };\r\n    useEffect(() => {\r\n        getAllRequests(year)\r\n    }, []);\r\n    useEffect(() => {\r\n        if (dataGetAllRequests) {\r\n            setData(dataGetAllRequests)\r\n        }\r\n    }, [dataGetAllRequests]);\r\n    let store = Ext.create('Ext.data.Store', {\r\n        data: data,\r\n        groupers: [],\r\n        fields: [\r\n            {name: 'id', type: 'int'},\r\n            {name: 'createDate', type: 'date', dateFormat: 'c'},\r\n            {name: 'filial', type: 'string'},\r\n            {name: 'nameState', type: 'string'},\r\n        ],\r\n    })\r\n    return (\r\n        <Flex gap=\"small\" vertical>\r\n            <Navbar/>\r\n            <Flex style={{margin: \"0 0 0 8px\"}} gap={\"small\"} justify={justifyOptions.center}>\r\n                <Text style={{fontSize: 22, fontWeight: 500}}>Заявки на выполнение полетов филиалы</Text>\r\n            </Flex>\r\n            <Flex style={{margin: \"0 5px 0 5px\"}} gap={\"small\"} vertical={false} justify={justifyOptions.spaceBetween}>\r\n                <Button onClick={addBtnHandler}>Добавить</Button>\r\n                <Select\r\n                    disabled={isLoadingGetAllRequests}\r\n                    value={year}\r\n                    onChange={selectYearHandler}\r\n                    options={YEARS.map((year: number) => ({value: year, label: year.toString()}))}\r\n                />\r\n            </Flex>\r\n            <div style={{height: window.innerHeight}}>\r\n                {Ext.isDomReady &&\r\n                    <ExtTreegroupedgrid\r\n                        style={{height: '100%'}}\r\n                        store={store}\r\n                        columnLines\r\n                        grouped\r\n                        shadow={false}\r\n                        groupHeaderTpl='{name} ({group.length})'\r\n                        summaryPosition={'docked'}\r\n                        onChilddoubletap={(event: any) => {\r\n                            const id = event.location.record.data.id;\r\n                            return navigate(`${id}`);\r\n                        }}\r\n                        columns={[\r\n                            {\r\n                                text: 'Код',\r\n                                dataIndex: 'id',\r\n                                groupable: true,\r\n                                filterType: 'string',\r\n                                flex: 1\r\n                            },\r\n                            {\r\n                                text: 'Тип авиасообщения',\r\n                                dataIndex: 'aircraftTypeName',\r\n                                groupable: true,\r\n                                filterType: 'string',\r\n                                flex: 1\r\n                            },\r\n                            {\r\n                                text: 'Номер',\r\n                                dataIndex: 'docNum',\r\n                                groupable: true,\r\n                                filterType: 'string',\r\n                                flex: 1\r\n                            },\r\n                            {\r\n                                text: 'Дата вылета',\r\n                                dataIndex: 'flyDateStart',\r\n                                groupable: true,\r\n                                filterType: 'string',\r\n                                flex: 1\r\n                            },\r\n                            {\r\n                                text: 'Модель ВС',\r\n                                dataIndex: 'aircraftModelName',\r\n                                groupable: true,\r\n                                filterType: 'string',\r\n                                flex: 1\r\n                            },\r\n                            {\r\n                                text: 'Авиакомпания',\r\n                                dataIndex: 'airlineName',\r\n                                groupable: true,\r\n                                filterType: 'string',\r\n                                flex: 1\r\n                            },\r\n                            {\r\n                                text: 'Договор',\r\n                                dataIndex: 'docName',\r\n                                groupable: true,\r\n                                filterType: 'string',\r\n                                flex: 1\r\n                            },\r\n                            {\r\n                                text: 'Цель полета',\r\n                                dataIndex: 'flightTargetName',\r\n                                groupable: true,\r\n                                filterType: 'string',\r\n                                flex: 1\r\n                            },\r\n                            {\r\n                                text: 'Состояние',\r\n                                dataIndex: 'stateName',\r\n                                groupable: true,\r\n                                filterType: 'string',\r\n                                flex: 1\r\n                            },\r\n                            {\r\n                                text: 'Примечание',\r\n                                dataIndex: 'note',\r\n                                groupable: true,\r\n                                filterType: 'string',\r\n                                flex: 1\r\n                            },\r\n                        ]}\r\n                        platformConfig={{\r\n                            desktop: {\r\n                                plugins: {\r\n                                    groupingpanel: true,\r\n                                }\r\n                            },\r\n                        }}\r\n                    >\r\n                    </ExtTreegroupedgrid>\r\n                }\r\n            </div>\r\n        </Flex>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {Navbar} from \"../../components/Layout/Header/Navbar\";\r\nimport \"@sencha/best-react-grid/dist/themes/grui.css\";\r\nimport {Button, Flex, Select, Typography} from \"antd\";\r\nimport {justifyOptions, YEARS} from \"../../configs/constants\";\r\nimport {requestsByFilialsAPI} from \"../../services/RequestFilialService\";\r\nimport {RequestsByFilialsGridType} from \"./RequestsFilials.types\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n//@ts-ignore\r\nimport {ExtTreegroupedgrid} from '@sencha/ext-react-modern';\r\nimport {Ext} from \"../../index\";\r\n\r\nconst { Text } = Typography;\r\n\r\nexport const AllRequestsByFilialsScreen = () => {\r\n    let navigate = useNavigate();\r\n    const [data, setData] = useState<RequestsByFilialsGridType[]>([]);\r\n    const [getAllRequestsByFilials, {\r\n        data: dataGetAllRequestByFilials,\r\n        isLoading: isLoadingGetAllRequestByFilials,\r\n    }] = requestsByFilialsAPI.useGetAllByYearMutation();\r\n    const [year, setYear] = useState<number>(2023);\r\n    const addBtnHandler = () => {\r\n        return navigate(`create`);\r\n    };\r\n    const selectYearHandler = (value: number) => {\r\n        setYear(value);\r\n        getAllRequestsByFilials(value);\r\n    };\r\n    useEffect(() => {\r\n        getAllRequestsByFilials(year)\r\n    }, []);\r\n    useEffect(() => {\r\n        if (dataGetAllRequestByFilials) {\r\n            setData(dataGetAllRequestByFilials)\r\n        }\r\n    }, [dataGetAllRequestByFilials]);\r\n    let store = Ext.create('Ext.data.Store', {\r\n        data: data,\r\n        groupers: [],\r\n        fields: [\r\n            {name: 'id', type: 'int'},\r\n            {name: 'createDate', type: 'date', dateFormat: 'c'},\r\n            {name: 'filial', type: 'string'},\r\n            {name: 'nameState', type: 'string'},\r\n        ],\r\n    })\r\n    return (\r\n        <Flex gap=\"small\" vertical>\r\n            <Navbar/>\r\n            <Flex justify={justifyOptions.center}>\r\n                <Text style={{fontSize: 22, fontWeight: 500}}>Заявки на выполнение полетов</Text>\r\n            </Flex>\r\n            <Flex style={{margin: \"0 5px 0 5px\"}} gap={\"small\"} justify={justifyOptions.spaceBetween}>\r\n                <Button onClick={addBtnHandler}>Добавить</Button>\r\n                <Select\r\n                    disabled={isLoadingGetAllRequestByFilials}\r\n                    value={year}\r\n                    onChange={selectYearHandler}\r\n                    options={YEARS.map((year: number) => ({value: year, label: year.toString()}))}\r\n                />\r\n            </Flex>\r\n            <div style={{height: window.innerHeight}}>\r\n                {Ext.isDomReady &&\r\n                    <ExtTreegroupedgrid\r\n                        style={{height: '100%'}}\r\n                        store={store}\r\n                        columnLines\r\n                        grouped\r\n                        shadow={false}\r\n                        groupHeaderTpl='{name} ({group.length})'\r\n                        summaryPosition={'docked'}\r\n                        onChilddoubletap={(event: any) => {\r\n                            const id = event.location.record.data.id;\r\n                            return navigate(`${id}`);\r\n                        }}\r\n                        columns={[\r\n                            {\r\n                                text: 'ИД',\r\n                                dataIndex: 'id',\r\n                                groupable: true,\r\n                                filterType: 'string',\r\n                                width: 200\r\n                            },\r\n                            {\r\n                                text: 'Дата создания',\r\n                                dataIndex: 'createDate',\r\n                                groupable: true,\r\n                                filterType: 'list',\r\n                                width: 300,\r\n                            },\r\n                            {\r\n                                text: 'Филиал',\r\n                                dataIndex: 'nameFilial',\r\n                                groupable: true,\r\n                                summary: 'count',\r\n                                width: 300\r\n                            },\r\n                            {\r\n                                text: 'Состояние',\r\n                                dataIndex: 'nameState',\r\n                                groupable: true,\r\n                                summary: 'count',\r\n                                width: 300\r\n                            },\r\n                        ]}\r\n                        platformConfig={{\r\n                            desktop: {\r\n                                plugins: {\r\n                                    groupingpanel: true,\r\n                                }\r\n                            },\r\n                        }}\r\n                    >\r\n                    </ExtTreegroupedgrid>\r\n                }\r\n            </div>\r\n        </Flex>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {FileExcelOutlined, FilePdfOutlined, FileWordOutlined} from '@ant-design/icons';\r\nimport type {UploadProps} from 'antd';\r\nimport {message, Upload} from 'antd';\r\nimport {fileStorageAPI} from \"../../../services/FileStorageService\";\r\n\r\nconst {Dragger} = Upload;\r\n\r\nexport const FileUploadDND = (props: any) => {\r\n    const [fileList, setFileList] = useState<any[]>([]);\r\n    const propsFile: UploadProps = {\r\n        maxCount: 1,\r\n        customRequest: (e: any) => {\r\n            const formData = new FormData();\r\n            formData.append(\"fileName\", e.file.name);\r\n            formData.append(\"idRequest\", props.requestId);\r\n            formData.append(\"fileBody\", e.file);\r\n\r\n            fetch('http://localhost:8080/flight/api/file/addToRequest', {\r\n                method: 'POST',\r\n                body: formData,\r\n            })\r\n                .then((res) => {\r\n                    return res.text()\r\n                })\r\n                .then((id) => {\r\n                    setFileList(prev => prev.concat({\r\n                        uid: e.file.uid,\r\n                        id: id,\r\n                        name: e.file.name,\r\n                        status: \"done\",\r\n                        url: `http://localhost:8080/flight/api/file/get?id=${id}`,\r\n                        percent: 100\r\n                    }));\r\n                    message.success('Файл обновлен');\r\n                })\r\n                .catch((error) => {\r\n                    message.error('Ошибка загрузки файла');\r\n                })\r\n                .finally(() => {\r\n                    //setFileUploading(false);\r\n                });\r\n        },\r\n        beforeUpload: (file) => {\r\n            return true;\r\n        },\r\n        onRemove: (file: any) => {\r\n            let requestOptions = {\r\n                method: 'DELETE',\r\n                redirect: 'follow'\r\n            };\r\n            //@ts-ignore\r\n            fetch(`http://localhost:8080/flight/api/file/delete?id=${file.id}`, requestOptions)\r\n                .then(response => {\r\n                })\r\n                .then(result => {\r\n                    message.error('Файл удален');\r\n                    setFileList(prev => prev.filter(f => f.id !== file.id));\r\n                })\r\n                .catch(error => {\r\n                    message.error('Ошибка удаления файла');\r\n                    console.log('error', error);\r\n                });\r\n        },\r\n        fileList\r\n    }\r\n    const [getFilesRequest, {\r\n        data: getFilesData,\r\n        isLoading: isGetFilesLoading,\r\n    }] = fileStorageAPI.useGetAllMutation();\r\n    useEffect(() => {\r\n        console.log(props)\r\n        getFilesRequest(props.requestId);\r\n    }, []);\r\n    useEffect(() => {\r\n        if (getFilesData) {\r\n            setFileList(getFilesData);\r\n        }\r\n    }, [getFilesData]);\r\n    return (\r\n        <Dragger {...propsFile}>\r\n            <p style={{padding: '0 10px 0 10px'}} className=\"ant-upload-text\">Нажмите или перетащите файлы в эту\r\n                область, чтобы загрузить</p>\r\n        </Dragger>\r\n    );\r\n}\r\n","import {AutoComplete, Button, DatePicker, Flex, Form, InputNumber, Modal} from \"antd\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {WorkTypeModel} from \"../../../models/WorkTypeModel\";\r\nimport {EmployeeResponsibleModel} from \"../../../models/EmployeeResponsibleModel\";\r\nimport {AirportModel} from \"../../../models/AirportModel\";\r\nimport {workTypesAPI} from \"../../../services/WorkTypesService\";\r\nimport {airportsAPI} from \"../../../services/AirportsService\";\r\nimport {employeeResponsibleAPI} from \"../../../services/EmployeeResponsibleService\";\r\nimport dayjs from 'dayjs';\r\nimport {flightPlanAPI} from \"../../../services/FlightPlanService\";\r\nimport {justifyOptions} from \"../../../configs/constants\";\r\n\r\ntype ModalProps = {\r\n    visible: boolean,\r\n    setVisible: Function,\r\n    refresh: Function,\r\n    rowData: any,\r\n    setRowData: Function,\r\n}\r\nexport const UpdateFlightModal = (props: ModalProps) => {\r\n    // States\r\n    const [requestId] = useState<string>(() => {\r\n        return window.location.pathname.split(\"/\")[2]\r\n    });\r\n    const [empRespOptions, setEmpRespOptions] = useState<{ value: string }[]>([]);\r\n    const [workTypeOptions, setWorkTypeOptions] = useState<{ value: string }[]>([]);\r\n    const [airportsOptions, setAirportsOptions] = useState<{ value: string }[]>([]);\r\n    const [workTypeModal, setWorkTypeModal] = useState<string>(props.rowData.workType);\r\n    const [empRespModal, setEmpRespModal] = useState<string>(props.rowData.employee);\r\n    const [flightDateModal, setFlightDateModal] = useState<any>(\"\");\r\n    const [airportDepartureModal, setAirportDepartureModal] = useState<string>(\"\");\r\n    const [airportArrivalModal, setAirportArrivalModal] = useState<string>(\"\");\r\n    const [passengerCountModal, setPassengerCountModal] = useState<number>(-1);\r\n    const [cargoWeightMount, setCargoWeightMount] = useState<number>(-1);\r\n    const [cargoWeighIn, setCargoWeighIn] = useState<number>(-1);\r\n    const [cargoWeightOut, setCargoWeightOut] = useState<number>(-1);\r\n    // -----\r\n\r\n    // Useful utils\r\n    const formItemLayout = {labelCol: {span: 6}, wrapperCol: {span: 20}};\r\n    // -----\r\n\r\n    // Web requests\r\n    const [updateFlightPlan, {\r\n        data: updateFlightPlanData,\r\n    }] = flightPlanAPI.useUpdateMutation();\r\n    const [getAllWorkTypesRequest, {\r\n        data: workTypes,\r\n        isLoading: isWorkTypesLoading,\r\n    }] = workTypesAPI.useGetAllMutation();\r\n    const [getAllAirportsRequest, {\r\n        data: airports,\r\n        isLoading: isAirportsLoading,\r\n    }] = airportsAPI.useGetAllMutation();\r\n    const [getAllEmployeeResponsibleRequest, {\r\n        data: employeeResponsible,\r\n        isLoading: isEmployeeResponsibleLoading,\r\n    }] = employeeResponsibleAPI.useGetAllMutation();\r\n    const [deleteFlightPlan, {\r\n        data: deleteFlightPlanData,\r\n        isLoading: isDeleteFlightPlanLoading,\r\n    }] = flightPlanAPI.useDeleteMutation();\r\n    // -----\r\n\r\n    // Effects\r\n    useEffect(() => {\r\n        setAirportDepartureModal(props.rowData.airportDeparture);\r\n        setAirportArrivalModal(props.rowData.airportArrival);\r\n        setPassengerCountModal(props.rowData.passengerCount);\r\n        setCargoWeightMount(props.rowData.cargoWeightMount);\r\n        setCargoWeighIn(props.rowData.cargoWeightIn);\r\n        setCargoWeightOut(props.rowData.cargoWeightOut);\r\n        setFlightDateModal(props.rowData.dateTime);\r\n        getAllWorkTypesRequest();\r\n        getAllAirportsRequest();\r\n        getAllEmployeeResponsibleRequest();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (employeeResponsible)\r\n            setEmpRespOptions(employeeResponsible.map((emp: EmployeeResponsibleModel) => ({value: emp.fio})));\r\n    }, [employeeResponsible]);\r\n    useEffect(() => {\r\n        if (workTypes)\r\n            setWorkTypeOptions(workTypes.map((workTypes: WorkTypeModel) => ({value: workTypes.name})));\r\n    }, [workTypes]);\r\n    useEffect(() => {\r\n        if (airports)\r\n            setAirportsOptions(airports.map((airport: AirportModel) => ({value: airport.name})));\r\n    }, [airports]);\r\n    useEffect(() => {\r\n        if (updateFlightPlanData) {\r\n            props.refresh(requestId);\r\n            closeUpdateRouteModalHandler();\r\n        }\r\n    }, [updateFlightPlanData]);\r\n    useEffect(() => {\r\n        if (deleteFlightPlanData) {\r\n            props.refresh(requestId);\r\n            closeUpdateRouteModalHandler();\r\n        }\r\n    }, [deleteFlightPlanData])\r\n    // -----\r\n\r\n    // Handlers\r\n    const updateFlightHandler = () => {\r\n        const idAirportArrival = airports?.find((airport: AirportModel) => airport.name === airportArrivalModal)?.id;\r\n        const idAirportDeparture = airports?.find((airport: AirportModel) => airport.name === airportDepartureModal)?.id;\r\n        const idWorkType = workTypes?.find((workType: WorkTypeModel) => workType.name === workTypeModal)?.id;\r\n        const respEmp = employeeResponsible?.find((emp: EmployeeResponsibleModel) => emp.fio === empRespModal);\r\n        if (respEmp === undefined) {\r\n            console.log('Not Finded')\r\n        }\r\n        if (idAirportArrival && idAirportDeparture && idWorkType) {\r\n            updateFlightPlan({\r\n                id: props.rowData.id,\r\n                idWorkType,\r\n                idEmpResp: respEmp?.id,\r\n                idRoute: props.rowData.routeId,\r\n                flyDate: flightDateModal,\r\n                idAirportArrival,\r\n                idAirportDeparture,\r\n                passengerCount: passengerCountModal,\r\n                cargoWeightIn: cargoWeighIn,\r\n                cargoWeightOut: cargoWeightOut,\r\n                cargoWeightMount: cargoWeightMount,\r\n                idFuelPoint: '',\r\n                idRequest: ''\r\n            });\r\n        }\r\n    }\r\n    const closeUpdateRouteModalHandler = () => {\r\n        props.setVisible(false);\r\n        props.setRowData(null);\r\n        setWorkTypeModal(\"\");\r\n        setEmpRespModal(\"\");\r\n        setFlightDateModal(\"\");\r\n        setAirportDepartureModal(\"\");\r\n        setAirportArrivalModal(\"\");\r\n        setPassengerCountModal(-1);\r\n        setCargoWeightMount(-1);\r\n        setCargoWeightOut(-1);\r\n        setCargoWeighIn(-1);\r\n    }\r\n    const deleteFlightHandler = () => {\r\n        Modal.confirm({\r\n            onOk: () => deleteFlightPlan(props.rowData.id),\r\n            title: 'Удаление',\r\n            content: 'Вы точно хотите удалить маршрут?',\r\n            footer: (_, {OkBtn, CancelBtn}) => (\r\n                <>\r\n                    <CancelBtn/>\r\n                    <OkBtn/>\r\n                </>\r\n            ),\r\n        });\r\n    }\r\n    const getEmpRespValue = (searchText: string) => {\r\n        if (employeeResponsible) {\r\n            return employeeResponsible.filter((emp: EmployeeResponsibleModel) => emp.fio.includes(searchText)).map((emp: EmployeeResponsibleModel) => ({value: emp.fio}));\r\n        }\r\n        return [];\r\n    }\r\n    const getWorkTypesValue = (searchText: string) => {\r\n        if (workTypes) {\r\n            return workTypes.filter((workType: WorkTypeModel) => workType.name.includes(searchText)).map((workType: WorkTypeModel) => ({value: workType.name}));\r\n        }\r\n        return [];\r\n    }\r\n    const getAirportsValue = (searchText: string) => {\r\n        if (airports) {\r\n            return airports.filter((airport: AirportModel) => airport.name.includes(searchText)).map((airport: AirportModel) => ({value: airport.name}));\r\n        }\r\n        return [];\r\n    }\r\n    // -----\r\n    const Footer = () => {\r\n        return (\r\n            <Flex justify={justifyOptions.flexEnd} gap={'small'}>\r\n                <Button danger onClick={deleteFlightHandler}>Удалить</Button>\r\n                <Button onClick={closeUpdateRouteModalHandler}>Отмена</Button>\r\n                <Button type={'primary'} onClick={updateFlightHandler}>Сохранить</Button>\r\n            </Flex>\r\n        )\r\n    }\r\n    // -----\r\n    return (\r\n        <Modal\r\n            title=\"Редактирование маршрута\"\r\n            okText={\"Сохранить\"}\r\n            centered\r\n            open={props.visible}\r\n            onOk={() => updateFlightHandler()}\r\n            onCancel={closeUpdateRouteModalHandler}\r\n            width={740}\r\n            footer={Footer}\r\n        >\r\n            <Form\r\n                style={{maxWidth: 1200}}\r\n                layout=\"vertical\"\r\n            >\r\n                <Flex gap={'middle'} style={{width: '100%'}}>\r\n                    <Flex vertical gap={\"small\"} style={{width: '100%'}}>\r\n                        <Form.Item label=\"Воздушное судно\">\r\n                            <AutoComplete\r\n                                value={workTypeModal}\r\n                                size={'large'}\r\n                                options={workTypeOptions}\r\n                                style={{width: '100%'}}\r\n                                onSearch={(text) => setWorkTypeOptions(getWorkTypesValue(text))}\r\n                                placeholder={'Выберите вид работ'}\r\n                                notFoundContent={'Виды работ не найдены'}\r\n                                onSelect={(value, option) => setWorkTypeModal(value)}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Ответственное лицо\">\r\n                            <AutoComplete\r\n                                value={empRespModal}\r\n                                size={'large'}\r\n                                options={empRespOptions}\r\n                                style={{width: '100%'}}\r\n                                onSearch={(text) => setEmpRespOptions(getEmpRespValue(text))}\r\n                                placeholder={'Выберите ответственного'}\r\n                                notFoundContent={'Ответственные не найдены'}\r\n                                onSelect={(value, option) => setEmpRespModal(value)}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Дата и время вылета\">\r\n                            <DatePicker defaultValue={dayjs('2015/01/01', flightDateModal)} style={{width: '100%'}}\r\n                                        size={'large'} showTime onChange={(value) => {\r\n                                if (value)\r\n                                    setFlightDateModal(value)\r\n                            }} onOk={(value) => setFlightDateModal(value)}/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Аэропорт вылета\">\r\n                            <AutoComplete\r\n                                value={airportDepartureModal}\r\n                                size={'large'}\r\n                                options={airportsOptions}\r\n                                style={{width: '100%'}}\r\n                                onSearch={(text) => setAirportsOptions(getAirportsValue(text))}\r\n                                placeholder={'Выберите аэропорт вылета'}\r\n                                notFoundContent={'Ответственные не найдены'}\r\n                                onSelect={(value, option) => setAirportDepartureModal(value)}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Аэропорт назначения\">\r\n                            <AutoComplete\r\n                                value={airportArrivalModal}\r\n                                size={'large'}\r\n                                options={airportsOptions}\r\n                                style={{width: '100%'}}\r\n                                onSearch={(text) => setAirportsOptions(getAirportsValue(text))}\r\n                                placeholder={'Выберите аэропорт назанчения'}\r\n                                notFoundContent={'Ответственные не найдены'}\r\n                                onSelect={(value, option) => setAirportArrivalModal(value)}\r\n                            />\r\n                        </Form.Item>\r\n                    </Flex>\r\n                    <Flex vertical gap={\"small\"} style={{width: '100%'}}>\r\n                        <Form.Item label=\"Место дозаправки\">\r\n                            <AutoComplete\r\n                                value={airportArrivalModal}\r\n                                size={'large'}\r\n                                options={airportsOptions}\r\n                                style={{width: '100%'}}\r\n                                onSearch={(text) => setAirportsOptions(getAirportsValue(text))}\r\n                                placeholder={'Выберите место дозаправки'}\r\n                                notFoundContent={'Место дозаправки не найдено'}\r\n                                onSelect={(value, option) => setAirportArrivalModal(value)}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Колличество пассажиров\">\r\n                            <InputNumber\r\n                                value={passengerCountModal}\r\n                                style={{width: '100%'}}\r\n                                size={'large'}\r\n                                min={0}\r\n                                onChange={(value) => {\r\n                                    if (value)\r\n                                        setPassengerCountModal(value);\r\n                                }}\r\n                                placeholder={'Введите колличество пассажиров'}\r\n                            /></Form.Item>\r\n                        <Form.Item label=\"Общий вес груза\">\r\n                            <InputNumber\r\n                                value={cargoWeightMount}\r\n                                style={{width: '100%'}}\r\n                                size={'large'}\r\n                                min={0}\r\n                                onChange={(value) => {\r\n                                    if (value)\r\n                                        setCargoWeightMount(value);\r\n                                }}\r\n                                placeholder={'Введите общий вес груза'}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Вес груза на внешней подвеске\">\r\n                            <InputNumber\r\n                                value={cargoWeightOut}\r\n                                style={{width: '100%'}}\r\n                                size={'large'}\r\n                                min={0}\r\n                                onChange={(value) => {\r\n                                    if (value)\r\n                                        setCargoWeightOut(value);\r\n                                }}\r\n                                placeholder={'Введите вес груза на внешней подвеске'}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Вес груза внутри физюляжа\">\r\n                            <InputNumber\r\n                                value={cargoWeighIn}\r\n                                style={{width: '100%'}}\r\n                                size={'large'}\r\n                                min={0}\r\n                                onChange={(value) => {\r\n                                    if (value)\r\n                                        setCargoWeighIn(value);\r\n                                }}\r\n                                placeholder={'Введите вес груза внутри физюляжа'}\r\n                            />\r\n                        </Form.Item>\r\n                    </Flex>\r\n                </Flex>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}","import {AutoComplete, DatePicker, Flex, InputNumber, Modal} from \"antd\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {WorkTypeModel} from \"../../../models/WorkTypeModel\";\r\nimport {EmployeeResponsibleModel} from \"../../../models/EmployeeResponsibleModel\";\r\nimport {AirportModel} from \"../../../models/AirportModel\";\r\nimport {filialsAPI} from \"../../../services/FilialsService\";\r\nimport {workTypesAPI} from \"../../../services/WorkTypesService\";\r\nimport {airportsAPI} from \"../../../services/AirportsService\";\r\nimport {employeeResponsibleAPI} from \"../../../services/EmployeeResponsibleService\";\r\nimport {flightPlanAPI} from \"../../../services/FlightPlanService\";\r\n\r\ntype ModalProps = {\r\n    visible: boolean,\r\n    setVisible: Function,\r\n    refresh: Function,\r\n}\r\nexport const CreateFlightModal = (props: ModalProps) => {\r\n    // States\r\n    const [requestId] = useState<string>(() => {\r\n        return window.location.pathname.split(\"/\")[2]\r\n    });\r\n    const [empRespOptions, setEmpRespOptions] = useState<{ value: string }[]>([]);\r\n    const [workTypeOptions, setWorkTypeOptions] = useState<{ value: string }[]>([]);\r\n    const [airportsOptions, setAirportsOptions] = useState<{ value: string }[]>([]);\r\n    const [workTypeModal, setWorkTypeModal] = useState<string>(\"\");\r\n    const [empRespModal, setEmpRespModal] = useState<string>(\"\");\r\n    const [flightDateModal, setFlightDateModal] = useState<any>(\"\"); // Date.js format\r\n    const [airportDepartureModal, setAirportDepartureModal] = useState<string>(\"\");\r\n    const [airportArrivalModal, setAirportArrivalModal] = useState<string>(\"\");\r\n    const [passengerCountModal, setPassengerCountModal] = useState<number>(0);\r\n    const [cargoWeightMount, setCargoWeightMount] = useState<number>(0);\r\n    const [cargoWeighIn, setCargoWeighIn] = useState<number>(0);\r\n    const [cargoWeightOut, setCargoWeightOut] = useState<number>(0);\r\n    // -----\r\n\r\n    // Web requests\r\n    const [createFlightPlan, {\r\n        data: createdFlightPlanData,\r\n    }] = flightPlanAPI.useCreateMutation();\r\n    const [getAllFilialsRequest, {\r\n        data: filials,\r\n        isLoading: isFilialsLoading,\r\n    }] = filialsAPI.useGetAllMutation();\r\n    const [getAllWorkTypesRequest, {\r\n        data: workTypes,\r\n        isLoading: isWorkTypesLoading,\r\n    }] = workTypesAPI.useGetAllMutation();\r\n    const [getAllAirportsRequest, {\r\n        data: airports,\r\n        isLoading: isAirportsLoading,\r\n    }] = airportsAPI.useGetAllMutation();\r\n    const [getAllEmployeeResponsibleRequest, {\r\n        data: employeeResponsible,\r\n        isLoading: isEmployeeResponsibleLoading,\r\n    }] = employeeResponsibleAPI.useGetAllMutation();\r\n    // -----\r\n\r\n    // Effects\r\n    useEffect(() => {\r\n        getAllFilialsRequest();\r\n        getAllWorkTypesRequest();\r\n        getAllAirportsRequest();\r\n        getAllEmployeeResponsibleRequest();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (employeeResponsible)\r\n            setEmpRespOptions(employeeResponsible.map((emp: EmployeeResponsibleModel) => ({value: emp.fio})));\r\n    }, [employeeResponsible]);\r\n    useEffect(() => {\r\n        if (workTypes)\r\n            setWorkTypeOptions(workTypes.map((workTypes: WorkTypeModel) => ({value: workTypes.name})));\r\n    }, [workTypes]);\r\n    useEffect(() => {\r\n        if (airports)\r\n            setAirportsOptions(airports.map((airport: AirportModel) => ({value: airport.name})));\r\n    }, [airports]);\r\n    useEffect(() => {\r\n        if (createdFlightPlanData)\r\n            props.refresh(requestId);\r\n    }, [createdFlightPlanData]);\r\n    // -----\r\n    // Handlers\r\n    const createRouteHandler = () => {\r\n        if (workTypes && employeeResponsible && airports) {\r\n            const workType = workTypes.find((workType: WorkTypeModel) => workType.name === workTypeModal);\r\n            const respEmp = employeeResponsible.find((emp: EmployeeResponsibleModel) => emp.fio === empRespModal);\r\n            const airportArrival = airports.find((airport: AirportModel) => airport.name === airportArrivalModal);\r\n            const airportDeparture = airports.find((airport: AirportModel) => airport.name === airportDepartureModal);\r\n            if (workType === undefined) {\r\n                console.log('Not Finded')\r\n            }\r\n            if (respEmp === undefined) {\r\n                console.log('Not Finded')\r\n            }\r\n            if (airportDeparture === undefined) {\r\n                console.log('Not Finded')\r\n            }\r\n            if (airportArrival === undefined) {\r\n                console.log('Not Finded')\r\n            }\r\n            if (passengerCountModal !== null) {\r\n                console.log('Pasc count ')\r\n            }\r\n            if (cargoWeightMount !== null) {\r\n                console.log('Pasc count ')\r\n            }\r\n            if (cargoWeightOut !== null) {\r\n                console.log('Pasc count ')\r\n            }\r\n            if (cargoWeighIn !== null) {\r\n                console.log('Pasc count ')\r\n            }\r\n            if (workType && airportArrival && airportDeparture && respEmp) {\r\n                closeCreateRouteModalHandler();\r\n                createFlightPlan({\r\n                    idRequest: requestId,\r\n                    idFuelPoint: \"\",\r\n                    idWorkType: workType.id,\r\n                    flyDate: flightDateModal?.format('YYYY-MM-DD'),\r\n                    idAirportArrival: airportArrival.id,\r\n                    idAirportDeparture: airportDeparture.id,\r\n                    idEmpResp: respEmp.id,\r\n                    passengerCount: passengerCountModal,\r\n                    cargoWeightIn: cargoWeighIn,\r\n                    cargoWeightOut: cargoWeightOut,\r\n                    cargoWeightMount: cargoWeightMount\r\n                });\r\n            }\r\n        }\r\n    }\r\n    const closeCreateRouteModalHandler = () => {\r\n        props.setVisible(false);\r\n        setWorkTypeModal(\"\");\r\n        setEmpRespModal(\"\");\r\n        setFlightDateModal(\"\");\r\n        setAirportDepartureModal(\"\");\r\n        setAirportArrivalModal(\"\");\r\n        setPassengerCountModal(0);\r\n        setCargoWeightMount(0);\r\n        setCargoWeightOut(0);\r\n        setCargoWeighIn(0);\r\n    }\r\n    const getEmpRespValue = (searchText: string) => {\r\n        if (employeeResponsible) {\r\n            return employeeResponsible.filter((emp: EmployeeResponsibleModel) => emp.fio.includes(searchText)).map((emp: EmployeeResponsibleModel) => ({value: emp.fio}));\r\n        }\r\n        return [];\r\n    }\r\n    const getWorkTypesValue = (searchText: string) => {\r\n        if (workTypes) {\r\n            return workTypes.filter((workType: WorkTypeModel) => workType.name.includes(searchText)).map((workType: WorkTypeModel) => ({value: workType.name}));\r\n        }\r\n        return [];\r\n    }\r\n    const getAirportsValue = (searchText: string) => {\r\n        if (airports) {\r\n            return airports.filter((airport: AirportModel) => airport.name.includes(searchText)).map((airport: AirportModel) => ({value: airport.name}));\r\n        }\r\n        return [];\r\n    }\r\n    // -----\r\n    return (\r\n        <Modal\r\n            title=\"Новый маршрут\"\r\n            okText={\"Добавить\"}\r\n            centered\r\n            open={props.visible}\r\n            onOk={() => createRouteHandler()}\r\n            onCancel={closeCreateRouteModalHandler}\r\n            width={740}\r\n        >\r\n            <Flex gap={'small'} style={{width: '100%'}}>\r\n                <Flex vertical gap={\"small\"} style={{width: '100%'}}>\r\n                    <AutoComplete\r\n                        value={workTypeModal}\r\n                        size={'large'}\r\n                        options={workTypeOptions}\r\n                        style={{width: '100%'}}\r\n                        onSearch={(text) => setWorkTypeOptions(getWorkTypesValue(text))}\r\n                        placeholder={'Выберите вид работ'}\r\n                        notFoundContent={'Виды работ не найдены'}\r\n                        onSelect={(value, option) => setWorkTypeModal(value)}\r\n                    />\r\n                    <AutoComplete\r\n                        value={empRespModal}\r\n                        size={'large'}\r\n                        options={empRespOptions}\r\n                        style={{width: '100%'}}\r\n                        onSearch={(text) => setEmpRespOptions(getEmpRespValue(text))}\r\n                        placeholder={'Выберите ответственного'}\r\n                        notFoundContent={'Ответственные не найдены'}\r\n                        onSelect={(value, option) => setEmpRespModal(value)}\r\n                    />\r\n                    <DatePicker value={flightDateModal} style={{width: '100%'}} size={'large'} showTime\r\n                                onChange={(value) => {\r\n                                    if (value)\r\n                                        setFlightDateModal(value)\r\n                                }} onOk={(value) => setFlightDateModal(value)}/>\r\n                    <AutoComplete\r\n                        value={airportDepartureModal}\r\n                        size={'large'}\r\n                        options={airportsOptions}\r\n                        style={{width: '100%'}}\r\n                        onSearch={(text) => setAirportsOptions(getAirportsValue(text))}\r\n                        placeholder={'Выберите аэропорт вылета'}\r\n                        notFoundContent={'Ответственные не найдены'}\r\n                        onSelect={(value, option) => setAirportDepartureModal(value)}\r\n                    />\r\n                    <AutoComplete\r\n                        value={airportArrivalModal}\r\n                        size={'large'}\r\n                        options={airportsOptions}\r\n                        style={{width: '100%'}}\r\n                        onSearch={(text) => setAirportsOptions(getAirportsValue(text))}\r\n                        placeholder={'Выберите аэропорт назанчения'}\r\n                        notFoundContent={'Ответственные не найдены'}\r\n                        onSelect={(value, option) => setAirportArrivalModal(value)}\r\n                    />\r\n                </Flex>\r\n                <Flex vertical gap={\"small\"} style={{width: '100%'}}>\r\n                    <InputNumber\r\n                        value={passengerCountModal}\r\n                        style={{width: '100%'}}\r\n                        size={'large'}\r\n                        min={0}\r\n                        onChange={(value) => {\r\n                            if (value)\r\n                                setPassengerCountModal(value);\r\n                        }}\r\n                        placeholder={'Введите колличество пассажиров'}\r\n                    />\r\n                    <InputNumber\r\n                        value={cargoWeightMount}\r\n                        style={{width: '100%'}}\r\n                        size={'large'}\r\n                        min={0}\r\n                        onChange={(value) => {\r\n                            if (value)\r\n                                setCargoWeightMount(value);\r\n                        }}\r\n                        placeholder={'Введите общий вес груза'}\r\n                    />\r\n                    <InputNumber\r\n                        value={cargoWeightOut}\r\n                        style={{width: '100%'}}\r\n                        size={'large'}\r\n                        min={0}\r\n                        onChange={(value) => {\r\n                            if (value)\r\n                                setCargoWeightOut(value);\r\n                        }}\r\n                        placeholder={'Введите вес груза на внешней подвеске'}\r\n                    />\r\n                    <InputNumber\r\n                        value={cargoWeighIn}\r\n                        style={{width: '100%'}}\r\n                        size={'large'}\r\n                        min={0}\r\n                        onChange={(value) => {\r\n                            if (value)\r\n                                setCargoWeighIn(value);\r\n                        }}\r\n                        placeholder={'Введите вес груза внутри физюляжа'}\r\n                    />\r\n                </Flex>\r\n            </Flex>\r\n        </Modal>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {Button, Modal, Table} from 'antd';\r\nimport {RequestHistoryGridType} from \"../../../screens/Requests/Requests.types\";\r\nimport {requestAPI} from \"../../../services/RequestService\";\r\n\r\ntype ModalProps = {\r\n    visible: boolean,\r\n    setVisible: Function,\r\n    requestId: string\r\n}\r\n\r\nexport const HistoryModal = (props: ModalProps) => {\r\n    // States\r\n    const [gridData, setGridData] = useState<RequestHistoryGridType[]>([])\r\n    // -----\r\n    // Web requests\r\n    const [getHistoryRequest, {\r\n        data: getRequestHistoryData,\r\n        isLoading: isGetHistoryRequestLoading,\r\n    }] = requestAPI.useGetHistoryMutation();\r\n    // -----\r\n    // Effects\r\n    useEffect(() => {\r\n        getHistoryRequest(props.requestId);\r\n    }, []);\r\n    useEffect(() => {\r\n        if (getRequestHistoryData)\r\n            setGridData(getRequestHistoryData);\r\n    }, [getRequestHistoryData]);\r\n    // -----\r\n    // Useful utils\r\n\r\n    // -----\r\n    // Handlers\r\n    const handleOk = () => {\r\n        props.setVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        props.setVisible(false);\r\n    };\r\n    // -----\r\n\r\n    return (\r\n        <Modal title=\"История\" open={props.visible} onOk={handleOk} onCancel={handleCancel} width={1200} footer={[\r\n            <Button key=\"back\" onClick={handleCancel}>\r\n                Назад\r\n            </Button>,\r\n        ]}>\r\n            <Table\r\n                bordered={true}\r\n                size={'small'}\r\n                pagination={{pageSizeOptions: ['10', '15', '20', '25']}}\r\n                columns={[\r\n                    {\r\n                        title: 'Дата изменения',\r\n                        key: 'date',\r\n                        dataIndex: 'date',\r\n\r\n                    },\r\n                    {\r\n                        title: 'Пользователь',\r\n                        key: 'employee',\r\n                        dataIndex: 'employee',\r\n                    },\r\n                    {\r\n                        title: 'Поле',\r\n                        key: 'field',\r\n                        dataIndex: 'field',\r\n                    },\r\n                    {\r\n                        title: 'Действие',\r\n                        key: 'action',\r\n                        dataIndex: 'action',\r\n                    },\r\n                    {\r\n                        title: 'Новое значение',\r\n                        key: 'newValue',\r\n                        dataIndex: 'newValue'\r\n                    },\r\n                    {\r\n                        title: 'Старое значение',\r\n                        key: 'oldValue',\r\n                        dataIndex: 'oldValue',\r\n                    },\r\n                ]} dataSource={gridData} loading={isGetHistoryRequestLoading}/>\r\n        </Modal>\r\n    );\r\n};\r\n","import {Form, InputNumber, Modal, Select} from \"antd\";\r\nimport {filialsAPI} from \"../../../services/FilialsService\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {FilialModel} from \"../../../models/FilialModel\";\r\nimport {workTypesAPI} from \"../../../services/WorkTypesService\";\r\nimport {WorkTypeModel} from \"../../../models/WorkTypeModel\";\r\nimport {requestAPI} from \"../../../services/RequestService\";\r\n\r\nexport type CostCreateModalData = {\r\n    selectedFilialId: string,\r\n    selectedWorkType: string,\r\n    flightDuration: number,\r\n    flightCost: number,\r\n    costId: string\r\n}\r\n\r\ntype ModalProps = {\r\n    requestId: string,\r\n    visible: boolean,\r\n    setVisible: Function,\r\n    refresh: Function,\r\n}\r\n\r\nexport const CreateCostModal = (props: ModalProps) => {\r\n    // States\r\n    const [selectedFilial, setSelectedFilial] = useState<string | null>(null);\r\n    const [selectedWorkType, setSelectedWorkType] = useState<string | null>(null);\r\n    const [flightDuration, setFlightDuration] = useState<number>(0);\r\n    const [flightCost, setFlightCost] = useState<number>(0);\r\n    // -----\r\n\r\n    // Useful utils\r\n    // -----\r\n\r\n    // Web requests\r\n    const [getAllFilialsRequest, {\r\n        data: filials,\r\n        isLoading: isFilialsLoading,\r\n    }] = filialsAPI.useGetAllMutation();\r\n    const [getAllWorkTypesRequest, {\r\n        data: workTypes,\r\n        isLoading: isWorkTypesLoading,\r\n    }] = workTypesAPI.useGetAllMutation();\r\n    const [createCostRequest, {\r\n        data: createCostData,\r\n        isLoading: isCreateCostLoading,\r\n    }] = requestAPI.useCreateCostMutation();\r\n    // -----\r\n\r\n    // Effects\r\n    useEffect(() => {\r\n        getAllFilialsRequest();\r\n        getAllWorkTypesRequest();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (createCostData) {\r\n            props.setVisible(false);\r\n            props.refresh(props.requestId);\r\n        }\r\n    }, [createCostData]);\r\n    // -----\r\n\r\n    // Handlers\r\n    const setSelectedFilialHandler = (value: string, option: any) => {\r\n        setSelectedFilial(option.value);\r\n    }\r\n    const setSelectedWorkTypeHandler = (value: string, option: any) => {\r\n        setSelectedWorkType(option.value);\r\n    }\r\n    const setFlightDurationHandler = (value: number | null) => {\r\n        if (value) {\r\n            setFlightDuration(value);\r\n        }\r\n    }\r\n    const setFlightCostHandler = (value: number | null) => {\r\n        if (value) {\r\n            setFlightCost(value);\r\n        }\r\n    }\r\n    const createCostHandler = () => {\r\n        if (selectedWorkType && selectedFilial && flightDuration && flightCost) {\r\n            // createCostRequest({\r\n            //     requestId: props.requestId,\r\n            //     filialId: selectedFilial,\r\n            //     workTypeId: selectedWorkType,\r\n            //     duration: flightDuration,\r\n            //     cost: flightCost\r\n            // })\r\n        } else {\r\n\r\n        }\r\n    }\r\n    const closeModalHandler = () => {\r\n        props.setVisible(false);\r\n    }\r\n// -----\r\n\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Новая запись чего-то то там...\"\r\n            okText={\"Добавить\"}\r\n            centered\r\n            open={props.visible}\r\n            onOk={createCostHandler}\r\n            onCancel={closeModalHandler}\r\n            width={600}\r\n        >\r\n            <Form\r\n                // @ts-ignore\r\n                labelCol={{span: 6}}\r\n                wrapperCol={{span: 18}}\r\n            >\r\n                <Form.Item label=\"Филиал\">\r\n                    <Select\r\n                        value={selectedFilial}\r\n                        disabled={isFilialsLoading}\r\n                        size={'middle'}\r\n                        placeholder=\"Выберите филиал\"\r\n                        loading={isFilialsLoading}\r\n                        style={{width: '100%'}}\r\n                        options={filials?.map((filial: FilialModel): {\r\n                            value: string,\r\n                            label: string\r\n                        } => ({\r\n                            value: filial.id.toString(),\r\n                            label: `${filial.name}`\r\n                        }))}\r\n                        onSelect={setSelectedFilialHandler}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item label=\"Вид работ\">\r\n                    <Select\r\n                        value={selectedWorkType}\r\n                        disabled={isWorkTypesLoading}\r\n                        size={'middle'}\r\n                        placeholder=\"Выберите вид работ\"\r\n                        loading={isWorkTypesLoading}\r\n                        style={{width: '100%'}}\r\n                        options={workTypes?.map((workType: WorkTypeModel): {\r\n                            value: string,\r\n                            label: string\r\n                        } => ({\r\n                            value: workType.id.toString(),\r\n                            label: `${workType.name}`\r\n                        }))}\r\n                        onSelect={setSelectedWorkTypeHandler}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item label=\"Время налета (час)\">\r\n                    <InputNumber style={{width: 200}} value={flightDuration}\r\n                                 onChange={setFlightDurationHandler}/>\r\n                </Form.Item>\r\n                <Form.Item label=\"Затраты (руб)\">\r\n                    <InputNumber style={{width: 200}} value={flightCost}\r\n                                 onChange={setFlightCostHandler}/>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}","import {Form, InputNumber, Modal, Select} from \"antd\";\r\nimport {filialsAPI} from \"../../../services/FilialsService\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {FilialModel} from \"../../../models/FilialModel\";\r\nimport {workTypesAPI} from \"../../../services/WorkTypesService\";\r\nimport {WorkTypeModel} from \"../../../models/WorkTypeModel\";\r\nimport {requestAPI} from \"../../../services/RequestService\";\r\n\r\nexport type CostEditModalData = {\r\n    selectedFilialId: string,\r\n    selectedWorkType: string,\r\n    flightDuration: number,\r\n    flightCost: number,\r\n    costId: string\r\n}\r\n\r\ntype ModalProps = {\r\n    requestId: string,\r\n    visible: boolean,\r\n    setVisible: Function,\r\n    refresh: Function,\r\n    data: CostEditModalData,\r\n}\r\n\r\nexport const EditCostModal = (props: ModalProps) => {\r\n    // States\r\n    const [selectedFilial, setSelectedFilial] = useState<string>(props.data.selectedFilialId);\r\n    const [selectedWorkType, setSelectedWorkType] = useState<string>(props.data.selectedWorkType);\r\n    const [flightDuration, setFlightDuration] = useState<number>(props.data.flightDuration);\r\n    const [flightCost, setFlightCost] = useState<number>(props.data.flightCost);\r\n    // -----\r\n\r\n    // Useful utils\r\n    // -----\r\n\r\n    // Web requests\r\n    const [getAllFilialsRequest, {\r\n        data: filials,\r\n        isLoading: isFilialsLoading,\r\n    }] = filialsAPI.useGetAllMutation();\r\n    const [getAllWorkTypesRequest, {\r\n        data: workTypes,\r\n        isLoading: isWorkTypesLoading,\r\n    }] = workTypesAPI.useGetAllMutation();\r\n    const [updateCostRequest, {\r\n        data: updateCostData,\r\n        isLoading: isUpdateCostLoading,\r\n    }] = requestAPI.useUpdateCostMutation();\r\n    // -----\r\n\r\n    // Effects\r\n    useEffect(() => {\r\n        getAllFilialsRequest();\r\n        getAllWorkTypesRequest();\r\n        setSelectedFilial(props.data.selectedFilialId);\r\n    }, []);\r\n    useEffect(() => {\r\n        if (updateCostData) {\r\n            props.setVisible(false);\r\n            props.refresh(props.requestId);\r\n        }\r\n    }, [updateCostData]);\r\n    // -----\r\n\r\n    // Handlers\r\n    const setSelectedFilialHandler = (value: string, option: any) => {\r\n        setSelectedFilial(option.value);\r\n    }\r\n    const setSelectedWorkTypeHandler = (value: string, option: any) => {\r\n        setSelectedWorkType(option.value);\r\n    }\r\n    const setFlightDurationHandler = (value: number | null) => {\r\n        if (value) {\r\n            setFlightDuration(value);\r\n        }\r\n    }\r\n    const setFlightCostHandler = (value: number | null) => {\r\n        if (value) {\r\n            setFlightCost(value);\r\n        }\r\n    }\r\n    const updateCostHandler = () => {\r\n        if (selectedWorkType && selectedFilial && flightDuration && flightCost) {\r\n            updateCostRequest({\r\n                costId: props.data.costId,\r\n                requestId: props.requestId,\r\n                filialId: selectedFilial,\r\n                workTypeId: selectedWorkType,\r\n                duration: flightDuration,\r\n                cost: flightCost\r\n            })\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n    const closeModalHandler = () => {\r\n        props.setVisible(false);\r\n    }\r\n// -----\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Редактирование\"\r\n            okText={\"Сохранить\"}\r\n            centered\r\n            open={props.visible}\r\n            onOk={updateCostHandler}\r\n            onCancel={closeModalHandler}\r\n            width={600}\r\n        >\r\n            <Form\r\n                // @ts-ignore\r\n                labelCol={{span: 6}}\r\n                wrapperCol={{span: 18}}\r\n            >\r\n                <Form.Item label=\"Филиал\">\r\n                    <Select\r\n                        defaultValue={selectedFilial.toString()}\r\n                        disabled={isFilialsLoading}\r\n                        size={'middle'}\r\n                        placeholder=\"Выберите филиал\"\r\n                        loading={isFilialsLoading}\r\n                        style={{width: '100%'}}\r\n                        options={filials?.map((filial: FilialModel): {\r\n                            value: string,\r\n                            label: string\r\n                        } => ({\r\n                            value: filial.id.toString(),\r\n                            label: `${filial.name}`\r\n                        }))}\r\n                        onSelect={setSelectedFilialHandler}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item label=\"Вид работ\">\r\n                    <Select\r\n                        defaultValue={selectedWorkType.toString()}\r\n                        disabled={isWorkTypesLoading}\r\n                        size={'middle'}\r\n                        placeholder=\"Выберите вид работ\"\r\n                        loading={isWorkTypesLoading}\r\n                        style={{width: '100%'}}\r\n                        options={workTypes?.map((workType: WorkTypeModel): {\r\n                            value: string,\r\n                            label: string\r\n                        } => ({\r\n                            value: workType.id.toString(),\r\n                            label: `${workType.name}`\r\n                        }))}\r\n                        onSelect={setSelectedWorkTypeHandler}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item label=\"Время налета (час)\">\r\n                    <InputNumber style={{width: 200}} value={flightDuration}\r\n                                 onChange={setFlightDurationHandler}/>\r\n                </Form.Item>\r\n                <Form.Item label=\"Затраты (руб)\">\r\n                    <InputNumber style={{width: 200}} value={flightCost}\r\n                                 onChange={setFlightCostHandler}/>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {RangeValue} from 'rc-picker/lib/interface'\r\nimport dayjs, {Dayjs} from \"dayjs\";\r\nimport {Button, Collapse, DatePicker, Divider, Flex, Form, InputNumber, Select, Spin, Typography} from \"antd\";\r\nimport {HistoryOutlined, RedoOutlined, RollbackOutlined} from \"@ant-design/icons\";\r\nimport {filialsAPI} from \"../../services/FilialsService\";\r\nimport {Navbar} from \"../../components/Layout/Header/Navbar\";\r\nimport {alignOptions, justifyOptions} from \"../../configs/constants\";\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\n//@ts-ignore\r\nimport {ExtTreegroupedgrid} from '@sencha/ext-react-modern';\r\nimport {Ext} from \"../../index\";\r\nimport {RequestRoutesGridType} from \"./Requests.types\";\r\nimport {requestAPI} from \"../../services/RequestService\";\r\nimport {FileUploadDND} from \"../../components/Requests/FileUploadDnd/FileUploadDND\";\r\nimport {aircraftModelAPI} from \"../../services/AircraftModelService\";\r\nimport {AircraftModel} from \"../../models/AircraftModel\";\r\nimport {flightTargetAPI} from \"../../services/FlightTargetService\";\r\nimport {FlightTargetModel} from \"../../models/FlightTargetModel\";\r\nimport {empCustomerAPI} from \"../../services/EmpCustomerService\";\r\nimport {EmpCustomerModel} from \"../../models/EmpCustomerModel\";\r\nimport {UpdateFlightModal} from \"../../components/Requests/EditRequest/UpdateFlightModal\";\r\nimport {CreateFlightModal} from \"../../components/Requests/EditRequest/CreateFlightModal\";\r\nimport {HistoryModal} from \"../../components/Requests/EditRequest/HistoryModal\";\r\nimport {CostCreateModalData, CreateCostModal} from \"../../components/Requests/EditRequest/CreateCostModal\";\r\nimport {EditCostModal} from \"../../components/Requests/EditRequest/EditCostModal\";\r\n\r\nconst {Text} = Typography;\r\nconst {RangePicker} = DatePicker;\r\nconst dateFormat = 'YYYY-MM-DD HH:mm:ss';\r\n\r\nexport const EditRequestScreen = () => {\r\n    // States\r\n    const [requestId, setRequestId] = useState<string>(\"\");\r\n    const [gridData, setGridData] = useState<RequestRoutesGridType[]>([]);\r\n    const [gridFactData, setGridFactData] = useState<RequestRoutesGridType[]>([]);\r\n    const [selectedRecord, setSelectedRecord] = useState<RequestRoutesGridType | null>(null);\r\n    const [selectedCostRecord, setSelectedCostRecord] = useState<CostCreateModalData | null>(null);\r\n    const [createFlightModalVisible, setCreateFlightModalVisible] = useState<boolean>(false);\r\n    const [updateFlightModalVisible, setUpdateFlightModalVisible] = useState<boolean>(false);\r\n    const gridRef = useRef(null);\r\n    const [flyDateStart, setFlyDateStart] = useState<Dayjs | null>(null);\r\n    const [flyDateFinish, setFlyDateFinish] = useState<Dayjs | null>(null);\r\n    const [aircraftModel, setAircraftModel] = useState<string>('');\r\n    const [flightTarget, setFlightTarget] = useState<string>('');\r\n    const [empCustomer, setEmpCustomer] = useState<string>('');\r\n    const [visibleHistoryModal, setVisibleHistoryModal] = useState<boolean>(false);\r\n    const [flightDuration, setFlightDuration] = useState<number>(0);\r\n    const [flightDurationOut, setFlightDurationOut] = useState<number>(0);\r\n    const [cost, setCost] = useState<number>(0);\r\n    const [costOut, setCostOut] = useState<number>(0);\r\n    const [roundDigit, setRoundDigit] = useState<number>(2);\r\n    const [visibleAddCostModal, setVisibleAddCostModal] = useState<boolean>(false);\r\n    const [visibleEditCostModal, setVisibleEditCostModal] = useState<boolean>(false);\r\n    // -----\r\n\r\n    // Useful utils\r\n    let store = Ext.create('Ext.data.Store', {\r\n        data: gridData,\r\n        groupers: ['workType', 'employee'],\r\n        fields: [\r\n            {name: 'workType', type: 'string'},\r\n            {name: 'employee', type: 'string'},\r\n        ]\r\n    })\r\n    let factStore = Ext.create('Ext.data.Store', {\r\n        data: gridFactData,\r\n        groupers: ['workType', 'employee'],\r\n        fields: [\r\n            {name: 'workType', type: 'string'},\r\n            {name: 'employee', type: 'string'},\r\n        ]\r\n    })\r\n    let navigate = useNavigate();\r\n    const location = useLocation();\r\n    // -----\r\n\r\n    // Web requests\r\n    const [getRequestById, {\r\n        data: requestData,\r\n        isLoading: isLoadingGetRequestById,\r\n    }] = requestAPI.useGetByIdMutation();\r\n    const [getAllFilialsRequest, {\r\n        data: filials,\r\n        isLoading: isFilialsLoading,\r\n    }] = filialsAPI.useGetAllMutation();\r\n    const [getAllAircraftModelRequest, {\r\n        data: aircraftModelData,\r\n        isLoading: isAircraftModelLoading,\r\n    }] = aircraftModelAPI.useGetAllMutation();\r\n    const [getAllFlightTargetRequest, {\r\n        data: flightTargetData,\r\n        isLoading: isFlightTargetLoading,\r\n    }] = flightTargetAPI.useGetAllMutation();\r\n    const [getAllEmpCustomerRequest, {\r\n        data: empCustomerData,\r\n        isLoading: isEmpCustomerLoading,\r\n    }] = empCustomerAPI.useGetAllMutation();\r\n    const [updateFieldRequest, {}] = requestAPI.useUpdateDateMutation();\r\n    const [getAllCosts, {\r\n        data: costs,\r\n        isLoading: isCostsLoading,\r\n    }] = requestAPI.useGetCostsMutation();\r\n    // -----\r\n\r\n    // Effects\r\n    useEffect(() => {\r\n        getAllEmpCustomerRequest();\r\n        getAllFlightTargetRequest();\r\n        getAllAircraftModelRequest();\r\n        getAllFilialsRequest();\r\n        getAllCosts(location.pathname.split(\"/\")[2]);\r\n        getRequestById(location.pathname.split(\"/\")[2]); // get ID from path location\r\n    }, []);\r\n    useEffect(() => {\r\n        if (requestData) {\r\n            setRoundDigit(requestData.roundDigit);\r\n            setCost(requestData.cost ?? 0);\r\n            setCostOut(requestData.cost ?? 0);\r\n            setFlightDuration(requestData.duration ?? 0);\r\n            setFlightDurationOut(requestData.durationOut ?? 0);\r\n            setRequestId(requestData.id);\r\n            setGridData(requestData?.routes.map((route) => (\r\n                {\r\n                    \"dateTime\": route.dateTime,\r\n                    \"cargoWeightOut\": route.cargoWeightOut,\r\n                    \"cargoWeightMount\": route.cargoWeightMount,\r\n                    \"routeId\": route.routeId,\r\n                    \"passengerCount\": route.passengerCount,\r\n                    \"workType\": route.workType,\r\n                    \"airportDeparture\": route.airportDeparture,\r\n                    \"cargoWeightIn\": route.cargoWeightIn,\r\n                    \"id\": route.id,\r\n                    \"employee\": route.employee,\r\n                    \"airportArrival\": route.airportArrival,\r\n                    \"idFlightFilial\": \"\",\r\n                    \"idFuelPoint\": \"\"\r\n                }\r\n            )));\r\n            setGridFactData(requestData?.factRoutes.map((route) => (\r\n                {\r\n                    \"dateTime\": route.dateTime,\r\n                    \"cargoWeightOut\": route.cargoWeightOut,\r\n                    \"cargoWeightMount\": route.cargoWeightMount,\r\n                    \"routeId\": route.routeId,\r\n                    \"passengerCount\": route.passengerCount,\r\n                    \"workType\": route.workType,\r\n                    \"airportDeparture\": route.airportDeparture,\r\n                    \"cargoWeightIn\": route.cargoWeightIn,\r\n                    \"id\": route.id,\r\n                    \"employee\": route.employee,\r\n                    \"airportArrival\": route.airportArrival,\r\n                    \"idFlightFilial\": \"\",\r\n                    \"idFuelPoint\": \"\"\r\n                }\r\n            )));\r\n            setFlyDateStart(dayjs(requestData.flyDateStart.slice(0, 19), dateFormat));\r\n            setFlyDateFinish(dayjs(requestData.flyDateFinish.slice(0, 19), dateFormat));\r\n            setAircraftModel(`${requestData.aircraftModelName}/${requestData.airlineName}/${requestData.airlineName}`);\r\n            setFlightTarget(requestData.flightTargetName);\r\n            setEmpCustomer(requestData.empCustomerLastName + \" \" + requestData.empCustomerName + \" \" + requestData.empCustomerSecondName);\r\n        }\r\n    }, [requestData]);\r\n    useEffect(() => {\r\n        if (selectedRecord !== null)\r\n            setUpdateFlightModalVisible(true);\r\n    }, [selectedRecord])\r\n    useEffect(() => {\r\n        if (gridData.length > 0) {\r\n            //@ts-ignore\r\n            document?.body?.querySelectorAll(\"ext-treegroupedgrid\")[0]?.cmp?.expandAll();\r\n        }\r\n    }, [gridData]);\r\n    useEffect(() => {\r\n        //@ts-ignore\r\n        document?.body?.querySelectorAll(\"ext-treegroupedgrid\")[0]?.cmp?.expandAll();\r\n    }, [updateFlightModalVisible]);\r\n    // Handlers\r\n    const backBtnHandler = () => {\r\n        return navigate(`/requests`);\r\n    }\r\n    const refresh = () => {\r\n        getRequestById(requestId);\r\n    }\r\n    const selectFlightRangeDateHandler = (value: RangeValue<Dayjs>) => {\r\n        if (value) {\r\n            if (value[0] && value[1]) {\r\n                setFlyDateStart(value[0]);\r\n                setFlyDateFinish(value[1]);\r\n                updateFieldRequest({\r\n                    id: requestId,\r\n                    field: \"date\",\r\n                    dateStart: value[0].format('YYYY-MM-DD HH:mm:ss'),\r\n                    dateFinish: value[1].format('YYYY-MM-DD HH:mm:ss')\r\n                });\r\n            }\r\n        }\r\n    }\r\n    const selectAircraftModelHandler = (value: string, option: any) => {\r\n        setAircraftModel(value);\r\n        updateFieldRequest({\r\n            id: requestId,\r\n            field: \"aircraft\",\r\n            idContractData: option.value,\r\n        });\r\n    }\r\n    const selectFlightTargetHandler = (value: string, option: any) => {\r\n        updateFieldRequest({\r\n            id: requestId,\r\n            field: \"target\",\r\n            idTarget: option.value,\r\n        });\r\n        setFlightTarget(value);\r\n    }\r\n    const selectEmpCustomerHandler = (value: string, option: any) => {\r\n        updateFieldRequest({\r\n            id: requestId,\r\n            field: \"empCustomer\",\r\n            idEmpCustomer: option.value,\r\n        });\r\n        setEmpCustomer(value);\r\n    }\r\n    const setFlightDurationHandler = (value: number | null) => {\r\n        if (value) {\r\n            setFlightDuration(value);\r\n            updateFieldRequest({\r\n                id: requestId,\r\n                field: \"flightDuration\",\r\n                value: value,\r\n            });\r\n        }\r\n    }\r\n    const setFlightDurationOutHandler = (value: number | null) => {\r\n        if (value) {\r\n            setFlightDurationOut(value);\r\n            updateFieldRequest({\r\n                id: requestId,\r\n                field: \"flightDurationOut\",\r\n                value: value,\r\n            });\r\n        }\r\n    }\r\n    const setRoundDigitHandler = (value: number, option: any) => {\r\n        setRoundDigit(option.value);\r\n        updateFieldRequest({\r\n            id: requestId,\r\n            field: \"roundDigit\",\r\n            value: value,\r\n        });\r\n    }\r\n    const setCostHandler = (value: number | null) => {\r\n        if (value) {\r\n            setCost(value);\r\n            updateFieldRequest({\r\n                id: requestId,\r\n                field: \"cost\",\r\n                value: value,\r\n            });\r\n        }\r\n    }\r\n    const setCostOutHandler = (value: number | null) => {\r\n        if (value) {\r\n            setCostOut(value);\r\n            updateFieldRequest({\r\n                id: requestId,\r\n                field: \"costOut\",\r\n                value: value,\r\n            });\r\n        }\r\n    }\r\n    // -----\r\n    return (\r\n        <>\r\n            {visibleHistoryModal &&\r\n                <HistoryModal visible={visibleHistoryModal} setVisible={setVisibleHistoryModal} requestId={requestId}/>\r\n            }\r\n            {createFlightModalVisible &&\r\n                <CreateFlightModal visible={createFlightModalVisible} setVisible={setCreateFlightModalVisible}\r\n                                   refresh={getRequestById}/>\r\n            }\r\n            {selectedRecord &&\r\n                <UpdateFlightModal visible={updateFlightModalVisible} setVisible={setUpdateFlightModalVisible}\r\n                                   refresh={getRequestById} rowData={selectedRecord} setRowData={setSelectedRecord}/>\r\n            }\r\n            <CreateCostModal visible={visibleAddCostModal} setVisible={setVisibleAddCostModal} requestId={requestId}\r\n                             refresh={getAllCosts}/>\r\n            {selectedCostRecord &&\r\n                <EditCostModal visible={visibleEditCostModal} setVisible={setVisibleEditCostModal} requestId={requestId}\r\n                               refresh={getAllCosts} data={selectedCostRecord}/>}\r\n            <Flex gap=\"small\" vertical>\r\n                <Navbar/>\r\n                {(filials === undefined || requestData === undefined) ?\r\n                    <Flex style={{height: window.innerHeight}} justify={justifyOptions.center}\r\n                          align={alignOptions.center}>\r\n                        <Spin size={'large'}/>\r\n                    </Flex> :\r\n                    <>\r\n                        <Flex justify={justifyOptions.flexStart}>\r\n                            <Flex gap=\"small\" vertical style={{margin: \"5px 10px 0 17px\"}}>\r\n                                <Flex gap=\"middle\" style={{margin: \"0 0 7px 0\"}}>\r\n                                    <Button size={'large'} onClick={backBtnHandler} icon={<RollbackOutlined/>}/>\r\n                                    <Button size={'large'} onClick={() => setVisibleHistoryModal(true)}\r\n                                            icon={<HistoryOutlined/>}/>\r\n                                    <Button size={'large'} onClick={refresh} icon={<RedoOutlined/>}/>\r\n                                </Flex>\r\n                                <Text><strong>На согласовании</strong></Text>\r\n                                <Text>Номер заявки <strong>{requestId}</strong></Text>\r\n                                <Text>Код заявки <strong>{requestId}</strong></Text>\r\n                                <Button style={{marginTop: 5, width: 160}} size={'middle'}>Полет выполнен</Button>\r\n                                <Button style={{width: 160}} danger size={'middle'}>Полет отклонен</Button>\r\n                            </Flex>\r\n                            <Divider type={'vertical'} style={{height: 237}}/>\r\n                            <Flex gap=\"small\" vertical style={{margin: \"20px 0 0 13px\"}}>\r\n                                <Form\r\n                                    style={{maxWidth: 600}}\r\n                                    // @ts-ignore\r\n                                    labelCol={{span: 8}}\r\n                                    wrapperCol={{span: 20}}\r\n                                >\r\n                                    <Form.Item label=\"Дата полета\">\r\n                                        <RangePicker\r\n                                            showTime={true}\r\n                                            value={[flyDateStart, flyDateFinish]}\r\n                                            format={dateFormat}\r\n                                            onChange={selectFlightRangeDateHandler}\r\n                                        />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"Воздушное судно\">\r\n                                        <Select\r\n                                            value={aircraftModel}\r\n                                            disabled={isAircraftModelLoading}\r\n                                            size={'middle'}\r\n                                            placeholder=\"Воздушное судно\"\r\n                                            loading={isFilialsLoading}\r\n                                            style={{width: '100%'}}\r\n                                            options={aircraftModelData?.map((aircraftModel: AircraftModel): {\r\n                                                value: string,\r\n                                                label: string\r\n                                            } => ({\r\n                                                value: aircraftModel.idContractData.toString(),\r\n                                                label: `${aircraftModel.aircraftModelName}/${aircraftModel.contractName}/${aircraftModel.airlineName}`\r\n                                            }))}\r\n                                            onSelect={selectAircraftModelHandler}\r\n                                        />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"Цель полета\">\r\n                                        <Select\r\n                                            value={flightTarget}\r\n                                            disabled={isFlightTargetLoading}\r\n                                            size={'middle'}\r\n                                            placeholder=\"Цель полета\"\r\n                                            loading={isFilialsLoading}\r\n                                            style={{width: '100%'}}\r\n                                            options={flightTargetData?.map((flightTargetModel: FlightTargetModel): {\r\n                                                value: string,\r\n                                                label: string\r\n                                            } => ({\r\n                                                value: flightTargetModel.id.toString(),\r\n                                                label: flightTargetModel.name\r\n                                            }))}\r\n                                            onSelect={selectFlightTargetHandler}\r\n                                        />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"ФИО заказчика\">\r\n                                        <Select\r\n                                            value={empCustomer}\r\n                                            disabled={isFlightTargetLoading}\r\n                                            size={'middle'}\r\n                                            placeholder=\"ФИО заказчика\"\r\n                                            loading={isFilialsLoading}\r\n                                            style={{width: '100%'}}\r\n                                            options={empCustomerData?.map((empCustomerModel: EmpCustomerModel) => ({\r\n                                                value: empCustomerModel.id.toString(),\r\n                                                label: empCustomerModel.empLastName + \" \" + empCustomerModel.empName + \" \" + empCustomerModel.empSecondName\r\n                                            }))}\r\n                                            onSelect={selectEmpCustomerHandler}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Flex>\r\n                            <Divider type={'vertical'} style={{height: 237, marginLeft: 23}}/>\r\n                            <Flex gap=\"small\" vertical style={{margin: \"5px 0 0 13px\"}}>\r\n                                {requestId &&\r\n                                    <FileUploadDND requestId={requestId}/>\r\n                                }\r\n                            </Flex>\r\n                        </Flex>\r\n                        <Collapse defaultActiveKey={['1']} items={[\r\n                            {\r\n                                key: '0',\r\n                                label: 'Затраты',\r\n                                children: <>\r\n                                    <Flex wrap=\"wrap\" gap=\"large\" justify={justifyOptions.flexStart}>\r\n                                        <Form labelCol={{span: 9}} wrapperCol={{span: 8}}>\r\n                                            <Form.Item label=\"Время полета\">\r\n                                                <InputNumber style={{width: 200}} value={flightDuration}\r\n                                                             onChange={setFlightDurationHandler}/>\r\n                                            </Form.Item>\r\n                                            <Form.Item label=\"Налет в долях, ч\">\r\n                                                <InputNumber style={{width: 200}} value={flightDurationOut}\r\n                                                             onChange={setFlightDurationOutHandler}/>\r\n                                            </Form.Item>\r\n                                            <Form.Item label=\"Итого\">\r\n                                                <InputNumber style={{width: 200}} value={costOut}\r\n                                                             onChange={setCostOutHandler}/>\r\n                                            </Form.Item>\r\n                                        </Form>\r\n                                        {/*<Form labelCol={{span: 12}} wrapperCol={{span: 8}}>*/}\r\n                                        {/*    <Form.Item label=\"Время полета (с подвеской)\">*/}\r\n                                        {/*        <InputNumber style={{width: 200}} value={flightDuration}*/}\r\n                                        {/*                     onChange={setFlightDurationHandler}/>*/}\r\n                                        {/*    </Form.Item>*/}\r\n                                        {/*    <Form.Item label=\"Налет в долях, ч (с подвеской)\">*/}\r\n                                        {/*        <InputNumber style={{width: 200}} value={flightDuration}*/}\r\n                                        {/*                     onChange={setFlightDurationHandler}/>*/}\r\n                                        {/*    </Form.Item>*/}\r\n                                        {/*    <Form.Item label=\"В т.ч. к оплате (с подвеской)\">*/}\r\n                                        {/*        <InputNumber style={{width: 200}} value={flightDuration}*/}\r\n                                        {/*                     onChange={setFlightDurationHandler}/>*/}\r\n                                        {/*    </Form.Item>*/}\r\n                                        {/*</Form>*/}\r\n                                        <Form labelCol={{span: 9}} wrapperCol={{span: 8}}>\r\n                                            <Form.Item label=\"Стоимость\">\r\n                                                <InputNumber style={{width: 200}} value={cost}\r\n                                                             onChange={setCostHandler}/>\r\n                                            </Form.Item>\r\n                                            <Form.Item label=\"Округлить до\">\r\n                                                <Select\r\n                                                    value={roundDigit}\r\n                                                    disabled={isAircraftModelLoading}\r\n                                                    size={'middle'}\r\n                                                    placeholder=\"В т.ч. к оплате (с подвеской)\"\r\n                                                    loading={isFilialsLoading}\r\n                                                    style={{width: 200}}\r\n                                                    options={[{\r\n                                                        value: 2,\r\n                                                        label: '2 знаков'\r\n                                                    }, {\r\n                                                        value: 3,\r\n                                                        label: '3 знаков'\r\n                                                    }]}\r\n                                                    onSelect={setRoundDigitHandler}\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Form>\r\n                                    </Flex>\r\n                                    <Button style={{marginBottom: 10}}\r\n                                            onClick={() => setVisibleAddCostModal(true)}>Добавить</Button>\r\n                                    {Ext.isDomReady &&\r\n                                        <ExtTreegroupedgrid\r\n                                            data={costs}\r\n                                            collapse={false}\r\n                                            ref={gridRef}\r\n                                            style={{height: 250}}\r\n                                            columnLines\r\n                                            grouped\r\n                                            shadow={false}\r\n                                            groupSummaryPosition={'docked'}\r\n                                            summaryPosition={'docked'}\r\n                                            onChilddoubletap={(event: any) => {\r\n                                                setVisibleEditCostModal(true);\r\n                                                setSelectedCostRecord({\r\n                                                    selectedFilialId: event.location.record.data.filialId,\r\n                                                    selectedWorkType: event.location.record.data.workTypeId,\r\n                                                    flightDuration: event.location.record.data.duration,\r\n                                                    flightCost: event.location.record.data.cost,\r\n                                                    costId: event.location.record.data.costId\r\n                                                });\r\n                                            }}\r\n                                            columns={[\r\n                                                {\r\n                                                    text: 'Филиал',\r\n                                                    dataIndex: 'filialName',\r\n                                                    groupable: true,\r\n                                                    filterType: 'string',\r\n                                                    flex: 1,\r\n                                                },\r\n                                                {\r\n                                                    text: 'Вид работ',\r\n                                                    dataIndex: 'workTypeName',\r\n                                                    groupable: true,\r\n                                                    filterType: 'string',\r\n                                                    width: 200,\r\n                                                },\r\n                                                {\r\n                                                    text: 'Налет (час)',\r\n                                                    dataIndex: 'duration',\r\n                                                    groupable: true,\r\n                                                    filterType: 'date',\r\n                                                    flex: 1\r\n                                                },\r\n                                                {\r\n                                                    text: 'Затраты (руб.)',\r\n                                                    dataIndex: 'cost',\r\n                                                    groupable: true,\r\n                                                    filterType: 'string',\r\n                                                    flex: 1\r\n                                                },\r\n                                                {\r\n                                                    text: 'Тариф',\r\n                                                    dataIndex: 'airportArrival',\r\n                                                    groupable: true,\r\n                                                    filterType: 'string',\r\n                                                    flex: 1,\r\n                                                    hidden: true\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                        </ExtTreegroupedgrid>\r\n                                    }\r\n                                </>,\r\n                            },\r\n                            {\r\n                                key: '1',\r\n                                label: 'Плановые полеты',\r\n                                children: <>\r\n                                    <Flex wrap=\"wrap\" gap=\"small\" justify={justifyOptions.flexStart}\r\n                                          style={{margin: \"0px 0px 15px 0px\"}}>\r\n                                        <Button disabled={requestData.stateName === 'Утверждено'} size={'middle'}\r\n                                                style={{width: 230}}\r\n                                                onClick={() => setCreateFlightModalVisible(true)}>Добавить\r\n                                            маршрут</Button>\r\n                                    </Flex>\r\n                                    {Ext.isDomReady &&\r\n                                        <ExtTreegroupedgrid\r\n                                            collapse={false}\r\n                                            ref={gridRef}\r\n                                            style={{height: 440}}\r\n                                            store={store}\r\n                                            columnLines\r\n                                            grouped\r\n                                            shadow={false}\r\n                                            groupSummaryPosition={'docked'}\r\n                                            summaryPosition={'docked'}\r\n                                            onChilddoubletap={(event: any) => {\r\n                                                if (requestData.stateName !== 'Утверждено')\r\n                                                    setSelectedRecord(event.location.record.data);\r\n                                            }}\r\n                                            columns={[\r\n                                                {\r\n                                                    text: 'Вид работ',\r\n                                                    dataIndex: 'workType',\r\n                                                    groupable: true,\r\n                                                    filterType: 'string',\r\n                                                    flex: 1,\r\n                                                    hidden: true\r\n                                                },\r\n                                                {\r\n                                                    text: 'Ответсвенный',\r\n                                                    dataIndex: 'employee',\r\n                                                    groupable: true,\r\n                                                    filterType: 'string',\r\n                                                    width: 200,\r\n                                                    hidden: true\r\n                                                },\r\n                                                {\r\n                                                    text: 'Дата и время вылета',\r\n                                                    dataIndex: 'dateTime',\r\n                                                    groupable: true,\r\n                                                    filterType: 'date',\r\n                                                    flex: 1\r\n                                                },\r\n                                                {\r\n                                                    text: 'Аэропорт вылета',\r\n                                                    dataIndex: 'airportDeparture',\r\n                                                    groupable: true,\r\n                                                    filterType: 'string',\r\n                                                    flex: 1\r\n                                                },\r\n                                                {\r\n                                                    text: 'Аэропорт назначения',\r\n                                                    dataIndex: 'airportArrival',\r\n                                                    groupable: true,\r\n                                                    filterType: 'string',\r\n                                                    flex: 1\r\n                                                },\r\n                                                {\r\n                                                    text: 'Место дозаправки',\r\n                                                    dataIndex: 'idFuelPoint',\r\n                                                    groupable: true,\r\n                                                    filterType: 'string',\r\n                                                    flex: 1\r\n                                                },\r\n                                                {\r\n                                                    text: 'Кол-во пассажиров',\r\n                                                    dataIndex: 'passengerCount',\r\n                                                    xtype: 'numbercolumn',\r\n                                                    align: 'center',\r\n                                                    filterType: 'number',\r\n                                                    flex: 1\r\n                                                },\r\n                                                {\r\n                                                    text: 'Груз всего, тонн',\r\n                                                    dataIndex: 'cargoWeightMount',\r\n                                                    xtype: 'numbercolumn',\r\n                                                    align: 'center',\r\n                                                    filterType: 'number',\r\n                                                    flex: 1\r\n                                                },\r\n                                                {\r\n                                                    text: 'Груз на внешней подвеске, тонн',\r\n                                                    dataIndex: 'cargoWeightOut',\r\n                                                    xtype: 'numbercolumn',\r\n                                                    align: 'center',\r\n                                                    filterType: 'number',\r\n                                                    flex: 1\r\n                                                },\r\n                                                {\r\n                                                    text: 'Груз внутри фюзеляжа, тонн',\r\n                                                    dataIndex: 'cargoWeightIn',\r\n                                                    xtype: 'numbercolumn',\r\n                                                    align: 'center',\r\n                                                    filterType: 'number',\r\n                                                    flex: 1\r\n                                                },\r\n                                            ]}\r\n                                            platformConfig={{\r\n                                                desktop: {\r\n                                                    plugins: {\r\n                                                        groupingpanel: true,\r\n                                                        gridfilterbar: true\r\n                                                    }\r\n                                                },\r\n                                            }}\r\n                                        >\r\n                                        </ExtTreegroupedgrid>\r\n                                    }\r\n                                </>,\r\n                            },\r\n                            {\r\n                                key: '2',\r\n                                label: 'Фактические полеты',\r\n                                children: <>\r\n                                    <Flex wrap=\"wrap\" gap=\"small\" justify={justifyOptions.flexStart}\r\n                                          style={{margin: \"0px 0px 15px 0px\"}}>\r\n                                        <Button disabled={requestData.stateName === 'Утверждено'} size={'middle'}\r\n                                                style={{width: 230}}\r\n                                                onClick={() => setCreateFlightModalVisible(true)}>Добавить\r\n                                            маршрут</Button>\r\n                                    </Flex>\r\n                                    {Ext.isDomReady &&\r\n                                        <ExtTreegroupedgrid\r\n                                            collapse={false}\r\n                                            ref={gridRef}\r\n                                            style={{height: 440}}\r\n                                            store={factStore}\r\n                                            columnLines\r\n                                            grouped\r\n                                            shadow={false}\r\n                                            groupHeaderTpl='{name} ({group.length})'\r\n                                            groupSummaryPosition={'docked'}\r\n                                            summaryPosition={'docked'}\r\n                                            onChilddoubletap={(event: any) => {\r\n                                                if (requestData.stateName !== 'Утверждено')\r\n                                                    setSelectedRecord(event.location.record.data);\r\n                                            }}\r\n                                            columns={[\r\n                                                {\r\n                                                    text: 'Вид работ',\r\n                                                    dataIndex: 'workType',\r\n                                                    groupable: true,\r\n                                                    filterType: 'string',\r\n                                                    flex: 1,\r\n                                                    hidden: true\r\n                                                },\r\n                                                {\r\n                                                    text: 'Ответсвенный',\r\n                                                    dataIndex: 'employee',\r\n                                                    groupable: true,\r\n                                                    filterType: 'string',\r\n                                                    width: 200,\r\n                                                    hidden: true\r\n                                                },\r\n                                                {\r\n                                                    text: 'Дата и время вылета',\r\n                                                    dataIndex: 'dateTime',\r\n                                                    groupable: true,\r\n                                                    filterType: 'date',\r\n                                                    flex: 1\r\n                                                },\r\n                                                {\r\n                                                    text: 'Аэропорт вылета',\r\n                                                    dataIndex: 'airportDeparture',\r\n                                                    groupable: true,\r\n                                                    filterType: 'string',\r\n                                                    flex: 1\r\n                                                },\r\n                                                {\r\n                                                    text: 'Аэропорт назначения',\r\n                                                    dataIndex: 'airportArrival',\r\n                                                    groupable: true,\r\n                                                    filterType: 'string',\r\n                                                    flex: 1\r\n                                                },\r\n                                                {\r\n                                                    text: 'Аэропорт назначения',\r\n                                                    dataIndex: 'airportArrival',\r\n                                                    groupable: true,\r\n                                                    filterType: 'string',\r\n                                                    flex: 1\r\n                                                },\r\n                                                {\r\n                                                    text: 'Кол-во пассажиров',\r\n                                                    dataIndex: 'passengerCount',\r\n                                                    xtype: 'numbercolumn',\r\n                                                    align: 'center',\r\n                                                    filterType: 'number',\r\n                                                    flex: 1\r\n                                                },\r\n                                                {\r\n                                                    text: 'Груз всего, тонн',\r\n                                                    dataIndex: 'cargoWeightMount',\r\n                                                    xtype: 'numbercolumn',\r\n                                                    align: 'center',\r\n                                                    filterType: 'number',\r\n                                                    flex: 1\r\n                                                },\r\n                                                {\r\n                                                    text: 'Груз на внешней подвеске, тонн',\r\n                                                    dataIndex: 'cargoWeightOut',\r\n                                                    xtype: 'numbercolumn',\r\n                                                    align: 'center',\r\n                                                    filterType: 'number',\r\n                                                    flex: 1\r\n                                                },\r\n                                                {\r\n                                                    text: 'Груз внутри фюзеляжа, тонн',\r\n                                                    dataIndex: 'cargoWeightIn',\r\n                                                    xtype: 'numbercolumn',\r\n                                                    align: 'center',\r\n                                                    filterType: 'number',\r\n                                                    flex: 1\r\n                                                },\r\n                                            ]}\r\n                                            platformConfig={{\r\n                                                desktop: {\r\n                                                    plugins: {\r\n                                                        groupingpanel: true,\r\n                                                        gridfilterbar: true\r\n                                                    }\r\n                                                },\r\n                                            }}\r\n                                        >\r\n                                        </ExtTreegroupedgrid>\r\n                                    }\r\n                                </>,\r\n                            },\r\n                        ]}/>\r\n                    </>\r\n                }\r\n            </Flex>\r\n        </>\r\n    )\r\n\r\n}","import {AutoComplete, Button, DatePicker, Flex, Form, InputNumber, Modal} from \"antd\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {WorkTypeModel} from \"../../../models/WorkTypeModel\";\r\nimport {EmployeeResponsibleModel} from \"../../../models/EmployeeResponsibleModel\";\r\nimport {AirportModel} from \"../../../models/AirportModel\";\r\nimport {workTypesAPI} from \"../../../services/WorkTypesService\";\r\nimport {airportsAPI} from \"../../../services/AirportsService\";\r\nimport {employeeResponsibleAPI} from \"../../../services/EmployeeResponsibleService\";\r\nimport dayjs from 'dayjs';\r\nimport {justifyOptions} from \"../../../configs/constants\";\r\nimport {RequestRoutesGridType} from \"../../../screens/Requests/Requests.types\";\r\n\r\ntype ModalProps = {\r\n    visible: boolean,\r\n    setVisible: Function,\r\n    rowData: any,\r\n    setRowData: Function,\r\n    setGridData: Function,\r\n}\r\nexport const UpdateFlightModal = (props: ModalProps) => {\r\n    // States\r\n    const [empRespOptions, setEmpRespOptions] = useState<{ value: string }[]>([]);\r\n    const [workTypeOptions, setWorkTypeOptions] = useState<{ value: string }[]>([]);\r\n    const [airportsOptions, setAirportsOptions] = useState<{ value: string }[]>([]);\r\n    const [workTypeModal, setWorkTypeModal] = useState<string>(props.rowData.workType);\r\n    const [empRespModal, setEmpRespModal] = useState<string>(props.rowData.employee);\r\n    const [flightDateModal, setFlightDateModal] = useState<any>(\"\");\r\n    const [airportDepartureModal, setAirportDepartureModal] = useState<string>(\"\");\r\n    const [airportArrivalModal, setAirportArrivalModal] = useState<string>(\"\");\r\n    const [passengerCountModal, setPassengerCountModal] = useState<number>(-1);\r\n    const [cargoWeightMount, setCargoWeightMount] = useState<number>(-1);\r\n    const [cargoWeighIn, setCargoWeighIn] = useState<number>(-1);\r\n    const [cargoWeightOut, setCargoWeightOut] = useState<number>(-1);\r\n    // -----\r\n\r\n    // Useful utils\r\n\r\n    // -----\r\n\r\n    // Web requests\r\n    const [getAllWorkTypesRequest, {\r\n        data: workTypes,\r\n        isLoading: isWorkTypesLoading,\r\n    }] = workTypesAPI.useGetAllMutation();\r\n    const [getAllAirportsRequest, {\r\n        data: airports,\r\n        isLoading: isAirportsLoading,\r\n    }] = airportsAPI.useGetAllMutation();\r\n    const [getAllEmployeeResponsibleRequest, {\r\n        data: employeeResponsible,\r\n        isLoading: isEmployeeResponsibleLoading,\r\n    }] = employeeResponsibleAPI.useGetAllMutation();\r\n    // -----\r\n\r\n    // Effects\r\n    useEffect(() => {\r\n        setAirportDepartureModal(props.rowData.airportDeparture);\r\n        setAirportArrivalModal(props.rowData.airportArrival);\r\n        setPassengerCountModal(props.rowData.passengerCount);\r\n        setCargoWeightMount(props.rowData.cargoWeightMount);\r\n        setCargoWeighIn(props.rowData.cargoWeightIn);\r\n        setCargoWeightOut(props.rowData.cargoWeightOut);\r\n        setFlightDateModal(props.rowData.dateTime);\r\n        getAllWorkTypesRequest();\r\n        getAllAirportsRequest();\r\n        getAllEmployeeResponsibleRequest();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (employeeResponsible)\r\n            setEmpRespOptions(employeeResponsible.map((emp: EmployeeResponsibleModel) => ({value: emp.fio})));\r\n    }, [employeeResponsible]);\r\n    useEffect(() => {\r\n        if (workTypes)\r\n            setWorkTypeOptions(workTypes.map((workTypes: WorkTypeModel) => ({value: workTypes.name})));\r\n    }, [workTypes]);\r\n    useEffect(() => {\r\n        if (airports)\r\n            setAirportsOptions(airports.map((airport: AirportModel) => ({value: airport.name})));\r\n    }, [airports]);\r\n    // -----\r\n\r\n    // Handlers\r\n    const updateFlightHandler = () => {\r\n        const airportArrival = airports?.find((airport: AirportModel) => airport.name === airportArrivalModal);\r\n        const airportDeparture = airports?.find((airport: AirportModel) => airport.name === airportDepartureModal);\r\n        const workType = workTypes?.find((workType: WorkTypeModel) => workType.name === workTypeModal);\r\n        const respEmp = employeeResponsible?.find((emp: EmployeeResponsibleModel) => emp.fio === empRespModal);\r\n        if (respEmp === undefined) {\r\n            console.log('Not Finded')\r\n        }\r\n        if (airportArrival && airportDeparture && workType && respEmp) {\r\n            props.setGridData((prev: RequestRoutesGridType[]) => {\r\n                let copy = JSON.parse(JSON.stringify(prev));\r\n                return copy.map((record: RequestRoutesGridType) => {\r\n                    if (record.id === props.rowData.id) {\r\n                        record = {\r\n                            dateTime: flightDateModal,\r\n                            cargoWeightOut: cargoWeightOut.toString(),\r\n                            cargoWeightMount: cargoWeightMount.toString(),\r\n                            routeId: \"\",\r\n                            passengerCount: passengerCountModal.toString(),\r\n                            workType: workType.name,\r\n                            workTypeId: workType.id.toString(),\r\n                            airportDeparture: airportDeparture.name,\r\n                            airportDepartureId: airportDeparture.id.toString(),\r\n                            cargoWeightIn: cargoWeighIn.toString(),\r\n                            id: \"\",\r\n                            employee: respEmp.fio,\r\n                            employeeId: respEmp.id.toString(),\r\n                            airportArrival: airportArrival.name,\r\n                            airportArrivalId: airportArrival.id.toString(),\r\n                            idFlightFilial: \"\",\r\n                            idFuelPoint: \"\"\r\n                        };\r\n                    }\r\n                    return record;\r\n                });\r\n            });\r\n            closeUpdateRouteModalHandler();\r\n        }\r\n    }\r\n    const closeUpdateRouteModalHandler = () => {\r\n        props.setVisible(false);\r\n        props.setRowData(null);\r\n        setWorkTypeModal(\"\");\r\n        setEmpRespModal(\"\");\r\n        setFlightDateModal(\"\");\r\n        setAirportDepartureModal(\"\");\r\n        setAirportArrivalModal(\"\");\r\n        setPassengerCountModal(-1);\r\n        setCargoWeightMount(-1);\r\n        setCargoWeightOut(-1);\r\n        setCargoWeighIn(-1);\r\n    }\r\n    const getEmpRespValue = (searchText: string) => {\r\n        if (employeeResponsible) {\r\n            return employeeResponsible.filter((emp: EmployeeResponsibleModel) => emp.fio.includes(searchText)).map((emp: EmployeeResponsibleModel) => ({value: emp.fio}));\r\n        }\r\n        return [];\r\n    }\r\n    const getWorkTypesValue = (searchText: string) => {\r\n        if (workTypes) {\r\n            return workTypes.filter((workType: WorkTypeModel) => workType.name.includes(searchText)).map((workType: WorkTypeModel) => ({value: workType.name}));\r\n        }\r\n        return [];\r\n    }\r\n    const getAirportsValue = (searchText: string) => {\r\n        if (airports) {\r\n            return airports.filter((airport: AirportModel) => airport.name.includes(searchText)).map((airport: AirportModel) => ({value: airport.name}));\r\n        }\r\n        return [];\r\n    }\r\n    // -----\r\n    const Footer = () => {\r\n        return (\r\n            <Flex justify={justifyOptions.flexEnd} gap={'small'}>\r\n                <Button onClick={closeUpdateRouteModalHandler}>Отмена</Button>\r\n                <Button type={'primary'} onClick={updateFlightHandler}>Сохранить</Button>\r\n            </Flex>\r\n        )\r\n    }\r\n    // -----\r\n    return (\r\n        <Modal\r\n            title=\"Редактирование маршрута\"\r\n            okText={\"Сохранить\"}\r\n            centered\r\n            open={props.visible}\r\n            onOk={() => updateFlightHandler()}\r\n            onCancel={closeUpdateRouteModalHandler}\r\n            width={740}\r\n            footer={Footer}\r\n        >\r\n            <Form\r\n                style={{maxWidth: 1200}}\r\n                layout=\"vertical\"\r\n            >\r\n                <Flex gap={'middle'} style={{width: '100%'}}>\r\n                    <Flex vertical gap={\"small\"} style={{width: '100%'}}>\r\n                        <Form.Item label=\"Воздушное судно\">\r\n                            <AutoComplete\r\n                                value={workTypeModal}\r\n                                size={'large'}\r\n                                options={workTypeOptions}\r\n                                style={{width: '100%'}}\r\n                                onSearch={(text) => setWorkTypeOptions(getWorkTypesValue(text))}\r\n                                placeholder={'Выберите вид работ'}\r\n                                notFoundContent={'Виды работ не найдены'}\r\n                                onSelect={(value, option) => setWorkTypeModal(value)}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Ответственное лицо\">\r\n                            <AutoComplete\r\n                                value={empRespModal}\r\n                                size={'large'}\r\n                                options={empRespOptions}\r\n                                style={{width: '100%'}}\r\n                                onSearch={(text) => setEmpRespOptions(getEmpRespValue(text))}\r\n                                placeholder={'Выберите ответственного'}\r\n                                notFoundContent={'Ответственные не найдены'}\r\n                                onSelect={(value, option) => setEmpRespModal(value)}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Дата и время вылета\">\r\n                            <DatePicker defaultValue={dayjs(flightDateModal, 'YYYY-MM-DD HH:mm:ss')}\r\n                                        style={{width: '100%'}}\r\n                                        size={'large'} showTime onChange={(value) => {\r\n                                if (value)\r\n                                    setFlightDateModal(value)\r\n                            }} onOk={(value) => setFlightDateModal(value)}/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Аэропорт вылета\">\r\n                            <AutoComplete\r\n                                value={airportDepartureModal}\r\n                                size={'large'}\r\n                                options={airportsOptions}\r\n                                style={{width: '100%'}}\r\n                                onSearch={(text) => setAirportsOptions(getAirportsValue(text))}\r\n                                placeholder={'Выберите аэропорт вылета'}\r\n                                notFoundContent={'Ответственные не найдены'}\r\n                                onSelect={(value, option) => setAirportDepartureModal(value)}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Аэропорт назначения\">\r\n                            <AutoComplete\r\n                                value={airportArrivalModal}\r\n                                size={'large'}\r\n                                options={airportsOptions}\r\n                                style={{width: '100%'}}\r\n                                onSearch={(text) => setAirportsOptions(getAirportsValue(text))}\r\n                                placeholder={'Выберите аэропорт назанчения'}\r\n                                notFoundContent={'Ответственные не найдены'}\r\n                                onSelect={(value, option) => setAirportArrivalModal(value)}\r\n                            />\r\n                        </Form.Item>\r\n                    </Flex>\r\n                    <Flex vertical gap={\"small\"} style={{width: '100%'}}>\r\n                        <Form.Item label=\"Место дозаправки\">\r\n                            <AutoComplete\r\n                                value={airportArrivalModal}\r\n                                size={'large'}\r\n                                options={airportsOptions}\r\n                                style={{width: '100%'}}\r\n                                onSearch={(text) => setAirportsOptions(getAirportsValue(text))}\r\n                                placeholder={'Выберите место дозаправки'}\r\n                                notFoundContent={'Место дозаправки не найдено'}\r\n                                onSelect={(value, option) => setAirportArrivalModal(value)}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Колличество пассажиров\">\r\n                            <InputNumber\r\n                                value={passengerCountModal}\r\n                                style={{width: '100%'}}\r\n                                size={'large'}\r\n                                min={0}\r\n                                onChange={(value) => {\r\n                                    if (value)\r\n                                        setPassengerCountModal(value);\r\n                                }}\r\n                                placeholder={'Введите колличество пассажиров'}\r\n                            /></Form.Item>\r\n                        <Form.Item label=\"Общий вес груза\">\r\n                            <InputNumber\r\n                                value={cargoWeightMount}\r\n                                style={{width: '100%'}}\r\n                                size={'large'}\r\n                                min={0}\r\n                                onChange={(value) => {\r\n                                    if (value)\r\n                                        setCargoWeightMount(value);\r\n                                }}\r\n                                placeholder={'Введите общий вес груза'}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Вес груза на внешней подвеске\">\r\n                            <InputNumber\r\n                                value={cargoWeightOut}\r\n                                style={{width: '100%'}}\r\n                                size={'large'}\r\n                                min={0}\r\n                                onChange={(value) => {\r\n                                    if (value)\r\n                                        setCargoWeightOut(value);\r\n                                }}\r\n                                placeholder={'Введите вес груза на внешней подвеске'}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Вес груза внутри физюляжа\">\r\n                            <InputNumber\r\n                                value={cargoWeighIn}\r\n                                style={{width: '100%'}}\r\n                                size={'large'}\r\n                                min={0}\r\n                                onChange={(value) => {\r\n                                    if (value)\r\n                                        setCargoWeighIn(value);\r\n                                }}\r\n                                placeholder={'Введите вес груза внутри физюляжа'}\r\n                            />\r\n                        </Form.Item>\r\n                    </Flex>\r\n                </Flex>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}","import {AutoComplete, DatePicker, Flex, InputNumber, Modal} from \"antd\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {WorkTypeModel} from \"../../../models/WorkTypeModel\";\r\nimport {EmployeeResponsibleModel} from \"../../../models/EmployeeResponsibleModel\";\r\nimport {AirportModel} from \"../../../models/AirportModel\";\r\nimport {filialsAPI} from \"../../../services/FilialsService\";\r\nimport {workTypesAPI} from \"../../../services/WorkTypesService\";\r\nimport {airportsAPI} from \"../../../services/AirportsService\";\r\nimport {employeeResponsibleAPI} from \"../../../services/EmployeeResponsibleService\";\r\nimport {RequestRoutesGridType} from \"../../../screens/Requests/Requests.types\";\r\n\r\ntype ModalProps = {\r\n    visible: boolean,\r\n    setVisible: Function,\r\n    setGridData: Function\r\n}\r\nexport const CreateFlightModal = (props: ModalProps) => {\r\n    // States\r\n    const [empRespOptions, setEmpRespOptions] = useState<{ value: string }[]>([]);\r\n    const [workTypeOptions, setWorkTypeOptions] = useState<{ value: string }[]>([]);\r\n    const [airportsOptions, setAirportsOptions] = useState<{ value: string }[]>([]);\r\n    const [workTypeModal, setWorkTypeModal] = useState<string>(\"\");\r\n    const [empRespModal, setEmpRespModal] = useState<string>(\"\");\r\n    const [flightDateModal, setFlightDateModal] = useState<any>(\"\"); // Date.js format\r\n    const [airportDepartureModal, setAirportDepartureModal] = useState<string>(\"\");\r\n    const [airportArrivalModal, setAirportArrivalModal] = useState<string>(\"\");\r\n    const [passengerCountModal, setPassengerCountModal] = useState<number>(0);\r\n    const [cargoWeightMount, setCargoWeightMount] = useState<number>(0);\r\n    const [cargoWeighIn, setCargoWeighIn] = useState<number>(0);\r\n    const [cargoWeightOut, setCargoWeightOut] = useState<number>(0);\r\n    // -----\r\n\r\n    // Web requests\r\n    const [getAllFilialsRequest, {\r\n        data: filials,\r\n        isLoading: isFilialsLoading,\r\n    }] = filialsAPI.useGetAllMutation();\r\n    const [getAllWorkTypesRequest, {\r\n        data: workTypes,\r\n        isLoading: isWorkTypesLoading,\r\n    }] = workTypesAPI.useGetAllMutation();\r\n    const [getAllAirportsRequest, {\r\n        data: airports,\r\n        isLoading: isAirportsLoading,\r\n    }] = airportsAPI.useGetAllMutation();\r\n    const [getAllEmployeeResponsibleRequest, {\r\n        data: employeeResponsible,\r\n        isLoading: isEmployeeResponsibleLoading,\r\n    }] = employeeResponsibleAPI.useGetAllMutation();\r\n    // -----\r\n\r\n    // Effects\r\n    useEffect(() => {\r\n        getAllFilialsRequest();\r\n        getAllWorkTypesRequest();\r\n        getAllAirportsRequest();\r\n        getAllEmployeeResponsibleRequest();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (employeeResponsible)\r\n            setEmpRespOptions(employeeResponsible.map((emp: EmployeeResponsibleModel) => ({value: emp.fio})));\r\n    }, [employeeResponsible]);\r\n    useEffect(() => {\r\n        if (workTypes)\r\n            setWorkTypeOptions(workTypes.map((workTypes: WorkTypeModel) => ({value: workTypes.name})));\r\n    }, [workTypes]);\r\n    useEffect(() => {\r\n        if (airports)\r\n            setAirportsOptions(airports.map((airport: AirportModel) => ({value: airport.name})));\r\n    }, [airports]);\r\n    // -----\r\n    // Handlers\r\n    const createRouteHandler = () => {\r\n        if (workTypes && employeeResponsible && airports) {\r\n            const workType = workTypes.find((workType: WorkTypeModel) => workType.name === workTypeModal);\r\n            const respEmp = employeeResponsible.find((emp: EmployeeResponsibleModel) => emp.fio === empRespModal);\r\n            const airportArrival = airports.find((airport: AirportModel) => airport.name === airportArrivalModal);\r\n            const airportDeparture = airports.find((airport: AirportModel) => airport.name === airportDepartureModal);\r\n            if (workType === undefined) {\r\n                console.log('Not Finded')\r\n            }\r\n            if (respEmp === undefined) {\r\n                console.log('Not Finded')\r\n            }\r\n            if (airportDeparture === undefined) {\r\n                console.log('Not Finded')\r\n            }\r\n            if (airportArrival === undefined) {\r\n                console.log('Not Finded')\r\n            }\r\n            if (passengerCountModal !== null) {\r\n                console.log('Pasc count ')\r\n            }\r\n            if (cargoWeightMount !== null) {\r\n                console.log('Pasc count ')\r\n            }\r\n            if (cargoWeightOut !== null) {\r\n                console.log('Pasc count ')\r\n            }\r\n            if (cargoWeighIn !== null) {\r\n                console.log('Pasc count ')\r\n            }\r\n            if (workType && airportArrival && airportDeparture && respEmp) {\r\n                closeCreateRouteModalHandler();\r\n                props.setGridData((prev: RequestRoutesGridType[]) => {\r\n                    let record: RequestRoutesGridType = {\r\n                        dateTime: flightDateModal?.format('YYYY-MM-DD HH:mm:ss'),\r\n                        cargoWeightOut: cargoWeightOut.toString(),\r\n                        cargoWeightMount: cargoWeightMount.toString(),\r\n                        routeId: \"\",\r\n                        passengerCount: passengerCountModal.toString(),\r\n                        workType: workType.name,\r\n                        workTypeId: workType.id.toString(),\r\n                        airportDeparture: airportDeparture.name,\r\n                        airportDepartureId: airportDeparture.id.toString(),\r\n                        cargoWeightIn: cargoWeighIn.toString(),\r\n                        id: \"\",\r\n                        employee: respEmp.fio,\r\n                        employeeId: respEmp.id.toString(),\r\n                        airportArrival: airportDeparture.name,\r\n                        airportArrivalId: airportDeparture.id.toString(),\r\n                        idFlightFilial: \"\",\r\n                        idFuelPoint: \"\"\r\n                    }\r\n                    return prev.concat(record);\r\n                })\r\n            }\r\n        }\r\n    }\r\n    const closeCreateRouteModalHandler = () => {\r\n        props.setVisible(false);\r\n        setWorkTypeModal(\"\");\r\n        setEmpRespModal(\"\");\r\n        setFlightDateModal(\"\");\r\n        setAirportDepartureModal(\"\");\r\n        setAirportArrivalModal(\"\");\r\n        setPassengerCountModal(0);\r\n        setCargoWeightMount(0);\r\n        setCargoWeightOut(0);\r\n        setCargoWeighIn(0);\r\n    }\r\n    const getEmpRespValue = (searchText: string) => {\r\n        if (employeeResponsible) {\r\n            return employeeResponsible.filter((emp: EmployeeResponsibleModel) => emp.fio.includes(searchText)).map((emp: EmployeeResponsibleModel) => ({value: emp.fio}));\r\n        }\r\n        return [];\r\n    }\r\n    const getWorkTypesValue = (searchText: string) => {\r\n        if (workTypes) {\r\n            return workTypes.filter((workType: WorkTypeModel) => workType.name.includes(searchText)).map((workType: WorkTypeModel) => ({value: workType.name}));\r\n        }\r\n        return [];\r\n    }\r\n    const getAirportsValue = (searchText: string) => {\r\n        if (airports) {\r\n            return airports.filter((airport: AirportModel) => airport.name.includes(searchText)).map((airport: AirportModel) => ({value: airport.name}));\r\n        }\r\n        return [];\r\n    }\r\n    // -----\r\n    return (\r\n        <Modal\r\n            title=\"Новый маршрут\"\r\n            okText={\"Добавить\"}\r\n            centered\r\n            open={props.visible}\r\n            onOk={() => createRouteHandler()}\r\n            onCancel={closeCreateRouteModalHandler}\r\n            width={740}\r\n        >\r\n            <Flex gap={'small'} style={{width: '100%'}}>\r\n                <Flex vertical gap={\"small\"} style={{width: '100%'}}>\r\n                    <AutoComplete\r\n                        value={workTypeModal}\r\n                        size={'large'}\r\n                        options={workTypeOptions}\r\n                        style={{width: '100%'}}\r\n                        onSearch={(text) => setWorkTypeOptions(getWorkTypesValue(text))}\r\n                        placeholder={'Выберите вид работ'}\r\n                        notFoundContent={'Виды работ не найдены'}\r\n                        onSelect={(value, option) => setWorkTypeModal(value)}\r\n                    />\r\n                    <AutoComplete\r\n                        value={empRespModal}\r\n                        size={'large'}\r\n                        options={empRespOptions}\r\n                        style={{width: '100%'}}\r\n                        onSearch={(text) => setEmpRespOptions(getEmpRespValue(text))}\r\n                        placeholder={'Выберите ответственного'}\r\n                        notFoundContent={'Ответственные не найдены'}\r\n                        onSelect={(value, option) => setEmpRespModal(value)}\r\n                    />\r\n                    <DatePicker value={flightDateModal} style={{width: '100%'}} size={'large'} showTime\r\n                                onChange={(value) => {\r\n                                    if (value)\r\n                                        setFlightDateModal(value)\r\n                                }} onOk={(value) => setFlightDateModal(value)}/>\r\n                    <AutoComplete\r\n                        value={airportDepartureModal}\r\n                        size={'large'}\r\n                        options={airportsOptions}\r\n                        style={{width: '100%'}}\r\n                        onSearch={(text) => setAirportsOptions(getAirportsValue(text))}\r\n                        placeholder={'Выберите аэропорт вылета'}\r\n                        notFoundContent={'Ответственные не найдены'}\r\n                        onSelect={(value, option) => setAirportDepartureModal(value)}\r\n                    />\r\n                    <AutoComplete\r\n                        value={airportArrivalModal}\r\n                        size={'large'}\r\n                        options={airportsOptions}\r\n                        style={{width: '100%'}}\r\n                        onSearch={(text) => setAirportsOptions(getAirportsValue(text))}\r\n                        placeholder={'Выберите аэропорт назанчения'}\r\n                        notFoundContent={'Ответственные не найдены'}\r\n                        onSelect={(value, option) => setAirportArrivalModal(value)}\r\n                    />\r\n                </Flex>\r\n                <Flex vertical gap={\"small\"} style={{width: '100%'}}>\r\n                    <InputNumber\r\n                        value={passengerCountModal}\r\n                        style={{width: '100%'}}\r\n                        size={'large'}\r\n                        min={0}\r\n                        onChange={(value) => {\r\n                            if (value)\r\n                                setPassengerCountModal(value);\r\n                        }}\r\n                        placeholder={'Введите колличество пассажиров'}\r\n                    />\r\n                    <InputNumber\r\n                        value={cargoWeightMount}\r\n                        style={{width: '100%'}}\r\n                        size={'large'}\r\n                        min={0}\r\n                        onChange={(value) => {\r\n                            if (value)\r\n                                setCargoWeightMount(value);\r\n                        }}\r\n                        placeholder={'Введите общий вес груза'}\r\n                    />\r\n                    <InputNumber\r\n                        value={cargoWeightOut}\r\n                        style={{width: '100%'}}\r\n                        size={'large'}\r\n                        min={0}\r\n                        onChange={(value) => {\r\n                            if (value)\r\n                                setCargoWeightOut(value);\r\n                        }}\r\n                        placeholder={'Введите вес груза на внешней подвеске'}\r\n                    />\r\n                    <InputNumber\r\n                        value={cargoWeighIn}\r\n                        style={{width: '100%'}}\r\n                        size={'large'}\r\n                        min={0}\r\n                        onChange={(value) => {\r\n                            if (value)\r\n                                setCargoWeighIn(value);\r\n                        }}\r\n                        placeholder={'Введите вес груза внутри физюляжа'}\r\n                    />\r\n                </Flex>\r\n            </Flex>\r\n        </Modal>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {RangeValue} from 'rc-picker/lib/interface'\r\nimport {Dayjs} from \"dayjs\";\r\nimport {\r\n    Button,\r\n    Collapse,\r\n    DatePicker,\r\n    Divider,\r\n    Flex,\r\n    Form,\r\n    message,\r\n    Modal,\r\n    Select,\r\n    Spin,\r\n    Tooltip,\r\n    Typography\r\n} from \"antd\";\r\nimport {PlusOutlined, RollbackOutlined} from \"@ant-design/icons\";\r\nimport {filialsAPI} from \"../../services/FilialsService\";\r\nimport {Navbar} from \"../../components/Layout/Header/Navbar\";\r\nimport {alignOptions, justifyOptions} from \"../../configs/constants\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n//@ts-ignore\r\nimport {ExtTreegroupedgrid} from '@sencha/ext-react-modern';\r\nimport {Ext} from \"../../index\";\r\nimport {RequestRoutesGridType} from \"./Requests.types\";\r\nimport {requestAPI} from \"../../services/RequestService\";\r\nimport {FileUploadDND} from \"../../components/Requests/FileUploadDnd/FileUploadDND\";\r\nimport {aircraftModelAPI} from \"../../services/AircraftModelService\";\r\nimport {AircraftModel} from \"../../models/AircraftModel\";\r\nimport {flightTargetAPI} from \"../../services/FlightTargetService\";\r\nimport {FlightTargetModel} from \"../../models/FlightTargetModel\";\r\nimport {empCustomerAPI} from \"../../services/EmpCustomerService\";\r\nimport {EmpCustomerModel} from \"../../models/EmpCustomerModel\";\r\nimport {UpdateFlightModal} from \"../../components/Requests/CreateRequest/UpdateFlightModal\";\r\nimport {CreateFlightModal} from \"../../components/Requests/CreateRequest/CreateFlightModal\";\r\n\r\nconst {Text} = Typography;\r\nconst {RangePicker} = DatePicker;\r\nconst dateFormat = 'YYYY-MM-DD HH:mm:ss';\r\n\r\nexport const CreateRequestScreen = () => {\r\n    // States\r\n    const [messageApi, messageContextHolder] = message.useMessage();\r\n    const [requestId, setRequestId] = useState<string>(\"\");\r\n    const [gridData, setGridData] = useState<RequestRoutesGridType[]>([]);\r\n    const [selectedRecord, setSelectedRecord] = useState<RequestRoutesGridType | null>(null);\r\n    const [createFlightModalVisible, setCreateFlightModalVisible] = useState<boolean>(false);\r\n    const [updateFlightModalVisible, setUpdateFlightModalVisible] = useState<boolean>(false);\r\n    const [flyDateStart, setFlyDateStart] = useState<Dayjs | null>(null);\r\n    const [flyDateFinish, setFlyDateFinish] = useState<Dayjs | null>(null);\r\n    const [aircraftModel, setAircraftModel] = useState<string>('');\r\n    const [flightTarget, setFlightTarget] = useState<string>('');\r\n    const [empCustomer, setEmpCustomer] = useState<string>('');\r\n    // -----\r\n\r\n    // Useful utils\r\n    let store = Ext.create('Ext.data.Store', {\r\n        data: gridData,\r\n        groupers: ['workType', 'employee'],\r\n        fields: [\r\n            {name: 'workType', type: 'string'},\r\n            {name: 'employee', type: 'string'},\r\n        ]\r\n    })\r\n    let navigate = useNavigate();\r\n    const missingField = (msg: string) => {\r\n        messageApi.warning(msg);\r\n    };\r\n    // -----\r\n\r\n    // Web requests\r\n    const [getAllFilialsRequest, {\r\n        data: filials,\r\n        isLoading: isFilialsLoading,\r\n    }] = filialsAPI.useGetAllMutation();\r\n    const [getAllAircraftModelRequest, {\r\n        data: aircraftModelData,\r\n        isLoading: isAircraftModelLoading,\r\n    }] = aircraftModelAPI.useGetAllMutation();\r\n    const [getAllFlightTargetRequest, {\r\n        data: flightTargetData,\r\n        isLoading: isFlightTargetLoading,\r\n    }] = flightTargetAPI.useGetAllMutation();\r\n    const [getAllEmpCustomerRequest, {\r\n        data: empCustomerData,\r\n        isLoading: isEmpCustomerLoading,\r\n    }] = empCustomerAPI.useGetAllMutation();\r\n    const [updateFieldRequest, {}] = requestAPI.useUpdateDateMutation();\r\n    const [createRequest, {\r\n        data: createResponse,\r\n        isLoading: isCreateRequestLoading,\r\n    }] = requestAPI.useCreateMutation();\r\n    // -----\r\n\r\n    // Effects\r\n    useEffect(() => {\r\n        getAllEmpCustomerRequest();\r\n        getAllFlightTargetRequest();\r\n        getAllAircraftModelRequest();\r\n        getAllFilialsRequest();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (selectedRecord !== null)\r\n            setUpdateFlightModalVisible(true);\r\n    }, [selectedRecord])\r\n    useEffect(() => {\r\n        if (gridData.length > 0) {\r\n            //@ts-ignore\r\n            document?.body?.querySelectorAll(\"ext-treegroupedgrid\")[0]?.cmp?.expandAll();\r\n        }\r\n    }, [gridData]);\r\n    useEffect(() => {\r\n        //@ts-ignore\r\n        document?.body?.querySelectorAll(\"ext-treegroupedgrid\")[0]?.cmp?.expandAll();\r\n    }, [updateFlightModalVisible]);\r\n    // Handlers\r\n    const backBtnHandler = () => {\r\n        return navigate(`/requests`);\r\n    }\r\n    const selectFlightRangeDateHandler = (value: RangeValue<Dayjs>) => {\r\n        if (value) {\r\n            if (value[0] && value[1]) {\r\n                setFlyDateStart(value[0]);\r\n                setFlyDateFinish(value[1]);\r\n                updateFieldRequest({\r\n                    id: requestId,\r\n                    field: \"date\",\r\n                    dateStart: value[0].format('YYYY-MM-DD HH:mm:ss'),\r\n                    dateFinish: value[1].format('YYYY-MM-DD HH:mm:ss')\r\n                });\r\n            }\r\n        }\r\n    }\r\n    const selectAircraftModelHandler = (value: string, option: any) => {\r\n        setAircraftModel(value);\r\n        updateFieldRequest({\r\n            id: requestId,\r\n            field: \"aircraft\",\r\n            idContractData: option.value,\r\n        });\r\n    }\r\n    const selectFlightTargetHandler = (value: string, option: any) => {\r\n        updateFieldRequest({\r\n            id: requestId,\r\n            field: \"target\",\r\n            idTarget: option.value,\r\n        });\r\n        setFlightTarget(value);\r\n    }\r\n    const selectEmpCustomerHandler = (value: string, option: any) => {\r\n        updateFieldRequest({\r\n            id: requestId,\r\n            field: \"empCustomer\",\r\n            idEmpCustomer: option.value,\r\n        });\r\n        setEmpCustomer(value);\r\n    }\r\n    const createRequestHandler = () => {\r\n        if (!flyDateStart || !flyDateFinish)\r\n            missingField('Вы не выбрали дату полета');\r\n        if (aircraftModel.trim().length === 0)\r\n            missingField('Вы не выбрали воздушное судно');\r\n        if (flightTarget.trim().length === 0)\r\n            missingField('Вы не выбрали цель полета');\r\n        if (flightTarget.trim().length === 0)\r\n            missingField('Вы не указали ФИО заказчика');\r\n        console.log(gridData);\r\n        createRequest({\r\n            flyDateStart: flyDateStart,\r\n            flyDateFinish: flyDateFinish,\r\n            aircraftModelId: 1,\r\n            contractDataId: 1,\r\n            flightTargetId: 1,\r\n            empCustomerId: 1,\r\n            routes: gridData\r\n        });\r\n    }\r\n    // -----\r\n\r\n    return (\r\n        <>\r\n            {messageContextHolder}\r\n            {createFlightModalVisible &&\r\n                <CreateFlightModal setGridData={setGridData} visible={createFlightModalVisible}\r\n                                   setVisible={setCreateFlightModalVisible}\r\n                />\r\n            }\r\n            {selectedRecord &&\r\n                <UpdateFlightModal setGridData={setGridData} visible={updateFlightModalVisible}\r\n                                   setVisible={setUpdateFlightModalVisible}\r\n                                   rowData={selectedRecord} setRowData={setSelectedRecord}/>\r\n            }\r\n            <Flex gap=\"small\" vertical>\r\n                <Navbar/>\r\n                {filials === undefined ?\r\n                    <Flex style={{height: window.innerHeight}} justify={justifyOptions.center}\r\n                          align={alignOptions.center}>\r\n                        <Spin size={'large'}/>\r\n                    </Flex> :\r\n                    <>\r\n                        <Flex justify={justifyOptions.flexStart}>\r\n                            <Flex gap=\"small\" vertical style={{margin: \"5px 10px 0 17px\"}}>\r\n                                <Flex gap=\"middle\" style={{margin: \"0 0 7px 0\"}}>\r\n                                    <Button size={'large'} onClick={() => {\r\n                                        Modal.confirm({\r\n                                            onOk: () => backBtnHandler(),\r\n                                            okText: 'Да',\r\n                                            title: 'Вернуться в меню?',\r\n                                            content: 'На этой странице есть изменения, которые будут потеряны, если вы решите закрыть ее.',\r\n                                            footer: (_, {OkBtn, CancelBtn}) => (\r\n                                                <>\r\n                                                    <CancelBtn/>\r\n                                                    <OkBtn/>\r\n                                                </>\r\n                                            ),\r\n                                        });\r\n                                    }} icon={<RollbackOutlined/>}/>\r\n                                    <Tooltip title={\"Создать заявку\"} placement=\"right\">\r\n                                        <Button type={'primary'} ghost size={'large'} onClick={createRequestHandler}\r\n                                                icon={<PlusOutlined/>}/>\r\n                                    </Tooltip>\r\n                                </Flex>\r\n                                <Text>Код заявки <strong>N/A</strong></Text>\r\n                                <Text><strong>Заявка создается</strong></Text>\r\n                            </Flex>\r\n                            <Divider type={'vertical'} style={{height: 237}}/>\r\n                            <Flex gap=\"small\" vertical style={{margin: \"20px 0 0 13px\"}}>\r\n                                <Form\r\n                                    style={{maxWidth: 600}}\r\n                                    // @ts-ignore\r\n                                    labelCol={{span: 8}}\r\n                                    wrapperCol={{span: 20}}\r\n                                >\r\n                                    <Form.Item label=\"Дата полета\">\r\n                                        <RangePicker\r\n                                            showTime={true}\r\n                                            value={[flyDateStart, flyDateFinish]}\r\n                                            format={dateFormat}\r\n                                            onChange={selectFlightRangeDateHandler}\r\n                                        />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"Воздушное судно\">\r\n                                        <Select\r\n                                            value={aircraftModel}\r\n                                            disabled={isAircraftModelLoading}\r\n                                            size={'middle'}\r\n                                            placeholder=\"Воздушное судно\"\r\n                                            loading={isFilialsLoading}\r\n                                            style={{width: '100%'}}\r\n                                            options={aircraftModelData?.map((aircraftModel: AircraftModel): {\r\n                                                value: string,\r\n                                                label: string\r\n                                            } => ({\r\n                                                value: aircraftModel.idContractData.toString(),\r\n                                                label: `${aircraftModel.aircraftModelName}/${aircraftModel.contractName}/${aircraftModel.airlineName}`\r\n                                            }))}\r\n                                            onSelect={selectAircraftModelHandler}\r\n                                        />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"Цель полета\">\r\n                                        <Select\r\n                                            value={flightTarget}\r\n                                            disabled={isFlightTargetLoading}\r\n                                            size={'middle'}\r\n                                            placeholder=\"Цель полета\"\r\n                                            loading={isFilialsLoading}\r\n                                            style={{width: '100%'}}\r\n                                            options={flightTargetData?.map((flightTargetModel: FlightTargetModel): {\r\n                                                value: string,\r\n                                                label: string\r\n                                            } => ({\r\n                                                value: flightTargetModel.id.toString(),\r\n                                                label: flightTargetModel.name\r\n                                            }))}\r\n                                            onSelect={selectFlightTargetHandler}\r\n                                        />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"ФИО заказчика\">\r\n                                        <Select\r\n                                            value={empCustomer}\r\n                                            disabled={isFlightTargetLoading}\r\n                                            size={'middle'}\r\n                                            placeholder=\"ФИО заказчика\"\r\n                                            loading={isFilialsLoading}\r\n                                            style={{width: '100%'}}\r\n                                            options={empCustomerData?.map((empCustomerModel: EmpCustomerModel) => ({\r\n                                                value: empCustomerModel.id.toString(),\r\n                                                label: empCustomerModel.empLastName + \" \" + empCustomerModel.empName + \" \" + empCustomerModel.empSecondName\r\n                                            }))}\r\n                                            onSelect={selectEmpCustomerHandler}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Flex>\r\n                            <Divider type={'vertical'} style={{height: 237, marginLeft: 23}}/>\r\n                            <Flex gap=\"small\" vertical style={{margin: \"5px 0 0 13px\"}}>\r\n                                {requestId &&\r\n                                    <FileUploadDND requestId={requestId}/>\r\n                                }\r\n                            </Flex>\r\n                        </Flex>\r\n                        <Collapse defaultActiveKey={['1']} items={[\r\n                            {\r\n                                key: '1',\r\n                                label: 'Плановые полеты',\r\n                                children: <>\r\n                                    <Flex wrap=\"wrap\" gap=\"small\" justify={justifyOptions.flexStart}\r\n                                          style={{margin: \"0px 0px 15px 0px\"}}>\r\n                                        <Button size={'middle'}\r\n                                                style={{width: 230}}\r\n                                                onClick={() => setCreateFlightModalVisible(true)}>Добавить\r\n                                            маршрут</Button>\r\n                                    </Flex>\r\n                                    {Ext.isDomReady &&\r\n                                        <ExtTreegroupedgrid\r\n                                            collapse={false}\r\n                                            style={{height: 440}}\r\n                                            store={store}\r\n                                            columnLines\r\n                                            grouped\r\n                                            shadow={false}\r\n                                            groupSummaryPosition={'docked'}\r\n                                            summaryPosition={'docked'}\r\n                                            onChilddoubletap={(event: any) => {\r\n                                                setSelectedRecord(event.location.record.data);\r\n                                            }}\r\n                                            columns={[\r\n                                                {\r\n                                                    text: 'Вид работ',\r\n                                                    dataIndex: 'workType',\r\n                                                    groupable: true,\r\n                                                    filterType: 'string',\r\n                                                    flex: 1,\r\n                                                    hidden: true\r\n                                                },\r\n                                                {\r\n                                                    text: 'Ответсвенный',\r\n                                                    dataIndex: 'employee',\r\n                                                    groupable: true,\r\n                                                    filterType: 'string',\r\n                                                    width: 200,\r\n                                                    hidden: true\r\n                                                },\r\n                                                {\r\n                                                    text: 'Дата и время вылета',\r\n                                                    dataIndex: 'dateTime',\r\n                                                    groupable: true,\r\n                                                    filterType: 'date',\r\n                                                    flex: 1\r\n                                                },\r\n                                                {\r\n                                                    text: 'Аэропорт вылета',\r\n                                                    dataIndex: 'airportDeparture',\r\n                                                    groupable: true,\r\n                                                    filterType: 'string',\r\n                                                    flex: 1\r\n                                                },\r\n                                                {\r\n                                                    text: 'Аэропорт назначения',\r\n                                                    dataIndex: 'airportArrival',\r\n                                                    groupable: true,\r\n                                                    filterType: 'string',\r\n                                                    flex: 1\r\n                                                },\r\n                                                {\r\n                                                    text: 'Место дозаправки',\r\n                                                    dataIndex: 'idFuelPoint',\r\n                                                    groupable: true,\r\n                                                    filterType: 'string',\r\n                                                    flex: 1\r\n                                                },\r\n                                                {\r\n                                                    text: 'Кол-во пассажиров',\r\n                                                    dataIndex: 'passengerCount',\r\n                                                    xtype: 'numbercolumn',\r\n                                                    align: 'center',\r\n                                                    filterType: 'number',\r\n                                                    flex: 1\r\n                                                },\r\n                                                {\r\n                                                    text: 'Груз всего, тонн',\r\n                                                    dataIndex: 'cargoWeightMount',\r\n                                                    xtype: 'numbercolumn',\r\n                                                    align: 'center',\r\n                                                    filterType: 'number',\r\n                                                    flex: 1\r\n                                                },\r\n                                                {\r\n                                                    text: 'Груз на внешней подвеске, тонн',\r\n                                                    dataIndex: 'cargoWeightOut',\r\n                                                    xtype: 'numbercolumn',\r\n                                                    align: 'center',\r\n                                                    filterType: 'number',\r\n                                                    flex: 1\r\n                                                },\r\n                                                {\r\n                                                    text: 'Груз внутри фюзеляжа, тонн',\r\n                                                    dataIndex: 'cargoWeightIn',\r\n                                                    xtype: 'numbercolumn',\r\n                                                    align: 'center',\r\n                                                    filterType: 'number',\r\n                                                    flex: 1\r\n                                                },\r\n                                            ]}\r\n                                            platformConfig={{\r\n                                                desktop: {\r\n                                                    plugins: {\r\n                                                        groupingpanel: true,\r\n                                                        gridfilterbar: true\r\n                                                    }\r\n                                                },\r\n                                            }}\r\n                                        >\r\n                                        </ExtTreegroupedgrid>\r\n                                    }\r\n                                </>,\r\n                            },\r\n                        ]}/>\r\n                    </>\r\n                }\r\n            </Flex>\r\n        </>\r\n    )\r\n\r\n}","import {Empty} from \"antd\";\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n            <div style={{marginTop: 400}}>\r\n                <Empty  image={Empty.PRESENTED_IMAGE_DEFAULT} description={\"Страница не найдена\"}/>\r\n        </div>)\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {Navbar} from \"../../components/Layout/Header/Navbar\";\r\nimport \"@sencha/best-react-grid/dist/themes/grui.css\";\r\nimport {Button, Flex, Select, Typography} from \"antd\";\r\nimport {justifyOptions, YEARS} from \"../../configs/constants\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n//@ts-ignore\r\nimport {ExtTreegroupedgrid} from '@sencha/ext-react-modern';\r\nimport {Ext} from \"../../index\";\r\nimport {requestHelicopterAPI} from \"../../services/RequestHelicopterService\";\r\nimport {RequestsGridType} from \"./Requests.types\";\r\n\r\nconst {Text} = Typography;\r\nexport const AllRequestsByHelicopterScreen = () => {\r\n    let navigate = useNavigate();\r\n    const [data, setData] = useState<RequestsGridType[]>([]);\r\n    const [getAllRequests, {\r\n        data: dataGetAllRequests,\r\n        isLoading: isLoadingGetAllRequests,\r\n    }] = requestHelicopterAPI.useGetAllByYearMutation();\r\n    const [year, setYear] = useState<number>(2023);\r\n    const addBtnHandler = () => {\r\n        return navigate(`create`);\r\n    };\r\n    const selectYearHandler = (value: number) => {\r\n        setYear(value);\r\n        getAllRequests(value);\r\n    };\r\n    useEffect(() => {\r\n        getAllRequests(year)\r\n    }, []);\r\n    useEffect(() => {\r\n        if (dataGetAllRequests) {\r\n            setData(dataGetAllRequests)\r\n        }\r\n    }, [dataGetAllRequests]);\r\n    let store = Ext.create('Ext.data.Store', {\r\n        data: data,\r\n        groupers: [],\r\n        fields: [\r\n            {name: 'id', type: 'int'},\r\n            {name: 'createDate', type: 'date', dateFormat: 'c'},\r\n            {name: 'filial', type: 'string'},\r\n            {name: 'nameState', type: 'string'},\r\n        ],\r\n    })\r\n    return (\r\n        <Flex gap=\"small\" vertical>\r\n            <Navbar/>\r\n            <Flex style={{margin: \"0 0 0 8px\"}} gap={\"small\"} justify={justifyOptions.center}>\r\n                <Text style={{fontSize: 22, fontWeight: 500}}>Заявки на выполнение полетов вертолетами</Text>\r\n            </Flex>\r\n            <Flex style={{margin: \"0 5px 0 5px\"}} gap={\"small\"} vertical={false} justify={justifyOptions.spaceBetween}>\r\n                <Button onClick={addBtnHandler}>Добавить</Button>\r\n                <Select\r\n                    disabled={isLoadingGetAllRequests}\r\n                    value={year}\r\n                    onChange={selectYearHandler}\r\n                    options={YEARS.map((year: number) => ({value: year, label: year.toString()}))}\r\n                />\r\n            </Flex>\r\n            <div style={{height: window.innerHeight}}>\r\n                {Ext.isDomReady &&\r\n                    <ExtTreegroupedgrid\r\n                        style={{height: '100%'}}\r\n                        store={store}\r\n                        columnLines\r\n                        grouped\r\n                        shadow={false}\r\n                        groupHeaderTpl='{name} ({group.length})'\r\n                        summaryPosition={'docked'}\r\n                        onChilddoubletap={(event: any) => {\r\n                            const id = event.location.record.data.id;\r\n                            return navigate(`${id}`);\r\n                        }}\r\n                        columns={[\r\n                            {\r\n                                text: 'Авиакомпания',\r\n                                dataIndex: 'airlineName',\r\n                                groupable: true,\r\n                                filterType: 'string',\r\n                                flex: 2\r\n                            },\r\n                            {\r\n                                text: 'Номер',\r\n                                dataIndex: 'id',\r\n                                groupable: true,\r\n                                filterType: 'string',\r\n                                flex: 1\r\n                            },\r\n                            {\r\n                                text: 'Дата',\r\n                                dataIndex: 'date',\r\n                                groupable: true,\r\n                                filterType: 'string',\r\n                                flex: 2\r\n                            },\r\n                            {\r\n                                text: 'Период: с',\r\n                                dataIndex: 'flyDateStart',\r\n                                groupable: true,\r\n                                filterType: 'string',\r\n                                flex: 2\r\n                            },\r\n                            {\r\n                                text: 'Период: по',\r\n                                dataIndex: 'flyDateFinish',\r\n                                groupable: true,\r\n                                filterType: 'string',\r\n                                flex: 2\r\n                            },\r\n                        ]}\r\n                        platformConfig={{\r\n                            desktop: {\r\n                                plugins: {\r\n                                    groupingpanel: true,\r\n                                }\r\n                            },\r\n                        }}\r\n                    >\r\n                    </ExtTreegroupedgrid>\r\n                }\r\n            </div>\r\n        </Flex>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Collapse, DatePicker, Divider, Flex, Modal, Select, Spin, Typography} from \"antd\";\r\nimport {RedoOutlined, RollbackOutlined} from \"@ant-design/icons\";\r\nimport {Navbar} from \"../../components/Layout/Header/Navbar\";\r\nimport {alignOptions, justifyOptions} from \"../../configs/constants\";\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\nimport {RangeValue} from 'rc-picker/lib/interface'\r\n//@ts-ignore\r\nimport {Column, DateColumn, ExtTreegroupedgrid, Grid} from '@sencha/ext-react-modern';\r\nimport {Ext} from \"../../index\";\r\nimport {CreateFlightModal} from \"../../components/RequestsByFilials/EditRequestByFilials/CreateFlightModal\";\r\nimport {UpdateFlightModal} from \"../../components/RequestsByFilials/EditRequestByFilials/UpdateFlightModal\";\r\nimport {RequestRoutesGridType} from \"./Requests.types\";\r\nimport dayjs, {Dayjs} from \"dayjs\";\r\nimport {airlinesAPI} from \"../../services/AirlineService\";\r\nimport {AirlineModel} from \"../../models/AirlineModel\";\r\nimport {requestHelicopterAPI} from \"../../services/RequestHelicopterService\";\r\nimport {workTypesAPI} from \"../../services/WorkTypesService\";\r\nimport {WorkTypeModel} from \"../../models/WorkTypeModel\";\r\n\r\nconst {RangePicker} = DatePicker;\r\nconst dateFormat = 'YYYY-MM-DD HH:mm:ss';\r\n\r\nconst {Text} = Typography;\r\n\r\nexport const EditRequestsByHelicopterScreen = () => {\r\n    // States\r\n    const [requestId, setRequestId] = useState<string>(\"\");\r\n    const [statusId, setStatusId] = useState<string>(\"\");\r\n    const [airline, setAirline] = useState<string>(\"\");\r\n    const [workType, setWorkType] = useState<string>(\"\");\r\n    const [gridData, setGridData] = useState<RequestRoutesGridType[]>([]);\r\n    const [selectedRecord, setSelectedRecord] = useState<RequestRoutesGridType | null>(null);\r\n    const [createFlightModalVisible, setCreateFlightModalVisible] = useState<boolean>(false);\r\n    const [updateFlightModalVisible, setUpdateFlightModalVisible] = useState<boolean>(false);\r\n    const [flyDateStart, setFlyDateStart] = useState<Dayjs | null>(null);\r\n    const [flyDateFinish, setFlyDateFinish] = useState<Dayjs | null>(null);\r\n    const [flightDate, setFlightDate] = useState<any>(\"\");\r\n    // -----\r\n\r\n    // Useful utils\r\n    let store = Ext.create('Ext.data.Store', {\r\n        data: gridData,\r\n        groupers: ['workType', 'employee'],\r\n        fields: [\r\n            {name: 'workType', type: 'string'},\r\n            {name: 'employee', type: 'string'},\r\n        ]\r\n    })\r\n    let navigate = useNavigate();\r\n    const location = useLocation();\r\n    //\r\n\r\n    // Web requests\r\n    const [getRequestById, {\r\n        data: requestData,\r\n        isLoading: isLoadingGetRequestById,\r\n    }] = requestHelicopterAPI.useGetByIdMutation();\r\n    const [getAllAirlinesRequest, {\r\n        data: airlines,\r\n        isLoading: isAirlinesLoading,\r\n    }] = airlinesAPI.useGetAllMutation();\r\n    const [getAllWorkTypesRequest, {\r\n        data: workTypes,\r\n        isLoading: isWorkTypesLoading,\r\n    }] = workTypesAPI.useGetAllMutation();\r\n    // -----\r\n\r\n    // Effects\r\n    useEffect(() => {\r\n        getAllWorkTypesRequest();\r\n        getAllAirlinesRequest();\r\n        getRequestById(location.pathname.split(\"/\")[2]); // get ID from path location\r\n    }, []);\r\n    useEffect(() => {\r\n        if (requestData) {\r\n            setRequestId(requestData.id);\r\n            setAirline(requestData.airlineId);\r\n            setWorkType(requestData.workTypeId);\r\n            setStatusId(requestData.idState);\r\n            // setGridData(requestData?.routes.map((route) => (\r\n            //     {\r\n            //         dateTime: route.dateTime,\r\n            //         cargoWeightOut: route.cargoWeightOut,\r\n            //         cargoWeightMount: route.cargoWeightMount,\r\n            //         routeId: route.routeId,\r\n            //         passengerCount: route.passengerCount,\r\n            //         workType: route.workType,\r\n            //         airportDeparture: route.airportDeparture,\r\n            //         cargoWeightIn: route.cargoWeightIn,\r\n            //         id: route.id,\r\n            //         employee: route.employee,\r\n            //         airportArrival: route.airportArrival\r\n            //     }\r\n            // )));\r\n        }\r\n    }, [requestData]);\r\n    useEffect(() => {\r\n        if (selectedRecord !== null)\r\n            setUpdateFlightModalVisible(true);\r\n    }, [selectedRecord])\r\n    useEffect(() => {\r\n        if (gridData.length > 0) {\r\n            //@ts-ignore\r\n            document?.body?.querySelectorAll(\"ext-treegroupedgrid\")[0]?.cmp?.expandAll();\r\n        }\r\n    }, [gridData]);\r\n    useEffect(() => {\r\n        //@ts-ignore\r\n        document?.body?.querySelectorAll(\"ext-treegroupedgrid\")[0]?.cmp?.expandAll();\r\n    }, [createFlightModalVisible, updateFlightModalVisible]);\r\n    // Handlers\r\n    const backBtnHandler = () => {\r\n        return navigate(`/requestsByHelicopter`);\r\n    }\r\n    const confirmHandler = () => {\r\n\r\n    }\r\n    const refresh = () => {\r\n        getRequestById(requestId);\r\n    }\r\n    const selectFlightRangeDateHandler = (value: RangeValue<Dayjs>) => {\r\n        if (value) {\r\n            if (value[0] && value[1]) {\r\n                setFlyDateStart(value[0]);\r\n                setFlyDateFinish(value[1]);\r\n                // updateFieldRequest({\r\n                //     id: requestId,\r\n                //     field: \"date\",\r\n                //     dateStart: value[0].format('YYYY-MM-DD HH:mm:ss'),\r\n                //     dateFinish: value[1].format('YYYY-MM-DD HH:mm:ss')\r\n                // });\r\n            }\r\n        }\r\n    }\r\n    // -----\r\n    return (\r\n        <>\r\n            <CreateFlightModal visible={createFlightModalVisible} setVisible={setCreateFlightModalVisible}\r\n                               refresh={getRequestById}/>\r\n            {selectedRecord &&\r\n                <UpdateFlightModal visible={updateFlightModalVisible} setVisible={setUpdateFlightModalVisible}\r\n                                   refresh={getRequestById} rowData={selectedRecord} setRowData={setSelectedRecord}/>\r\n            }\r\n            <Flex gap=\"small\" vertical>\r\n                <Navbar/>\r\n                {(airlines === undefined || requestData === undefined) ?\r\n                    <Flex style={{height: window.innerHeight}} justify={justifyOptions.center}\r\n                          align={alignOptions.center}>\r\n                        <Spin size={'large'}/>\r\n                    </Flex> :\r\n                    <>\r\n                        <Flex justify={justifyOptions.flexStart}>\r\n                            <Flex gap=\"small\" vertical style={{margin: \"5px 10px 0 17px\"}}>\r\n                                <Flex gap=\"middle\" style={{margin: \"0 0 7px 0\"}}>\r\n                                    <Button size={'large'} onClick={backBtnHandler} icon={<RollbackOutlined/>}/>\r\n                                    <Button size={'large'} onClick={refresh} icon={<RedoOutlined/>}/>\r\n                                </Flex>\r\n                                <Text>Код заявки <strong>{requestId}</strong></Text>\r\n                                <Text><strong>{requestData.nameState}</strong></Text>\r\n                                <Button size={'middle'} onClick={() => {\r\n                                    Modal.confirm({\r\n                                        title: 'Отправка на согласование',\r\n                                        okText: \"Да, отправить\",\r\n                                        onOk: () => {\r\n                                        },\r\n                                        content: 'Сформировать заявку на согласование в СОП?',\r\n                                        footer: (_, {OkBtn, CancelBtn}) => (\r\n                                            <>\r\n                                                <CancelBtn/>\r\n                                                <OkBtn/>\r\n                                            </>\r\n                                        ),\r\n                                    });\r\n                                }}>На согласование</Button>\r\n                                {requestData.nameState === 'На согласовании' &&\r\n                                    <>\r\n                                        <Button size={'middle'} onClick={() => {\r\n                                            Modal.confirm({\r\n                                                title: 'Внимание',\r\n                                                okText: \"Да, утвердить\",\r\n                                                onOk: confirmHandler,\r\n                                                content: 'Вы точно хотите утвердить заявку?',\r\n                                                footer: (_, {OkBtn, CancelBtn}) => (\r\n                                                    <>\r\n                                                        <CancelBtn/>\r\n                                                        <OkBtn/>\r\n                                                    </>\r\n                                                ),\r\n                                            });\r\n                                        }}>Утвердить</Button>\r\n                                        <Button size={'middle'} onClick={() => {\r\n                                            Modal.confirm({\r\n                                                title: 'Внимание',\r\n                                                okText: \"Да, отклонить\",\r\n                                                onOk: () => {\r\n                                                },\r\n                                                content: 'Вы точно хотите отклонить заявку?',\r\n                                                footer: (_, {OkBtn, CancelBtn}) => (\r\n                                                    <>\r\n                                                        <CancelBtn/>\r\n                                                        <OkBtn/>\r\n                                                    </>\r\n                                                ),\r\n                                            });\r\n                                        }}>Отклонить</Button>\r\n                                    </>\r\n                                }\r\n                            </Flex>\r\n                            <Divider type={'vertical'}\r\n                                     style={{height: requestData.nameState === 'Создано' ? 160 : requestData.nameState === 'Утверждено' || requestData.nameState === 'Отклонено' ? 120 : 200}}/>\r\n                            <Flex gap=\"small\" vertical style={{margin: \"5px 10px 0 17px\"}}>\r\n                                <Select\r\n                                    style={{width: '100%'}}\r\n                                    disabled={requestData.nameState === 'Утверждено'}\r\n                                    size={'middle'}\r\n                                    placeholder=\"Филиал\"\r\n                                    loading={isAirlinesLoading}\r\n                                    value={airline.toString()}\r\n                                    options={airlines.map((airline: AirlineModel): {\r\n                                        value: string,\r\n                                        label: string\r\n                                    } => ({value: airline.id.toString(), label: airline.name}))}\r\n                                    onSelect={(value) => setAirline(value)}\r\n                                />\r\n                                <Select\r\n                                    style={{width: '100%'}}\r\n                                    disabled={requestData.nameState === 'Утверждено'}\r\n                                    size={'middle'}\r\n                                    placeholder=\"Филиал\"\r\n                                    loading={isWorkTypesLoading}\r\n                                    value={workType.toString()}\r\n                                    options={workTypes?.map((workType: WorkTypeModel): {\r\n                                        value: string,\r\n                                        label: string\r\n                                    } => ({value: workType.id.toString(), label: workType.name}))}\r\n                                    onSelect={(value) => setWorkType(value)}\r\n                                />\r\n                                <DatePicker\r\n                                    defaultValue={dayjs(requestData?.date)}\r\n                                    style={{width: '100%'}}\r\n                                    size={'middle'} showTime onChange={(value) => {\r\n                                    if (value)\r\n                                        setFlightDate(value)\r\n                                }} onOk={(value) => setFlightDate(value)}/>\r\n                                <RangePicker\r\n                                    showTime={true}\r\n                                    defaultValue={[flyDateStart, flyDateFinish]}\r\n                                    value={[dayjs(requestData?.flyDateStart), dayjs(requestData?.flyDateFinish)]}\r\n                                    format={dateFormat}\r\n                                    onChange={selectFlightRangeDateHandler}\r\n                                />\r\n                            </Flex>\r\n                        </Flex>\r\n                        <Collapse defaultActiveKey={['0']} items={[\r\n                            {\r\n                                key: '0',\r\n                                label: 'Плановые полеты',\r\n                                children:\r\n                                    <>\r\n                                        <Flex wrap=\"wrap\" gap=\"small\" justify={justifyOptions.flexStart}\r\n                                              style={{margin: \"0 0 15px 0\"}}>\r\n                                            <Button disabled={requestData.nameState === 'Утверждено'} size={'middle'}\r\n                                                    style={{width: 152}}\r\n                                                    onClick={() => setCreateFlightModalVisible(true)}>Добавить\r\n                                                маршрут</Button>\r\n                                        </Flex>\r\n\r\n                                        {Ext.isDomReady &&\r\n                                            <ExtTreegroupedgrid\r\n                                                collapse={false}\r\n                                                style={{height: window.innerHeight - 325}}\r\n                                                store={store}\r\n                                                columnLines\r\n                                                grouped\r\n                                                shadow={false}\r\n\r\n                                                groupSummaryPosition={'docked'}\r\n                                                summaryPosition={'docked'}\r\n                                                onChilddoubletap={(event: any) => {\r\n                                                    if (requestData.nameState !== 'Утверждено')\r\n                                                        setSelectedRecord(event.location.record.data);\r\n                                                }}\r\n                                                columns={[\r\n                                                    {\r\n                                                        text: 'Вид работ',\r\n                                                        dataIndex: 'workType',\r\n                                                        groupable: true,\r\n                                                        filterType: 'string',\r\n                                                        flex: 1,\r\n                                                        hidden: true\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Ответсвенный',\r\n                                                        dataIndex: 'employee',\r\n                                                        groupable: true,\r\n                                                        filterType: 'string',\r\n                                                        width: 200,\r\n                                                        hidden: true\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Дата и время вылета',\r\n                                                        dataIndex: 'dateTime',\r\n                                                        groupable: true,\r\n                                                        filterType: 'date',\r\n                                                        flex: 1\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Аэропорт вылета',\r\n                                                        dataIndex: 'airportDeparture',\r\n                                                        groupable: true,\r\n                                                        filterType: 'string',\r\n                                                        flex: 1\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Аэропорт назначения',\r\n                                                        dataIndex: 'airportArrival',\r\n                                                        groupable: true,\r\n                                                        filterType: 'string',\r\n                                                        flex: 1\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Аэропорт назначения',\r\n                                                        dataIndex: 'airportArrival',\r\n                                                        groupable: true,\r\n                                                        filterType: 'string',\r\n                                                        flex: 1\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Кол-во пассажиров',\r\n                                                        dataIndex: 'passengerCount',\r\n                                                        xtype: 'numbercolumn',\r\n                                                        align: 'center',\r\n                                                        filterType: 'number',\r\n                                                        flex: 1\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Груз всего, тонн',\r\n                                                        dataIndex: 'cargoWeightMount',\r\n                                                        xtype: 'numbercolumn',\r\n                                                        align: 'center',\r\n                                                        filterType: 'number',\r\n                                                        flex: 1\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Груз на внешней подвеске, тонн',\r\n                                                        dataIndex: 'cargoWeightOut',\r\n                                                        xtype: 'numbercolumn',\r\n                                                        align: 'center',\r\n                                                        filterType: 'number',\r\n                                                        flex: 1\r\n                                                    },\r\n                                                    {\r\n                                                        text: 'Груз внутри фюзеляжа, тонн',\r\n                                                        dataIndex: 'cargoWeightIn',\r\n                                                        xtype: 'numbercolumn',\r\n                                                        align: 'center',\r\n                                                        filterType: 'number',\r\n                                                        flex: 1\r\n                                                    },\r\n                                                ]}\r\n                                                platformConfig={{\r\n                                                    desktop: {\r\n                                                        plugins: {\r\n                                                            groupingpanel: true,\r\n                                                            gridfilterbar: true\r\n                                                        }\r\n                                                    },\r\n                                                }}\r\n                                            >\r\n                                            </ExtTreegroupedgrid>\r\n                                        }\r\n                                    </>\r\n                            }]}/>\r\n                    </>\r\n                }\r\n            </Flex>\r\n        </>\r\n    )\r\n\r\n}","import {BrowserRouter, Route, Routes} from 'react-router-dom'\r\nimport React from \"react\";\r\nimport {EditRequestByFilialsScreen} from \"../screens/RequestsByFilials/EditRequestByFilialsScreen\";\r\nimport {CreateRequestByFilialsScreen} from \"../screens/RequestsByFilials/CreateRequestByFilialsScreen\";\r\nimport {AllRequestsScreen} from \"../screens/Requests/AllRequestsScreen\";\r\nimport {AllRequestsByFilialsScreen} from \"../screens/RequestsByFilials/AllRequestsByFilialsScreen\";\r\nimport {EditRequestScreen} from \"../screens/Requests/EditRequestScreen\";\r\nimport {CreateRequestScreen} from \"../screens/Requests/CreateRequestScreen\";\r\nimport {NotFound} from \"../components/Layout/NotFound\";\r\nimport {AllRequestsByHelicopterScreen} from \"../screens/RequestsByHelicopter/AllRequestsByHelicopterScreen\";\r\nimport {EditRequestsByHelicopterScreen} from \"../screens/RequestsByHelicopter/EditRequestByHelicopterScreen\";\r\n\r\nexport const Router: React.FC = () => {\r\n\r\n    return (<BrowserRouter>\r\n        <Routes>\r\n            {/* RequestsByFilials */}\r\n            <Route\r\n                path='/requestsFilials'\r\n                element={<AllRequestsByFilialsScreen/>}\r\n            />\r\n            <Route\r\n                path='/requestsFilials/:id'\r\n                element={<EditRequestByFilialsScreen/>}\r\n            />\r\n            <Route\r\n                path='/requestsFilials/create'\r\n                element={<CreateRequestByFilialsScreen/>}\r\n            />\r\n            {/* ----- */}\r\n\r\n            {/* Requests */}\r\n            <Route\r\n                path='/requests'\r\n                element={<AllRequestsScreen/>}\r\n            />\r\n            <Route\r\n                path='/requests/:id'\r\n                element={<EditRequestScreen/>}\r\n            />\r\n            <Route\r\n                path='/requests/create'\r\n                element={<CreateRequestScreen/>}\r\n            />\r\n            {/* ----- */}\r\n\r\n            {/* Requests by helicopter */}\r\n            <Route\r\n                path='/requestsByHelicopter'\r\n                element={<AllRequestsByHelicopterScreen/>}\r\n            />\r\n            <Route\r\n                path='/requestsByHelicopter/:id'\r\n                element={<EditRequestsByHelicopterScreen/>}\r\n            />\r\n            {/* ----- */}\r\n            <Route\r\n                path='*'\r\n                element={<NotFound/>}\r\n            />\r\n        </Routes>\r\n    </BrowserRouter>)\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {setupStore} from \"./store/store\";\nimport ruRU from 'antd/locale/ru_RU';\nimport {ConfigProvider} from \"antd\";\nimport {Router} from \"./configs/Router\";\nimport {Provider} from \"react-redux\";\n\nconst store = setupStore();\n//@ts-ignore\nexport const Ext = window['Ext'];\n\n// @ts-ignore\nReactDOM.render(<Provider store={store}>\n        <ConfigProvider locale={ruRU}>\n            <Router/>\n        </ConfigProvider>\n    </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}